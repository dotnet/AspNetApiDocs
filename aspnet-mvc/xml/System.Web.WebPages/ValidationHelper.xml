<Type Name="ValidationHelper" FullName="System.Web.WebPages.ValidationHelper">
  <TypeSignature Language="C#" Value="public sealed class ValidationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValidationHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebPages.ValidationHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ValidationHelper" />
  <TypeSignature Language="F#" Value="type ValidationHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.WebPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements validation for user input.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.IEnumerable&lt;string&gt; fields, params System.Web.WebPages.IValidator[] validators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Collections.Generic.IEnumerable`1&lt;string&gt; fields, class System.Web.WebPages.IValidator[] validators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.Add(System.Collections.Generic.IEnumerable{System.String},System.Web.WebPages.IValidator[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (fields As IEnumerable(Of String), ParamArray validators As IValidator())" />
      <MemberSignature Language="F#" Value="member this.Add : seq&lt;string&gt; * System.Web.WebPages.IValidator[] -&gt; unit" Usage="validationHelper.Add (fields, validators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="validators" Type="System.Web.WebPages.IValidator[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fields">The names (value of the name attribute) of the user input elements to validate.</param>
        <param name="validators">The type of validation to register for each user input element specified in <paramref name="fields" />.</param>
        <summary>Registers a list of user input elements for validation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string field, params System.Web.WebPages.IValidator[] validators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string field, class System.Web.WebPages.IValidator[] validators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (field As String, ParamArray validators As IValidator())" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Web.WebPages.IValidator[] -&gt; unit" Usage="validationHelper.Add (field, validators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
        <Parameter Name="validators" Type="System.Web.WebPages.IValidator[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="field">The name (value of the name attribute) of the user input element to validate.</param>
        <param name="validators">A list of one or more types of validation to register.</param>
        <summary>Registers a user input element for validation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFormError">
      <MemberSignature Language="C#" Value="public void AddFormError (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFormError(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.AddFormError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFormError (errorMessage As String)" />
      <MemberSignature Language="F#" Value="member this.AddFormError : string -&gt; unit" Usage="validationHelper.AddFormError errorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message.</param>
        <summary>Adds an error message.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassFor">
      <MemberSignature Language="C#" Value="public System.Web.HtmlString ClassFor (string field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HtmlString ClassFor(string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.ClassFor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClassFor (field As String) As HtmlString" />
      <MemberSignature Language="F#" Value="member this.ClassFor : string -&gt; System.Web.HtmlString" Usage="validationHelper.ClassFor field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="field">The name (value of the name attribute) of the user input element to validate.</param>
        <summary>Renders an attribute that references the CSS style definition to use when validation messages for the user input element are rendered.</summary>
        <returns>The attribute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public System.Web.HtmlString For (string field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HtmlString For(string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.For(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function For (field As String) As HtmlString" />
      <MemberSignature Language="F#" Value="member this.For : string -&gt; System.Web.HtmlString" Usage="validationHelper.For field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="field">The name (value of the name attribute) of the user input element to validate.</param>
        <summary>Renders attributes that enable client-side validation for an individual user input element.</summary>
        <returns>The attributes to render.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.ValidationHelper.FormField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormField As String" />
      <MemberSignature Language="F#" Value="member this.FormField : string" Usage="System.Web.WebPages.ValidationHelper.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the current form. This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
        <value>The name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetErrors (params string[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetErrors(string[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.GetErrors(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors (ParamArray fields As String()) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.GetErrors : string[] -&gt; seq&lt;string&gt;" Usage="validationHelper.GetErrors fields" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fields">Optional. The names (value of the name attribute) of the user input elements to get error information for. You can specify any number of element names, separated by commas. If you do not specify a list of fields, the method returns errors for all fields.</param>
        <summary>Returns a list of current validation errors, and optionally lets you specify a list of fields to check.</summary>
        <returns>The list of errors.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidCssClass">
      <MemberSignature Language="C#" Value="public static string InvalidCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.ValidationHelper.InvalidCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InvalidCssClass As String" />
      <MemberSignature Language="F#" Value="static member InvalidCssClass : string with get, set" Usage="System.Web.WebPages.ValidationHelper.InvalidCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the class that is used to specify the appearance of error-message display when errors have occurred. This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
        <value>The name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (params string[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(string[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.IsValid(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (ParamArray fields As String()) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsValid : string[] -&gt; bool" Usage="validationHelper.IsValid fields" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fields">Optional. The names (value of the name attribute) of the user input elements to check for validation errors. You can specify any number of element names, separated by commas. If you do not specify a list of fields, the method checks all elements that are registered for validation.</param>
        <summary>Determines whether the contents of the user input fields pass validation checks, and optionally lets you specify a list of fields to check.</summary>
        <returns>true if all specified field or fields pass validation checks; false if any field contains a validation error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireField">
      <MemberSignature Language="C#" Value="public void RequireField (string field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireField(string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.RequireField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireField (field As String)" />
      <MemberSignature Language="F#" Value="member this.RequireField : string -&gt; unit" Usage="validationHelper.RequireField field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="field">The name (value of the name attribute) of the user input element to validate.</param>
        <summary>Registers the specified field as one that requires user entry.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireField">
      <MemberSignature Language="C#" Value="public void RequireField (string field, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireField(string field, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.RequireField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireField (field As String, errorMessage As String)" />
      <MemberSignature Language="F#" Value="member this.RequireField : string * string -&gt; unit" Usage="validationHelper.RequireField (field, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="field">The name (value of the name attribute) of the user input element to validate.</param>
        <param name="errorMessage">The error message.</param>
        <summary>Registers the specified field as one that requires user entry and registers the specified string as the error message to display if no value is supplied.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireFields">
      <MemberSignature Language="C#" Value="public void RequireFields (params string[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireFields(string[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.RequireFields(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireFields (ParamArray fields As String())" />
      <MemberSignature Language="F#" Value="member this.RequireFields : string[] -&gt; unit" Usage="validationHelper.RequireFields fields" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fields">The names (value of the name attribute) of the user input elements to validate. You can specify any number of element names, separated by commas.</param>
        <summary>Registers the specified fields as ones that require user entry.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; Validate (params string[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; Validate(string[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.ValidationHelper.Validate(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate (ParamArray fields As String()) As IEnumerable(Of ValidationResult)" />
      <MemberSignature Language="F#" Value="member this.Validate : string[] -&gt; seq&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" Usage="validationHelper.Validate fields" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fields">Optional. The names (value of the name attribute) of the user input elements to validate. You can specify any number of element names, separated by commas. If you do not specify a list, the method validates all registered elements.</param>
        <summary>Performs validation on elements registered for validation, and optionally lets you specify a list of fields to check.</summary>
        <returns>The list of errors for the specified fields, if any validation errors occurred.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidCssClass">
      <MemberSignature Language="C#" Value="public static string ValidCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.ValidationHelper.ValidCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidCssClass As String" />
      <MemberSignature Language="F#" Value="static member ValidCssClass : string with get, set" Usage="System.Web.WebPages.ValidationHelper.ValidCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the class that is used to specify the appearance of error-message display when errors have occurred. This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
        <value>The name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
