<Type Name="RazorParser" FullName="System.Web.Razor.Parser.RazorParser">
  <TypeSignature Language="C#" Value="public class RazorParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RazorParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Parser.RazorParser" />
  <TypeSignature Language="VB.NET" Value="Public Class RazorParser" />
  <TypeSignature Language="F#" Value="type RazorParser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Represents a Razor parser.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorParser (System.Web.Razor.Parser.ParserBase codeParser, System.Web.Razor.Parser.ParserBase markupParser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Razor.Parser.ParserBase codeParser, class System.Web.Razor.Parser.ParserBase markupParser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.#ctor(System.Web.Razor.Parser.ParserBase,System.Web.Razor.Parser.ParserBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeParser As ParserBase, markupParser As ParserBase)" />
      <MemberSignature Language="F#" Value="new System.Web.Razor.Parser.RazorParser : System.Web.Razor.Parser.ParserBase * System.Web.Razor.Parser.ParserBase -&gt; System.Web.Razor.Parser.RazorParser" Usage="new System.Web.Razor.Parser.RazorParser (codeParser, markupParser)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeParser" Type="System.Web.Razor.Parser.ParserBase" />
        <Parameter Name="markupParser" Type="System.Web.Razor.Parser.ParserBase" />
      </Parameters>
      <Docs>
        <param name="codeParser">The code parser.</param>
        <param name="markupParser">The markup parser.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Initializes a new instance of the <see cref="T:System.Web.Razor.Parser.RazorParser" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, System.Web.Razor.Parser.ParserVisitor consumer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Web.Razor.Parser.ParserVisitor consumer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Web.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, consumer As ParserVisitor) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * System.Web.Razor.Parser.ParserVisitor -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * System.Web.Razor.Parser.ParserVisitor -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, consumer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="consumer" Type="System.Web.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="consumer">The consumer.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Creates a task that parses a specified object.</summary>
        <returns>The created <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{System.Web.Razor.Parser.SyntaxTree.Span},System.Action{System.Web.Razor.Parser.SyntaxTree.RazorError})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError)) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="spanCallback">The span callback.</param>
        <param name="errorCallback">The error callback.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Creates a task that parses a specified object.</summary>
        <returns>The created <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{System.Web.Razor.Parser.SyntaxTree.Span},System.Action{System.Web.Razor.Parser.SyntaxTree.RazorError},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), cancelToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback, cancelToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="spanCallback">The span callback.</param>
        <param name="errorCallback">The error callback.</param>
        <param name="cancelToken">The cancellation token.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Creates a task that parses a specified object.</summary>
        <returns>The created <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback, System.Threading.SynchronizationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback, class System.Threading.SynchronizationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{System.Web.Razor.Parser.SyntaxTree.Span},System.Action{System.Web.Razor.Parser.SyntaxTree.RazorError},System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), context As SynchronizationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; * System.Threading.SynchronizationContext -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; * System.Threading.SynchronizationContext -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;" />
        <Parameter Name="context" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="spanCallback">The span callback.</param>
        <param name="errorCallback">The error callback.</param>
        <param name="context">The context.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Creates a task that parses a specified object.</summary>
        <returns>The created <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback, System.Threading.SynchronizationContext context, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class System.Web.Razor.Parser.SyntaxTree.RazorError&gt; errorCallback, class System.Threading.SynchronizationContext context, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{System.Web.Razor.Parser.SyntaxTree.Span},System.Action{System.Web.Razor.Parser.SyntaxTree.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), context As SynchronizationContext, cancelToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; * System.Threading.SynchronizationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt; * System.Threading.SynchronizationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback, context, cancelToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;System.Web.Razor.Parser.SyntaxTree.RazorError&gt;" />
        <Parameter Name="context" Type="System.Threading.SynchronizationContext" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="spanCallback">The span callback.</param>
        <param name="errorCallback">The error callback.</param>
        <param name="context">The context.</param>
        <param name="cancelToken">The cancellation token.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Creates a task that parses a specified object.</summary>
        <returns>The created <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeMode">
      <MemberSignature Language="C#" Value="public bool DesignTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.RazorParser.DesignTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignTimeMode As Boolean" />
      <MemberSignature Language="F#" Value="member this.DesignTimeMode : bool with get, set" Usage="System.Web.Razor.Parser.RazorParser.DesignTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the design time mode.</summary>
        <value>The design time mode.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.Web.Razor.ParserResults Parse (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Razor.ParserResults Parse(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (input As TextReader) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.Web.Razor.ParserResults&#xA;override this.Parse : System.IO.TextReader -&gt; System.Web.Razor.ParserResults" Usage="razorParser.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Parses the specified object.</summary>
        <returns>The parser result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.Web.Razor.ParserResults Parse (System.Web.Razor.Text.ITextDocument input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Razor.ParserResults Parse(class System.Web.Razor.Text.ITextDocument input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.Parse(System.Web.Razor.Text.ITextDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (input As ITextDocument) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.Web.Razor.Text.ITextDocument -&gt; System.Web.Razor.ParserResults&#xA;override this.Parse : System.Web.Razor.Text.ITextDocument -&gt; System.Web.Razor.ParserResults" Usage="razorParser.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Web.Razor.Text.ITextDocument" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Parses the specified object.</summary>
        <returns>The parser result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.Web.Razor.ParserResults Parse (System.Web.Razor.Text.LookaheadTextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Razor.ParserResults Parse(class System.Web.Razor.Text.LookaheadTextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.Parse(System.Web.Razor.Text.LookaheadTextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (input As LookaheadTextReader) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.Web.Razor.Text.LookaheadTextReader -&gt; System.Web.Razor.ParserResults&#xA;override this.Parse : System.Web.Razor.Text.LookaheadTextReader -&gt; System.Web.Razor.ParserResults" Usage="razorParser.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Web.Razor.Text.LookaheadTextReader" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Parses the specified object.</summary>
        <returns>The parser result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.TextReader input, System.Web.Razor.Parser.ParserVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.TextReader input, class System.Web.Razor.Parser.ParserVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.Parse(System.IO.TextReader,System.Web.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (input As TextReader, visitor As ParserVisitor)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader * System.Web.Razor.Parser.ParserVisitor -&gt; unit&#xA;override this.Parse : System.IO.TextReader * System.Web.Razor.Parser.ParserVisitor -&gt; unit" Usage="razorParser.Parse (input, visitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="visitor" Type="System.Web.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="visitor">The visitor.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Parses the specified object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.Web.Razor.Text.LookaheadTextReader input, System.Web.Razor.Parser.ParserVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.Web.Razor.Text.LookaheadTextReader input, class System.Web.Razor.Parser.ParserVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.RazorParser.Parse(System.Web.Razor.Text.LookaheadTextReader,System.Web.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (input As LookaheadTextReader, visitor As ParserVisitor)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.Web.Razor.Text.LookaheadTextReader * System.Web.Razor.Parser.ParserVisitor -&gt; unit&#xA;override this.Parse : System.Web.Razor.Text.LookaheadTextReader * System.Web.Razor.Parser.ParserVisitor -&gt; unit" Usage="razorParser.Parse (input, visitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Web.Razor.Text.LookaheadTextReader" />
        <Parameter Name="visitor" Type="System.Web.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="input">The object to parse.</param>
        <param name="visitor">The visitor.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Parses the specified object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
