<Type Name="CSharpCodeParser" FullName="System.Web.Razor.Parser.CSharpCodeParser">
  <TypeSignature Language="C#" Value="public class CSharpCodeParser : System.Web.Razor.Parser.TokenizerBackedParser&lt;System.Web.Razor.Tokenizer.CSharpTokenizer,System.Web.Razor.Tokenizer.Symbols.CSharpSymbol,System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpCodeParser extends System.Web.Razor.Parser.TokenizerBackedParser`3&lt;class System.Web.Razor.Tokenizer.CSharpTokenizer, class System.Web.Razor.Tokenizer.Symbols.CSharpSymbol, valuetype System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Parser.CSharpCodeParser" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpCodeParser&#xA;Inherits TokenizerBackedParser(Of CSharpTokenizer, CSharpSymbol, CSharpSymbolType)" />
  <TypeSignature Language="F#" Value="type CSharpCodeParser = class&#xA;    inherit TokenizerBackedParser&lt;CSharpTokenizer, CSharpSymbol, CSharpSymbolType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Razor.Parser.TokenizerBackedParser&lt;System.Web.Razor.Tokenizer.CSharpTokenizer,System.Web.Razor.Tokenizer.Symbols.CSharpSymbol,System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTokenizer">System.Web.Razor.Tokenizer.CSharpTokenizer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbol">System.Web.Razor.Tokenizer.Symbols.CSharpSymbol</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbolType">System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Represents a C sharp code parser.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCodeParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Initializes a new instance of the <see cref="T:System.Web.Razor.Parser.CSharpCodeParser" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptIf">
      <MemberSignature Language="C#" Value="protected internal bool AcceptIf (System.Web.Razor.Tokenizer.Symbols.CSharpKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool AcceptIf(valuetype System.Web.Razor.Tokenizer.Symbols.CSharpKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.AcceptIf(System.Web.Razor.Tokenizer.Symbols.CSharpKeyword)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function AcceptIf (keyword As CSharpKeyword) As Boolean" />
      <MemberSignature Language="F#" Value="member this.AcceptIf : System.Web.Razor.Tokenizer.Symbols.CSharpKeyword -&gt; bool" Usage="cSharpCodeParser.AcceptIf keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.CSharpKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword to accept.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the parser accepts the ‘IF’ keyword.</summary>
        <returns>true if the parser accepts the ‘IF’ keyword; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertDirective">
      <MemberSignature Language="C#" Value="protected void AssertDirective (string directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AssertDirective(string directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.AssertDirective(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AssertDirective (directive As String)" />
      <MemberSignature Language="F#" Value="member this.AssertDirective : string -&gt; unit" Usage="cSharpCodeParser.AssertDirective directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.Conditional("DEBUG")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.Conditional("DEBUG")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directive">The directive code to assert.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Asserts a directive code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="At">
      <MemberSignature Language="C#" Value="protected internal bool At (System.Web.Razor.Tokenizer.Symbols.CSharpKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool At(valuetype System.Web.Razor.Tokenizer.Symbols.CSharpKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.At(System.Web.Razor.Tokenizer.Symbols.CSharpKeyword)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function At (keyword As CSharpKeyword) As Boolean" />
      <MemberSignature Language="F#" Value="override this.At : System.Web.Razor.Tokenizer.Symbols.CSharpKeyword -&gt; bool" Usage="cSharpCodeParser.At keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.CSharpKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code contains ‘AT’ keyword.</summary>
        <returns>true if the code contains ‘AT’ keyword; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTypeDirective">
      <MemberSignature Language="C#" Value="protected void BaseTypeDirective (string noTypeNameError, Func&lt;string,System.Web.Razor.Generator.SpanCodeGenerator&gt; createCodeGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseTypeDirective(string noTypeNameError, class System.Func`2&lt;string, class System.Web.Razor.Generator.SpanCodeGenerator&gt; createCodeGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.BaseTypeDirective(System.String,System.Func{System.String,System.Web.Razor.Generator.SpanCodeGenerator})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseTypeDirective (noTypeNameError As String, createCodeGenerator As Func(Of String, SpanCodeGenerator))" />
      <MemberSignature Language="F#" Value="member this.BaseTypeDirective : string * Func&lt;string, System.Web.Razor.Generator.SpanCodeGenerator&gt; -&gt; unit" Usage="cSharpCodeParser.BaseTypeDirective (noTypeNameError, createCodeGenerator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noTypeNameError" Type="System.String" />
        <Parameter Name="createCodeGenerator" Type="System.Func&lt;System.String,System.Web.Razor.Generator.SpanCodeGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="noTypeNameError">The no type name error.</param>
        <param name="createCodeGenerator">The create code generator.</param>
        <summary>Indicates the base type directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionsDirective">
      <MemberSignature Language="C#" Value="protected virtual void FunctionsDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FunctionsDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.FunctionsDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FunctionsDirective ()" />
      <MemberSignature Language="F#" Value="abstract member FunctionsDirective : unit -&gt; unit&#xA;override this.FunctionsDirective : unit -&gt; unit" Usage="cSharpCodeParser.FunctionsDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the functions directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected override void HandleEmbeddedTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleEmbeddedTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.HandleEmbeddedTransition" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleEmbeddedTransition ()" />
      <MemberSignature Language="F#" Value="override this.HandleEmbeddedTransition : unit -&gt; unit" Usage="cSharpCodeParser.HandleEmbeddedTransition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the code that handles embedded transition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelperDirective">
      <MemberSignature Language="C#" Value="protected virtual void HelperDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HelperDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.HelperDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HelperDirective ()" />
      <MemberSignature Language="F#" Value="abstract member HelperDirective : unit -&gt; unit&#xA;override this.HelperDirective : unit -&gt; unit" Usage="cSharpCodeParser.HelperDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates a helper directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritsDirective">
      <MemberSignature Language="C#" Value="protected virtual void InheritsDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InheritsDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.InheritsDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InheritsDirective ()" />
      <MemberSignature Language="F#" Value="abstract member InheritsDirective : unit -&gt; unit&#xA;override this.InheritsDirective : unit -&gt; unit" Usage="cSharpCodeParser.InheritsDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates which class the application will derive the view from, and can therefore ensure proper type checking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritsDirectiveCore">
      <MemberSignature Language="C#" Value="protected void InheritsDirectiveCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InheritsDirectiveCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.InheritsDirectiveCore" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InheritsDirectiveCore ()" />
      <MemberSignature Language="F#" Value="member this.InheritsDirectiveCore : unit -&gt; unit" Usage="cSharpCodeParser.InheritsDirectiveCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Inherits a directive core.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAtEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected override bool IsAtEmbeddedTransition (bool allowTemplatesAndComments, bool allowTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsAtEmbeddedTransition(bool allowTemplatesAndComments, bool allowTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.IsAtEmbeddedTransition(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsAtEmbeddedTransition (allowTemplatesAndComments As Boolean, allowTransitions As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="override this.IsAtEmbeddedTransition : bool * bool -&gt; bool" Usage="cSharpCodeParser.IsAtEmbeddedTransition (allowTemplatesAndComments, allowTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowTemplatesAndComments" Type="System.Boolean" />
        <Parameter Name="allowTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowTemplatesAndComments">true to allow templates and comments; otherwise, false.</param>
        <param name="allowTransitions">true to allow transitions; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is at embedded transition.</summary>
        <returns>true if the code is at embedded transition; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNested">
      <MemberSignature Language="C#" Value="public bool IsNested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNested" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.CSharpCodeParser.IsNested" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNested As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNested : bool with get, set" Usage="System.Web.Razor.Parser.CSharpCodeParser.IsNested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets or sets a value that indicates whether the code is nested.</summary>
        <value>true if the code is nested; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpacingToken">
      <MemberSignature Language="C#" Value="protected static Func&lt;System.Web.Razor.Tokenizer.Symbols.CSharpSymbol,bool&gt; IsSpacingToken (bool includeNewLines, bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Func`2&lt;class System.Web.Razor.Tokenizer.Symbols.CSharpSymbol, bool&gt; IsSpacingToken(bool includeNewLines, bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.IsSpacingToken(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsSpacingToken (includeNewLines As Boolean, includeComments As Boolean) As Func(Of CSharpSymbol, Boolean)" />
      <MemberSignature Language="F#" Value="static member IsSpacingToken : bool * bool -&gt; Func&lt;System.Web.Razor.Tokenizer.Symbols.CSharpSymbol, bool&gt;" Usage="System.Web.Razor.Parser.CSharpCodeParser.IsSpacingToken (includeNewLines, includeComments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Web.Razor.Tokenizer.Symbols.CSharpSymbol,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeNewLines" Type="System.Boolean" />
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeNewLines">true to include new lines; otherwise, false.</param>
        <param name="includeComments">true to include comments; otherwise, false.</param>
        <summary>Indicates whether the lines and comments is spacing token.</summary>
        <returns>The function that indicates the spacing token.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.ISet&lt;string&gt; Keywords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; Keywords" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.CSharpCodeParser.Keywords" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Keywords As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.Keywords : System.Collections.Generic.ISet&lt;string&gt;" Usage="System.Web.Razor.Parser.CSharpCodeParser.Keywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets or sets the C sharp language keywords.</summary>
        <value>The C sharp language keywords.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="protected override System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.CSharpTokenizer,System.Web.Razor.Tokenizer.Symbols.CSharpSymbol,System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt; Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.LanguageCharacteristics`3&lt;class System.Web.Razor.Tokenizer.CSharpTokenizer, class System.Web.Razor.Tokenizer.Symbols.CSharpSymbol, valuetype System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt; Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.CSharpCodeParser.Language" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Language As LanguageCharacteristics(Of CSharpTokenizer, CSharpSymbol, CSharpSymbolType)" />
      <MemberSignature Language="F#" Value="member this.Language : System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.CSharpTokenizer, System.Web.Razor.Tokenizer.Symbols.CSharpSymbol, System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;" Usage="System.Web.Razor.Parser.CSharpCodeParser.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.CSharpTokenizer,System.Web.Razor.Tokenizer.Symbols.CSharpSymbol,System.Web.Razor.Tokenizer.Symbols.CSharpSymbolType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the specific language for parsing.</summary>
        <value>The specific language for parsing.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutDirective">
      <MemberSignature Language="C#" Value="protected virtual void LayoutDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LayoutDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.LayoutDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LayoutDirective ()" />
      <MemberSignature Language="F#" Value="abstract member LayoutDirective : unit -&gt; unit&#xA;override this.LayoutDirective : unit -&gt; unit" Usage="cSharpCodeParser.LayoutDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the layout directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapDirectives">
      <MemberSignature Language="C#" Value="protected void MapDirectives (Action handler, params string[] directives);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MapDirectives(class System.Action handler, string[] directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.MapDirectives(System.Action,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MapDirectives (handler As Action, ParamArray directives As String())" />
      <MemberSignature Language="F#" Value="member this.MapDirectives : Action * string[] -&gt; unit" Usage="cSharpCodeParser.MapDirectives (handler, directives)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action" />
        <Parameter Name="directives" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">The handler.</param>
        <param name="directives">The directives.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Maps the given directives.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParser">
      <MemberSignature Language="C#" Value="protected override System.Web.Razor.Parser.ParserBase OtherParser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.ParserBase OtherParser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.CSharpCodeParser.OtherParser" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property OtherParser As ParserBase" />
      <MemberSignature Language="F#" Value="member this.OtherParser : System.Web.Razor.Parser.ParserBase" Usage="System.Web.Razor.Parser.CSharpCodeParser.OtherParser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the other parser used for the code.</summary>
        <value>The other parser used for the code.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSpanBeforeRazorComment">
      <MemberSignature Language="C#" Value="protected override void OutputSpanBeforeRazorComment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OutputSpanBeforeRazorComment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.OutputSpanBeforeRazorComment" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OutputSpanBeforeRazorComment ()" />
      <MemberSignature Language="F#" Value="override this.OutputSpanBeforeRazorComment : unit -&gt; unit" Usage="cSharpCodeParser.OutputSpanBeforeRazorComment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Spans the output of the parsing before the comment.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBlock">
      <MemberSignature Language="C#" Value="public override void ParseBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.ParseBlock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseBlock ()" />
      <MemberSignature Language="F#" Value="override this.ParseBlock : unit -&gt; unit" Usage="cSharpCodeParser.ParseBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Blocks the parsing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedDirective">
      <MemberSignature Language="C#" Value="protected virtual void ReservedDirective (bool topLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReservedDirective(bool topLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.ReservedDirective(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReservedDirective (topLevel As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ReservedDirective : bool -&gt; unit&#xA;override this.ReservedDirective : bool -&gt; unit" Usage="cSharpCodeParser.ReservedDirective topLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="topLevel">Determines whether the directive is a top level.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the reserved directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionDirective">
      <MemberSignature Language="C#" Value="protected virtual void SectionDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SectionDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.SectionDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SectionDirective ()" />
      <MemberSignature Language="F#" Value="abstract member SectionDirective : unit -&gt; unit&#xA;override this.SectionDirective : unit -&gt; unit" Usage="cSharpCodeParser.SectionDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates a section directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStateDirective">
      <MemberSignature Language="C#" Value="protected virtual void SessionStateDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SessionStateDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.SessionStateDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SessionStateDirective ()" />
      <MemberSignature Language="F#" Value="abstract member SessionStateDirective : unit -&gt; unit&#xA;override this.SessionStateDirective : unit -&gt; unit" Usage="cSharpCodeParser.SessionStateDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates a session state directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStateDirectiveCore">
      <MemberSignature Language="C#" Value="protected void SessionStateDirectiveCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SessionStateDirectiveCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.SessionStateDirectiveCore" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SessionStateDirectiveCore ()" />
      <MemberSignature Language="F#" Value="member this.SessionStateDirectiveCore : unit -&gt; unit" Usage="cSharpCodeParser.SessionStateDirectiveCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the session state directive core.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStateTypeDirective">
      <MemberSignature Language="C#" Value="protected void SessionStateTypeDirective (string noValueError, Func&lt;string,string,System.Web.Razor.Generator.SpanCodeGenerator&gt; createCodeGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SessionStateTypeDirective(string noValueError, class System.Func`3&lt;string, string, class System.Web.Razor.Generator.SpanCodeGenerator&gt; createCodeGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.SessionStateTypeDirective(System.String,System.Func{System.String,System.String,System.Web.Razor.Generator.SpanCodeGenerator})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SessionStateTypeDirective (noValueError As String, createCodeGenerator As Func(Of String, String, SpanCodeGenerator))" />
      <MemberSignature Language="F#" Value="member this.SessionStateTypeDirective : string * Func&lt;string, string, System.Web.Razor.Generator.SpanCodeGenerator&gt; -&gt; unit" Usage="cSharpCodeParser.SessionStateTypeDirective (noValueError, createCodeGenerator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noValueError" Type="System.String" />
        <Parameter Name="createCodeGenerator" Type="System.Func&lt;System.String,System.String,System.Web.Razor.Generator.SpanCodeGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="noValueError">The no value error.</param>
        <param name="createCodeGenerator">The create code generator.</param>
        <summary>Indicates the directive for session state type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetDirectiveHandler">
      <MemberSignature Language="C#" Value="protected bool TryGetDirectiveHandler (string directive, out Action handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryGetDirectiveHandler(string directive, [out] class System.Action&amp; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.TryGetDirectiveHandler(System.String,System.Action@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function TryGetDirectiveHandler (directive As String, ByRef handler As Action) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetDirectiveHandler : string * Action -&gt; bool" Usage="cSharpCodeParser.TryGetDirectiveHandler (directive, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
        <Parameter Name="handler" Type="System.Action" RefType="out" />
      </Parameters>
      <Docs>
        <param name="directive">The directive.</param>
        <param name="handler">The handler.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets a directive handler.</summary>
        <returns>true if successful; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidSessionStateValue">
      <MemberSignature Language="C#" Value="protected virtual bool ValidSessionStateValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ValidSessionStateValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.CSharpCodeParser.ValidSessionStateValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ValidSessionStateValue () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ValidSessionStateValue : unit -&gt; bool&#xA;override this.ValidSessionStateValue : unit -&gt; bool" Usage="cSharpCodeParser.ValidSessionStateValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the value of the session state is valid.</summary>
        <returns>true if the value of the session state is valid; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
