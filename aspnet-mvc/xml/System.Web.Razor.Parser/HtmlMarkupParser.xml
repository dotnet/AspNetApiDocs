<Type Name="HtmlMarkupParser" FullName="System.Web.Razor.Parser.HtmlMarkupParser">
  <TypeSignature Language="C#" Value="public class HtmlMarkupParser : System.Web.Razor.Parser.TokenizerBackedParser&lt;System.Web.Razor.Tokenizer.HtmlTokenizer,System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlMarkupParser extends System.Web.Razor.Parser.TokenizerBackedParser`3&lt;class System.Web.Razor.Tokenizer.HtmlTokenizer, class System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, valuetype System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Parser.HtmlMarkupParser" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlMarkupParser&#xA;Inherits TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)" />
  <TypeSignature Language="F#" Value="type HtmlMarkupParser = class&#xA;    inherit TokenizerBackedParser&lt;HtmlTokenizer, HtmlSymbol, HtmlSymbolType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Razor.Parser.TokenizerBackedParser&lt;System.Web.Razor.Tokenizer.HtmlTokenizer,System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTokenizer">System.Web.Razor.Tokenizer.HtmlTokenizer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbol">System.Web.Razor.Tokenizer.Symbols.HtmlSymbol</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbolType">System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Represents a parser specifically for parsing HTML markup.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlMarkupParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Initializes a new instance of the <see cref="T:System.Web.Razor.Parser.HtmlMarkupParser" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildSpan">
      <MemberSignature Language="C#" Value="public override void BuildSpan (System.Web.Razor.Parser.SyntaxTree.SpanBuilder span, System.Web.Razor.Text.SourceLocation start, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BuildSpan(class System.Web.Razor.Parser.SyntaxTree.SpanBuilder span, valuetype System.Web.Razor.Text.SourceLocation start, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.BuildSpan(System.Web.Razor.Parser.SyntaxTree.SpanBuilder,System.Web.Razor.Text.SourceLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BuildSpan (span As SpanBuilder, start As SourceLocation, content As String)" />
      <MemberSignature Language="F#" Value="override this.BuildSpan : System.Web.Razor.Parser.SyntaxTree.SpanBuilder * System.Web.Razor.Text.SourceLocation * string -&gt; unit" Usage="htmlMarkupParser.BuildSpan (span, start, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.Web.Razor.Parser.SyntaxTree.SpanBuilder" />
        <Parameter Name="start" Type="System.Web.Razor.Text.SourceLocation" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="span">The span builder used to build the span.</param>
        <param name="start">The start location.</param>
        <param name="content">The span content.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Builds the span for the given content using the specified span builder.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpacingToken">
      <MemberSignature Language="C#" Value="protected static Func&lt;System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,bool&gt; IsSpacingToken (bool includeNewLines);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Func`2&lt;class System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, bool&gt; IsSpacingToken(bool includeNewLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.IsSpacingToken(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsSpacingToken (includeNewLines As Boolean) As Func(Of HtmlSymbol, Boolean)" />
      <MemberSignature Language="F#" Value="static member IsSpacingToken : bool -&gt; Func&lt;System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, bool&gt;" Usage="System.Web.Razor.Parser.HtmlMarkupParser.IsSpacingToken includeNewLines" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeNewLines" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeNewLines">true to indicate that new lines are considered as spacing token; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Returns the function delegate used to determine the token used for HTML spacing.</summary>
        <returns>The function delegate used to determine the token used for HTML spacing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="protected override System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.HtmlTokenizer,System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt; Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.LanguageCharacteristics`3&lt;class System.Web.Razor.Tokenizer.HtmlTokenizer, class System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, valuetype System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt; Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.HtmlMarkupParser.Language" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Language As LanguageCharacteristics(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)" />
      <MemberSignature Language="F#" Value="member this.Language : System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.HtmlTokenizer, System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt;" Usage="System.Web.Razor.Parser.HtmlMarkupParser.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.HtmlTokenizer,System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets the instance that defines the characteristics of HTML language.</summary>
        <value>The instance that defines the characteristics of HTML language.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParser">
      <MemberSignature Language="C#" Value="protected override System.Web.Razor.Parser.ParserBase OtherParser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.ParserBase OtherParser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.HtmlMarkupParser.OtherParser" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property OtherParser As ParserBase" />
      <MemberSignature Language="F#" Value="member this.OtherParser : System.Web.Razor.Parser.ParserBase" Usage="System.Web.Razor.Parser.HtmlMarkupParser.OtherParser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets the other parser for parsing HTML markup.</summary>
        <value>The other parser for parsing HTML markup.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSpanBeforeRazorComment">
      <MemberSignature Language="C#" Value="protected override void OutputSpanBeforeRazorComment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OutputSpanBeforeRazorComment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.OutputSpanBeforeRazorComment" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OutputSpanBeforeRazorComment ()" />
      <MemberSignature Language="F#" Value="override this.OutputSpanBeforeRazorComment : unit -&gt; unit" Usage="htmlMarkupParser.OutputSpanBeforeRazorComment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Builds the span before the Razor comment.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBlock">
      <MemberSignature Language="C#" Value="public override void ParseBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.ParseBlock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseBlock ()" />
      <MemberSignature Language="F#" Value="override this.ParseBlock : unit -&gt; unit" Usage="htmlMarkupParser.ParseBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Parses the next HTML block.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDocument">
      <MemberSignature Language="C#" Value="public override void ParseDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.ParseDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseDocument ()" />
      <MemberSignature Language="F#" Value="override this.ParseDocument : unit -&gt; unit" Usage="htmlMarkupParser.ParseDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Parses the HTML document.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseSection">
      <MemberSignature Language="C#" Value="public override void ParseSection (Tuple&lt;string,string&gt; nestingSequences, bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseSection(class System.Tuple`2&lt;string, string&gt; nestingSequences, bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.ParseSection(System.Tuple{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseSection (nestingSequences As Tuple(Of String, String), caseSensitive As Boolean)" />
      <MemberSignature Language="F#" Value="override this.ParseSection : string * string * bool -&gt; unit" Usage="htmlMarkupParser.ParseSection (nestingSequences, caseSensitive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestingSequences" Type="System.Tuple&lt;System.String,System.String&gt;" />
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nestingSequences">A tuple that specifies the markup nesting sequences.</param>
        <param name="caseSensitive">true to indicate case-sensitive parsing; otherwise, false.</param>
        <summary>Parses a section with markups given by the nesting sequences.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToAndParseCode">
      <MemberSignature Language="C#" Value="protected void SkipToAndParseCode (Func&lt;System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SkipToAndParseCode(class System.Func`2&lt;class System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.SkipToAndParseCode(System.Func{System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SkipToAndParseCode (condition As Func(Of HtmlSymbol, Boolean))" />
      <MemberSignature Language="F#" Value="member this.SkipToAndParseCode : Func&lt;System.Web.Razor.Tokenizer.Symbols.HtmlSymbol, bool&gt; -&gt; unit" Usage="htmlMarkupParser.SkipToAndParseCode condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Web.Razor.Tokenizer.Symbols.HtmlSymbol,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">A function delegate that defines the condition.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Skips the parse until the specified condition is meet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToAndParseCode">
      <MemberSignature Language="C#" Value="protected void SkipToAndParseCode (System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SkipToAndParseCode(valuetype System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.HtmlMarkupParser.SkipToAndParseCode(System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SkipToAndParseCode (type As HtmlSymbolType)" />
      <MemberSignature Language="F#" Value="member this.SkipToAndParseCode : System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType -&gt; unit" Usage="htmlMarkupParser.SkipToAndParseCode type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Web.Razor.Tokenizer.Symbols.HtmlSymbolType" />
      </Parameters>
      <Docs>
        <param name="type">The HTML symbol type.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Skips the parse until the specified HTML symbol type is encountered.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VoidElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; VoidElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; VoidElements" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.HtmlMarkupParser.VoidElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VoidElements As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.VoidElements : System.Collections.Generic.ISet&lt;string&gt;" Usage="System.Web.Razor.Parser.HtmlMarkupParser.VoidElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code. Gets the HTML tags that are considered as void.</summary>
        <value>The HTML tags that are considered as void.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
