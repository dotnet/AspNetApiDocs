<Type Name="VBCodeParser" FullName="System.Web.Razor.Parser.VBCodeParser">
  <TypeSignature Language="C#" Value="public class VBCodeParser : System.Web.Razor.Parser.TokenizerBackedParser&lt;System.Web.Razor.Tokenizer.VBTokenizer,System.Web.Razor.Tokenizer.Symbols.VBSymbol,System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VBCodeParser extends System.Web.Razor.Parser.TokenizerBackedParser`3&lt;class System.Web.Razor.Tokenizer.VBTokenizer, class System.Web.Razor.Tokenizer.Symbols.VBSymbol, valuetype System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.Parser.VBCodeParser" />
  <TypeSignature Language="VB.NET" Value="Public Class VBCodeParser&#xA;Inherits TokenizerBackedParser(Of VBTokenizer, VBSymbol, VBSymbolType)" />
  <TypeSignature Language="F#" Value="type VBCodeParser = class&#xA;    inherit TokenizerBackedParser&lt;VBTokenizer, VBSymbol, VBSymbolType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Razor.Parser.TokenizerBackedParser&lt;System.Web.Razor.Tokenizer.VBTokenizer,System.Web.Razor.Tokenizer.Symbols.VBSymbol,System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTokenizer">System.Web.Razor.Tokenizer.VBTokenizer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbol">System.Web.Razor.Tokenizer.Symbols.VBSymbol</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbolType">System.Web.Razor.Tokenizer.Symbols.VBSymbolType</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Represents a Visual Basic code parser.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Initializes a new instance of the <see cref="T:System.Web.Razor.Parser.VBCodeParser" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptVBSpaces">
      <MemberSignature Language="C#" Value="protected void AcceptVBSpaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AcceptVBSpaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.AcceptVBSpaces" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AcceptVBSpaces ()" />
      <MemberSignature Language="F#" Value="member this.AcceptVBSpaces : unit -&gt; unit" Usage="vBCodeParser.AcceptVBSpaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Accepts spaces in the VB code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="protected void Assert (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Assert(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.Assert(System.Web.Razor.Tokenizer.Symbols.VBKeyword)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Assert (keyword As VBKeyword)" />
      <MemberSignature Language="F#" Value="override this.Assert : System.Web.Razor.Tokenizer.Symbols.VBKeyword -&gt; unit" Usage="vBCodeParser.Assert keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.Conditional("DEBUG")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.Conditional("DEBUG")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Checks for a condition and displays a keyword in the code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertDirective">
      <MemberSignature Language="C#" Value="protected void AssertDirective (string directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AssertDirective(string directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.AssertDirective(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AssertDirective (directive As String)" />
      <MemberSignature Language="F#" Value="member this.AssertDirective : string -&gt; unit" Usage="vBCodeParser.AssertDirective directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.Conditional("DEBUG")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.Conditional("DEBUG")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directive">The directive to assert.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Asserts the given directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="At">
      <MemberSignature Language="C#" Value="protected bool At (string directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool At(string directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.At(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function At (directive As String) As Boolean" />
      <MemberSignature Language="F#" Value="override this.At : string -&gt; bool" Usage="vBCodeParser.At directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directive">The directive.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the directive is ‘AT’ directive.</summary>
        <returns>true if the directive is an ‘AT’ directive; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="At">
      <MemberSignature Language="C#" Value="protected bool At (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool At(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.At(System.Web.Razor.Tokenizer.Symbols.VBKeyword)" />
      <MemberSignature Language="VB.NET" Value="Protected Function At (keyword As VBKeyword) As Boolean" />
      <MemberSignature Language="F#" Value="override this.At : System.Web.Razor.Tokenizer.Symbols.VBKeyword -&gt; bool" Usage="vBCodeParser.At keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the given keyword is ‘AT’.</summary>
        <returns>true if the given keyword is ‘AT’; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminatedDirective">
      <MemberSignature Language="C#" Value="protected virtual Func&lt;bool&gt; EndTerminatedDirective (string directive, System.Web.Razor.Parser.SyntaxTree.BlockType blockType, System.Web.Razor.Generator.SpanCodeGenerator codeGenerator, bool allowMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Func`1&lt;bool&gt; EndTerminatedDirective(string directive, valuetype System.Web.Razor.Parser.SyntaxTree.BlockType blockType, class System.Web.Razor.Generator.SpanCodeGenerator codeGenerator, bool allowMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.EndTerminatedDirective(System.String,System.Web.Razor.Parser.SyntaxTree.BlockType,System.Web.Razor.Generator.SpanCodeGenerator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndTerminatedDirective (directive As String, blockType As BlockType, codeGenerator As SpanCodeGenerator, allowMarkup As Boolean) As Func(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EndTerminatedDirective : string * System.Web.Razor.Parser.SyntaxTree.BlockType * System.Web.Razor.Generator.SpanCodeGenerator * bool -&gt; Func&lt;bool&gt;&#xA;override this.EndTerminatedDirective : string * System.Web.Razor.Parser.SyntaxTree.BlockType * System.Web.Razor.Generator.SpanCodeGenerator * bool -&gt; Func&lt;bool&gt;" Usage="vBCodeParser.EndTerminatedDirective (directive, blockType, codeGenerator, allowMarkup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
        <Parameter Name="blockType" Type="System.Web.Razor.Parser.SyntaxTree.BlockType" />
        <Parameter Name="codeGenerator" Type="System.Web.Razor.Generator.SpanCodeGenerator" />
        <Parameter Name="allowMarkup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directive">The directive.</param>
        <param name="blockType">The block type.</param>
        <param name="codeGenerator">The code generator.</param>
        <param name="allowMarkup">true to allow markup; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Ends a terminated directive.</summary>
        <returns>The function that ends the terminated directive.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminatedDirectiveBody">
      <MemberSignature Language="C#" Value="protected virtual bool EndTerminatedDirectiveBody (string directive, System.Web.Razor.Text.SourceLocation blockStart, bool allowAllTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EndTerminatedDirectiveBody(string directive, valuetype System.Web.Razor.Text.SourceLocation blockStart, bool allowAllTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.EndTerminatedDirectiveBody(System.String,System.Web.Razor.Text.SourceLocation,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndTerminatedDirectiveBody (directive As String, blockStart As SourceLocation, allowAllTransitions As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndTerminatedDirectiveBody : string * System.Web.Razor.Text.SourceLocation * bool -&gt; bool&#xA;override this.EndTerminatedDirectiveBody : string * System.Web.Razor.Text.SourceLocation * bool -&gt; bool" Usage="vBCodeParser.EndTerminatedDirectiveBody (directive, blockStart, allowAllTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
        <Parameter Name="blockStart" Type="System.Web.Razor.Text.SourceLocation" />
        <Parameter Name="allowAllTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directive">The directive.</param>
        <param name="blockStart">The block start.</param>
        <param name="allowAllTransitions">true to allow all transitions; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the termination of directive body is ended.</summary>
        <returns>true if the termination of directive body is ended; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminatedStatement">
      <MemberSignature Language="C#" Value="protected virtual Func&lt;bool&gt; EndTerminatedStatement (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword, bool supportsExit, bool supportsContinue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Func`1&lt;bool&gt; EndTerminatedStatement(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword, bool supportsExit, bool supportsContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.EndTerminatedStatement(System.Web.Razor.Tokenizer.Symbols.VBKeyword,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndTerminatedStatement (keyword As VBKeyword, supportsExit As Boolean, supportsContinue As Boolean) As Func(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EndTerminatedStatement : System.Web.Razor.Tokenizer.Symbols.VBKeyword * bool * bool -&gt; Func&lt;bool&gt;&#xA;override this.EndTerminatedStatement : System.Web.Razor.Tokenizer.Symbols.VBKeyword * bool * bool -&gt; Func&lt;bool&gt;" Usage="vBCodeParser.EndTerminatedStatement (keyword, supportsExit, supportsContinue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
        <Parameter Name="supportsExit" Type="System.Boolean" />
        <Parameter Name="supportsContinue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <param name="supportsExit">true if the termination supports exit; otherwise, false.</param>
        <param name="supportsContinue">true if the termination supports continue; otherwise, false.</param>
        <summary>Ends a termination of statement.</summary>
        <returns>The function that ends the termination.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminatedStatement">
      <MemberSignature Language="C#" Value="protected virtual Func&lt;bool&gt; EndTerminatedStatement (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword, bool supportsExit, bool supportsContinue, string blockName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Func`1&lt;bool&gt; EndTerminatedStatement(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword, bool supportsExit, bool supportsContinue, string blockName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.EndTerminatedStatement(System.Web.Razor.Tokenizer.Symbols.VBKeyword,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndTerminatedStatement (keyword As VBKeyword, supportsExit As Boolean, supportsContinue As Boolean, blockName As String) As Func(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EndTerminatedStatement : System.Web.Razor.Tokenizer.Symbols.VBKeyword * bool * bool * string -&gt; Func&lt;bool&gt;&#xA;override this.EndTerminatedStatement : System.Web.Razor.Tokenizer.Symbols.VBKeyword * bool * bool * string -&gt; Func&lt;bool&gt;" Usage="vBCodeParser.EndTerminatedStatement (keyword, supportsExit, supportsContinue, blockName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
        <Parameter Name="supportsExit" Type="System.Boolean" />
        <Parameter Name="supportsContinue" Type="System.Boolean" />
        <Parameter Name="blockName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <param name="supportsExit">true if the termination supports exit; otherwise, false.</param>
        <param name="supportsContinue">true if the termination supports continue; otherwise, false.</param>
        <param name="blockName">The block name.</param>
        <summary>Ends a termination of statement.</summary>
        <returns>The function that ends the termination.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected override void HandleEmbeddedTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleEmbeddedTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.HandleEmbeddedTransition" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleEmbeddedTransition ()" />
      <MemberSignature Language="F#" Value="override this.HandleEmbeddedTransition : unit -&gt; unit" Usage="vBCodeParser.HandleEmbeddedTransition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Handles the embedded transition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected void HandleEmbeddedTransition (System.Web.Razor.Tokenizer.Symbols.VBSymbol lastWhiteSpace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HandleEmbeddedTransition(class System.Web.Razor.Tokenizer.Symbols.VBSymbol lastWhiteSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.HandleEmbeddedTransition(System.Web.Razor.Tokenizer.Symbols.VBSymbol)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HandleEmbeddedTransition (lastWhiteSpace As VBSymbol)" />
      <MemberSignature Language="F#" Value="override this.HandleEmbeddedTransition : System.Web.Razor.Tokenizer.Symbols.VBSymbol -&gt; unit" Usage="vBCodeParser.HandleEmbeddedTransition lastWhiteSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastWhiteSpace" Type="System.Web.Razor.Tokenizer.Symbols.VBSymbol" />
      </Parameters>
      <Docs>
        <param name="lastWhiteSpace">The last white space.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Handles the embedded transition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleExitOrContinue">
      <MemberSignature Language="C#" Value="protected void HandleExitOrContinue (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HandleExitOrContinue(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.HandleExitOrContinue(System.Web.Razor.Tokenizer.Symbols.VBKeyword)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HandleExitOrContinue (keyword As VBKeyword)" />
      <MemberSignature Language="F#" Value="member this.HandleExitOrContinue : System.Web.Razor.Tokenizer.Symbols.VBKeyword -&gt; unit" Usage="vBCodeParser.HandleExitOrContinue keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the code that handles the Exit or Continue keyword.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTransition">
      <MemberSignature Language="C#" Value="protected void HandleTransition (System.Web.Razor.Tokenizer.Symbols.VBSymbol lastWhiteSpace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HandleTransition(class System.Web.Razor.Tokenizer.Symbols.VBSymbol lastWhiteSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.HandleTransition(System.Web.Razor.Tokenizer.Symbols.VBSymbol)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HandleTransition (lastWhiteSpace As VBSymbol)" />
      <MemberSignature Language="F#" Value="member this.HandleTransition : System.Web.Razor.Tokenizer.Symbols.VBSymbol -&gt; unit" Usage="vBCodeParser.HandleTransition lastWhiteSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastWhiteSpace" Type="System.Web.Razor.Tokenizer.Symbols.VBSymbol" />
      </Parameters>
      <Docs>
        <param name="lastWhiteSpace">The last white space.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates a code that handles a transition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelperDirective">
      <MemberSignature Language="C#" Value="protected virtual bool HelperDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HelperDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.HelperDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HelperDirective () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HelperDirective : unit -&gt; bool&#xA;override this.HelperDirective : unit -&gt; bool" Usage="vBCodeParser.HelperDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates whether the code is a helper directive.</summary>
        <returns>true if the code is a helper directive; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsStatement">
      <MemberSignature Language="C#" Value="protected virtual bool ImportsStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ImportsStatement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.ImportsStatement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ImportsStatement () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ImportsStatement : unit -&gt; bool&#xA;override this.ImportsStatement : unit -&gt; bool" Usage="vBCodeParser.ImportsStatement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code imports a statement.</summary>
        <returns>true if the code imports a statement; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritsStatement">
      <MemberSignature Language="C#" Value="protected virtual bool InheritsStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool InheritsStatement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.InheritsStatement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InheritsStatement () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member InheritsStatement : unit -&gt; bool&#xA;override this.InheritsStatement : unit -&gt; bool" Usage="vBCodeParser.InheritsStatement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code inherits a statement.</summary>
        <returns>true if the code inherits a statement; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAtEmbeddedTransition">
      <MemberSignature Language="C#" Value="protected override bool IsAtEmbeddedTransition (bool allowTemplatesAndComments, bool allowTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsAtEmbeddedTransition(bool allowTemplatesAndComments, bool allowTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.IsAtEmbeddedTransition(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsAtEmbeddedTransition (allowTemplatesAndComments As Boolean, allowTransitions As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="override this.IsAtEmbeddedTransition : bool * bool -&gt; bool" Usage="vBCodeParser.IsAtEmbeddedTransition (allowTemplatesAndComments, allowTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowTemplatesAndComments" Type="System.Boolean" />
        <Parameter Name="allowTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowTemplatesAndComments">true to allow templates and comments; otherwise, false.</param>
        <param name="allowTransitions">true to allow transitions; otherwise, false.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is at embedded transition.</summary>
        <returns>true if the code is at embedded transition; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectiveDefined">
      <MemberSignature Language="C#" Value="public bool IsDirectiveDefined (string directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectiveDefined(string directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.IsDirectiveDefined(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDirectiveDefined (directive As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDirectiveDefined : string -&gt; bool" Usage="vBCodeParser.IsDirectiveDefined directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directive">The directive.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is directive defined.</summary>
        <returns>true if the code is directive defined; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.ISet&lt;string&gt; Keywords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; Keywords" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.VBCodeParser.Keywords" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Keywords As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.Keywords : System.Collections.Generic.ISet&lt;string&gt;" Usage="System.Web.Razor.Parser.VBCodeParser.Keywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the keywords associated with the code.</summary>
        <value>The keywords associated with the code.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeywordTerminatedStatement">
      <MemberSignature Language="C#" Value="protected virtual Func&lt;bool&gt; KeywordTerminatedStatement (System.Web.Razor.Tokenizer.Symbols.VBKeyword start, System.Web.Razor.Tokenizer.Symbols.VBKeyword terminator, bool supportsExit, bool supportsContinue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Func`1&lt;bool&gt; KeywordTerminatedStatement(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword start, valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword terminator, bool supportsExit, bool supportsContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.KeywordTerminatedStatement(System.Web.Razor.Tokenizer.Symbols.VBKeyword,System.Web.Razor.Tokenizer.Symbols.VBKeyword,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeywordTerminatedStatement (start As VBKeyword, terminator As VBKeyword, supportsExit As Boolean, supportsContinue As Boolean) As Func(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member KeywordTerminatedStatement : System.Web.Razor.Tokenizer.Symbols.VBKeyword * System.Web.Razor.Tokenizer.Symbols.VBKeyword * bool * bool -&gt; Func&lt;bool&gt;&#xA;override this.KeywordTerminatedStatement : System.Web.Razor.Tokenizer.Symbols.VBKeyword * System.Web.Razor.Tokenizer.Symbols.VBKeyword * bool * bool -&gt; Func&lt;bool&gt;" Usage="vBCodeParser.KeywordTerminatedStatement (start, terminator, supportsExit, supportsContinue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
        <Parameter Name="terminator" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
        <Parameter Name="supportsExit" Type="System.Boolean" />
        <Parameter Name="supportsContinue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="start">The start.</param>
        <param name="terminator">The terminator.</param>
        <param name="supportsExit">true if the termination supports exit; otherwise, false.</param>
        <param name="supportsContinue">true if the termination supports continue; otherwise, false.</param>
        <summary>Indicates a keyword that terminates a statement.</summary>
        <returns>The function that terminates the statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="protected override System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.VBTokenizer,System.Web.Razor.Tokenizer.Symbols.VBSymbol,System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt; Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.LanguageCharacteristics`3&lt;class System.Web.Razor.Tokenizer.VBTokenizer, class System.Web.Razor.Tokenizer.Symbols.VBSymbol, valuetype System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt; Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.VBCodeParser.Language" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Language As LanguageCharacteristics(Of VBTokenizer, VBSymbol, VBSymbolType)" />
      <MemberSignature Language="F#" Value="member this.Language : System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.VBTokenizer, System.Web.Razor.Tokenizer.Symbols.VBSymbol, System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt;" Usage="System.Web.Razor.Parser.VBCodeParser.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.LanguageCharacteristics&lt;System.Web.Razor.Tokenizer.VBTokenizer,System.Web.Razor.Tokenizer.Symbols.VBSymbol,System.Web.Razor.Tokenizer.Symbols.VBSymbolType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the language for the parser.</summary>
        <value>The language for the parser.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutDirective">
      <MemberSignature Language="C#" Value="protected virtual bool LayoutDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LayoutDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.LayoutDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LayoutDirective () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member LayoutDirective : unit -&gt; bool&#xA;override this.LayoutDirective : unit -&gt; bool" Usage="vBCodeParser.LayoutDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is a layout directive.</summary>
        <returns>true if the code is a layout directive; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapDirective">
      <MemberSignature Language="C#" Value="protected void MapDirective (string directive, Func&lt;bool&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MapDirective(string directive, class System.Func`1&lt;bool&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.MapDirective(System.String,System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MapDirective (directive As String, action As Func(Of Boolean))" />
      <MemberSignature Language="F#" Value="member this.MapDirective : string * Func&lt;bool&gt; -&gt; unit" Usage="vBCodeParser.MapDirective (directive, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.String" />
        <Parameter Name="action" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="directive">The directive.</param>
        <param name="action">The action whether to map a given directive.</param>
        <summary>Maps a given directive.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapKeyword">
      <MemberSignature Language="C#" Value="protected void MapKeyword (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword, Func&lt;bool&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MapKeyword(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword, class System.Func`1&lt;bool&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.MapKeyword(System.Web.Razor.Tokenizer.Symbols.VBKeyword,System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MapKeyword (keyword As VBKeyword, action As Func(Of Boolean))" />
      <MemberSignature Language="F#" Value="member this.MapKeyword : System.Web.Razor.Tokenizer.Symbols.VBKeyword * Func&lt;bool&gt; -&gt; unit" Usage="vBCodeParser.MapKeyword (keyword, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
        <Parameter Name="action" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <param name="action">The action whether to map a given keyword.</param>
        <summary>Maps a given keyword.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NestedBlock">
      <MemberSignature Language="C#" Value="protected void NestedBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NestedBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.NestedBlock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NestedBlock ()" />
      <MemberSignature Language="F#" Value="member this.NestedBlock : unit -&gt; unit" Usage="vBCodeParser.NestedBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates a nested block.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional">
      <MemberSignature Language="C#" Value="protected bool Optional (System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool Optional(valuetype System.Web.Razor.Tokenizer.Symbols.VBKeyword keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.Optional(System.Web.Razor.Tokenizer.Symbols.VBKeyword)" />
      <MemberSignature Language="VB.NET" Value="Protected Function Optional (keyword As VBKeyword) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Optional : System.Web.Razor.Tokenizer.Symbols.VBKeyword -&gt; bool" Usage="vBCodeParser.Optional keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.Web.Razor.Tokenizer.Symbols.VBKeyword" />
      </Parameters>
      <Docs>
        <param name="keyword">The keyword.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the keyword from the code is optional.</summary>
        <returns>true if the keyword from the code is optional; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionStatement">
      <MemberSignature Language="C#" Value="protected virtual bool OptionStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OptionStatement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.OptionStatement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OptionStatement () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OptionStatement : unit -&gt; bool&#xA;override this.OptionStatement : unit -&gt; bool" Usage="vBCodeParser.OptionStatement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is an option statement.</summary>
        <returns>true if the code is an option statement; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParser">
      <MemberSignature Language="C#" Value="protected override System.Web.Razor.Parser.ParserBase OtherParser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Razor.Parser.ParserBase OtherParser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.Parser.VBCodeParser.OtherParser" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property OtherParser As ParserBase" />
      <MemberSignature Language="F#" Value="member this.OtherParser : System.Web.Razor.Parser.ParserBase" Usage="System.Web.Razor.Parser.VBCodeParser.OtherParser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Gets the other parser.</summary>
        <value>The other parser.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParserBlock">
      <MemberSignature Language="C#" Value="protected void OtherParserBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OtherParserBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.OtherParserBlock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OtherParserBlock ()" />
      <MemberSignature Language="F#" Value="member this.OtherParserBlock : unit -&gt; unit" Usage="vBCodeParser.OtherParserBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the parser block.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParserBlock">
      <MemberSignature Language="C#" Value="protected void OtherParserBlock (string startSequence, string endSequence);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OtherParserBlock(string startSequence, string endSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.OtherParserBlock(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OtherParserBlock (startSequence As String, endSequence As String)" />
      <MemberSignature Language="F#" Value="member this.OtherParserBlock : string * string -&gt; unit" Usage="vBCodeParser.OtherParserBlock (startSequence, endSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startSequence" Type="System.String" />
        <Parameter Name="endSequence" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="startSequence">The start sequence.</param>
        <param name="endSequence">The end sequence.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Indicates the parser block.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSpanBeforeRazorComment">
      <MemberSignature Language="C#" Value="protected override void OutputSpanBeforeRazorComment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OutputSpanBeforeRazorComment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.OutputSpanBeforeRazorComment" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OutputSpanBeforeRazorComment ()" />
      <MemberSignature Language="F#" Value="override this.OutputSpanBeforeRazorComment : unit -&gt; unit" Usage="vBCodeParser.OutputSpanBeforeRazorComment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Spans the output before Razor comment.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBlock">
      <MemberSignature Language="C#" Value="public override void ParseBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.ParseBlock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseBlock ()" />
      <MemberSignature Language="F#" Value="override this.ParseBlock : unit -&gt; unit" Usage="vBCodeParser.ParseBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Blocks the parsing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadVBSpaces">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IEnumerable&lt;System.Web.Razor.Tokenizer.Symbols.VBSymbol&gt; ReadVBSpaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Razor.Tokenizer.Symbols.VBSymbol&gt; ReadVBSpaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.ReadVBSpaces" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReadVBSpaces () As IEnumerable(Of VBSymbol)" />
      <MemberSignature Language="F#" Value="member this.ReadVBSpaces : unit -&gt; seq&lt;System.Web.Razor.Tokenizer.Symbols.VBSymbol&gt;" Usage="vBCodeParser.ReadVBSpaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.Razor.Tokenizer.Symbols.VBSymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Reads a list of Visual Basic spaces.</summary>
        <returns>A list of Visual Basic spaces.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="protected bool Required (System.Web.Razor.Tokenizer.Symbols.VBSymbolType expected, string errorBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool Required(valuetype System.Web.Razor.Tokenizer.Symbols.VBSymbolType expected, string errorBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.Required(System.Web.Razor.Tokenizer.Symbols.VBSymbolType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function Required (expected As VBSymbolType, errorBase As String) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Required : System.Web.Razor.Tokenizer.Symbols.VBSymbolType * string -&gt; bool" Usage="vBCodeParser.Required (expected, errorBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Web.Razor.Tokenizer.Symbols.VBSymbolType" />
        <Parameter Name="errorBase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">The expected symbol.</param>
        <param name="errorBase">The error base.</param>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the expected symbol is required.</summary>
        <returns>true if the expected symbol is required; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedWord">
      <MemberSignature Language="C#" Value="protected bool ReservedWord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReservedWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.ReservedWord" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReservedWord () As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReservedWord : unit -&gt; bool" Usage="vBCodeParser.ReservedWord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is a reserved word.</summary>
        <returns>true if the code is a reserved word; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionDirective">
      <MemberSignature Language="C#" Value="protected virtual bool SectionDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SectionDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.SectionDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SectionDirective () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member SectionDirective : unit -&gt; bool&#xA;override this.SectionDirective : unit -&gt; bool" Usage="vBCodeParser.SectionDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code is a section directive.</summary>
        <returns>true if the code is a section directive; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStateDirective">
      <MemberSignature Language="C#" Value="protected virtual bool SessionStateDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SessionStateDirective() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.Parser.VBCodeParser.SessionStateDirective" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SessionStateDirective () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member SessionStateDirective : unit -&gt; bool&#xA;override this.SessionStateDirective : unit -&gt; bool" Usage="vBCodeParser.SessionStateDirective " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.Determines whether the code has a session state directive.</summary>
        <returns>true if the code has a session state directive; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
