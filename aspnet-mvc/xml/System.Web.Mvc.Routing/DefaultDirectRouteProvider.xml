<Type Name="DefaultDirectRouteProvider" FullName="System.Web.Mvc.Routing.DefaultDirectRouteProvider">
  <TypeSignature Language="C#" Value="public class DefaultDirectRouteProvider : System.Web.Mvc.Routing.IDirectRouteProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultDirectRouteProvider extends System.Object implements class System.Web.Mvc.Routing.IDirectRouteProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.Routing.DefaultDirectRouteProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultDirectRouteProvider&#xA;Implements IDirectRouteProvider" />
  <TypeSignature Language="F#" Value="type DefaultDirectRouteProvider = class&#xA;    interface IDirectRouteProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Mvc.Routing.IDirectRouteProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultDirectRouteProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionDirectRoutes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt; GetActionDirectRoutes (System.Web.Mvc.ActionDescriptor actionDescriptor, System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; factories, System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.RouteEntry&gt; GetActionDirectRoutes(class System.Web.Mvc.ActionDescriptor actionDescriptor, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.IDirectRouteFactory&gt; factories, class System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetActionDirectRoutes (actionDescriptor As ActionDescriptor, factories As IReadOnlyList(Of IDirectRouteFactory), constraintResolver As IInlineConstraintResolver) As IReadOnlyList(Of RouteEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetActionDirectRoutes : System.Web.Mvc.ActionDescriptor * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;&#xA;override this.GetActionDirectRoutes : System.Web.Mvc.ActionDescriptor * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;" Usage="defaultDirectRouteProvider.GetActionDirectRoutes (actionDescriptor, factories, constraintResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
        <Parameter Name="factories" Type="System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;" />
        <Parameter Name="constraintResolver" Type="System.Web.Mvc.Routing.IInlineConstraintResolver" />
      </Parameters>
      <Docs>
        <param name="actionDescriptor">The action descriptor.</param>
        <param name="factories">The direct route factories.</param>
        <param name="constraintResolver">The constraint resolver.</param>
        <summary>Creates <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> instances based on the provided factories and action. The route entries provide direct routing to the provided action.</summary>
        <returns>A set of route entries.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionRouteFactories">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; GetActionRouteFactories (System.Web.Mvc.ActionDescriptor actionDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.IDirectRouteFactory&gt; GetActionRouteFactories(class System.Web.Mvc.ActionDescriptor actionDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetActionRouteFactories (actionDescriptor As ActionDescriptor) As IReadOnlyList(Of IDirectRouteFactory)" />
      <MemberSignature Language="F#" Value="abstract member GetActionRouteFactories : System.Web.Mvc.ActionDescriptor -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;&#xA;override this.GetActionRouteFactories : System.Web.Mvc.ActionDescriptor -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;" Usage="defaultDirectRouteProvider.GetActionRouteFactories actionDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
      </Parameters>
      <Docs>
        <param name="actionDescriptor">The action descriptor.</param>
        <summary>Gets a set of route factories for the given action descriptor.</summary>
        <returns>A set of route factories.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAreaPrefix">
      <MemberSignature Language="C#" Value="protected virtual string GetAreaPrefix (System.Web.Mvc.ControllerDescriptor controllerDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAreaPrefix(class System.Web.Mvc.ControllerDescriptor controllerDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAreaPrefix (controllerDescriptor As ControllerDescriptor) As String" />
      <MemberSignature Language="F#" Value="abstract member GetAreaPrefix : System.Web.Mvc.ControllerDescriptor -&gt; string&#xA;override this.GetAreaPrefix : System.Web.Mvc.ControllerDescriptor -&gt; string" Usage="defaultDirectRouteProvider.GetAreaPrefix controllerDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerDescriptor" Type="System.Web.Mvc.ControllerDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerDescriptor">The controller descriptor.</param>
        <summary>Gets the area prefix from the provided controller.</summary>
        <returns>The area prefix or null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControllerDirectRoutes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt; GetControllerDirectRoutes (System.Web.Mvc.ControllerDescriptor controllerDescriptor, System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt; actionDescriptors, System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; factories, System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.RouteEntry&gt; GetControllerDirectRoutes(class System.Web.Mvc.ControllerDescriptor controllerDescriptor, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.ActionDescriptor&gt; actionDescriptors, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.IDirectRouteFactory&gt; factories, class System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControllerDirectRoutes (controllerDescriptor As ControllerDescriptor, actionDescriptors As IReadOnlyList(Of ActionDescriptor), factories As IReadOnlyList(Of IDirectRouteFactory), constraintResolver As IInlineConstraintResolver) As IReadOnlyList(Of RouteEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetControllerDirectRoutes : System.Web.Mvc.ControllerDescriptor * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt; * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;&#xA;override this.GetControllerDirectRoutes : System.Web.Mvc.ControllerDescriptor * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt; * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;" Usage="defaultDirectRouteProvider.GetControllerDirectRoutes (controllerDescriptor, actionDescriptors, factories, constraintResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerDescriptor" Type="System.Web.Mvc.ControllerDescriptor" />
        <Parameter Name="actionDescriptors" Type="System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt;" />
        <Parameter Name="factories" Type="System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;" />
        <Parameter Name="constraintResolver" Type="System.Web.Mvc.Routing.IInlineConstraintResolver" />
      </Parameters>
      <Docs>
        <param name="controllerDescriptor">The controller descriptor.</param>
        <param name="actionDescriptors">The action descriptors.</param>
        <param name="factories">The direct route factories.</param>
        <param name="constraintResolver">The constraint resolver.</param>
        <summary>Creates <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> instances based on the provided factories, controller and actions. The route entries provided direct routing to the provided controller and can reach the set of provided actions.</summary>
        <returns>A set of route entries.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControllerRouteFactories">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt; GetControllerRouteFactories (System.Web.Mvc.ControllerDescriptor controllerDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.IDirectRouteFactory&gt; GetControllerRouteFactories(class System.Web.Mvc.ControllerDescriptor controllerDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControllerRouteFactories (controllerDescriptor As ControllerDescriptor) As IReadOnlyList(Of IDirectRouteFactory)" />
      <MemberSignature Language="F#" Value="abstract member GetControllerRouteFactories : System.Web.Mvc.ControllerDescriptor -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;&#xA;override this.GetControllerRouteFactories : System.Web.Mvc.ControllerDescriptor -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;" Usage="defaultDirectRouteProvider.GetControllerRouteFactories controllerDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.IDirectRouteFactory&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerDescriptor" Type="System.Web.Mvc.ControllerDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerDescriptor">The controller descriptor.</param>
        <summary>Gets route factories for the given controller descriptor.</summary>
        <returns>A set of route factories.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectRoutes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt; GetDirectRoutes (System.Web.Mvc.ControllerDescriptor controllerDescriptor, System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt; actionDescriptors, System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.Routing.RouteEntry&gt; GetDirectRoutes(class System.Web.Mvc.ControllerDescriptor controllerDescriptor, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Web.Mvc.ActionDescriptor&gt; actionDescriptors, class System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectRoutes (controllerDescriptor As ControllerDescriptor, actionDescriptors As IReadOnlyList(Of ActionDescriptor), constraintResolver As IInlineConstraintResolver) As IReadOnlyList(Of RouteEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDirectRoutes : System.Web.Mvc.ControllerDescriptor * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt; * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;&#xA;override this.GetDirectRoutes : System.Web.Mvc.ControllerDescriptor * System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt; * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;" Usage="defaultDirectRouteProvider.GetDirectRoutes (controllerDescriptor, actionDescriptors, constraintResolver)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.Routing.RouteEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerDescriptor" Type="System.Web.Mvc.ControllerDescriptor" />
        <Parameter Name="actionDescriptors" Type="System.Collections.Generic.IReadOnlyList&lt;System.Web.Mvc.ActionDescriptor&gt;" />
        <Parameter Name="constraintResolver" Type="System.Web.Mvc.Routing.IInlineConstraintResolver" />
      </Parameters>
      <Docs>
        <param name="controllerDescriptor">The controller descriptor.</param>
        <param name="actionDescriptors">The action descriptors for all actions.</param>
        <param name="constraintResolver">The constraint resolver.</param>
        <summary>Gets direct routes for the given controller descriptor and action descriptors based on <see cref="T:System.Web.Mvc.Routing.IDirectRouteFactory" /> attributes.</summary>
        <returns>A set of route entries.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutePrefix">
      <MemberSignature Language="C#" Value="protected virtual string GetRoutePrefix (System.Web.Mvc.ControllerDescriptor controllerDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetRoutePrefix(class System.Web.Mvc.ControllerDescriptor controllerDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRoutePrefix (controllerDescriptor As ControllerDescriptor) As String" />
      <MemberSignature Language="F#" Value="abstract member GetRoutePrefix : System.Web.Mvc.ControllerDescriptor -&gt; string&#xA;override this.GetRoutePrefix : System.Web.Mvc.ControllerDescriptor -&gt; string" Usage="defaultDirectRouteProvider.GetRoutePrefix controllerDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerDescriptor" Type="System.Web.Mvc.ControllerDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerDescriptor">The controller descriptor.</param>
        <summary>Gets the route prefix from the provided controller.</summary>
        <returns>The route prefix or null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
