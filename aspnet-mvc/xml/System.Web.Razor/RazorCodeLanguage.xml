<Type Name="RazorCodeLanguage" FullName="System.Web.Razor.RazorCodeLanguage">
  <TypeSignature Language="C#" Value="public abstract class RazorCodeLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RazorCodeLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Razor.RazorCodeLanguage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RazorCodeLanguage" />
  <TypeSignature Language="F#" Value="type RazorCodeLanguage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Razor</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the base for all Razor code language.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RazorCodeLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.RazorCodeLanguage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Razor.RazorCodeLanguage" /> class.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProviderType">
      <MemberSignature Language="C#" Value="public abstract Type CodeDomProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CodeDomProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.RazorCodeLanguage.CodeDomProviderType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CodeDomProviderType As Type" />
      <MemberSignature Language="F#" Value="member this.CodeDomProviderType : Type" Usage="System.Web.Razor.RazorCodeLanguage.CodeDomProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the CodeDOM provider.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <value>The type of the CodeDOM provider.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCodeGenerator">
      <MemberSignature Language="C#" Value="public abstract System.Web.Razor.Generator.RazorCodeGenerator CreateCodeGenerator (string className, string rootNamespaceName, string sourceFileName, System.Web.Razor.RazorEngineHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Razor.Generator.RazorCodeGenerator CreateCodeGenerator(string className, string rootNamespaceName, string sourceFileName, class System.Web.Razor.RazorEngineHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.RazorCodeLanguage.CreateCodeGenerator(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCodeGenerator (className As String, rootNamespaceName As String, sourceFileName As String, host As RazorEngineHost) As RazorCodeGenerator" />
      <MemberSignature Language="F#" Value="abstract member CreateCodeGenerator : string * string * string * System.Web.Razor.RazorEngineHost -&gt; System.Web.Razor.Generator.RazorCodeGenerator" Usage="razorCodeLanguage.CreateCodeGenerator (className, rootNamespaceName, sourceFileName, host)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Generator.RazorCodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespaceName" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="host" Type="System.Web.Razor.RazorEngineHost" />
      </Parameters>
      <Docs>
        <param name="className">The class name.</param>
        <param name="rootNamespaceName">The name of the root namespace.</param>
        <param name="sourceFileName">The source file name.</param>
        <param name="host">The Razor engine host.</param>
        <summary>Creates the code generator for the Razor code language.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <returns>The code generator for the Razor code language.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCodeParser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Razor.Parser.ParserBase CreateCodeParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Razor.Parser.ParserBase CreateCodeParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.RazorCodeLanguage.CreateCodeParser" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCodeParser () As ParserBase" />
      <MemberSignature Language="F#" Value="abstract member CreateCodeParser : unit -&gt; System.Web.Razor.Parser.ParserBase" Usage="razorCodeLanguage.CreateCodeParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the code parser for the Razor code language.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <returns>The code parser for the Razor code language.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLanguageByExtension">
      <MemberSignature Language="C#" Value="public static System.Web.Razor.RazorCodeLanguage GetLanguageByExtension (string fileExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Razor.RazorCodeLanguage GetLanguageByExtension(string fileExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Razor.RazorCodeLanguage.GetLanguageByExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageByExtension (fileExtension As String) As RazorCodeLanguage" />
      <MemberSignature Language="F#" Value="static member GetLanguageByExtension : string -&gt; System.Web.Razor.RazorCodeLanguage" Usage="System.Web.Razor.RazorCodeLanguage.GetLanguageByExtension fileExtension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Razor.RazorCodeLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileExtension">The file extension.</param>
        <summary>Gets the language of the Razor code using the specified file extension.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <returns>The language of the Razor code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageName">
      <MemberSignature Language="C#" Value="public abstract string LanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.RazorCodeLanguage.LanguageName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LanguageName As String" />
      <MemberSignature Language="F#" Value="member this.LanguageName : string" Usage="System.Web.Razor.RazorCodeLanguage.LanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the language name of the current Razor code, that is “csharp” or “vb”.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <value>The language name of the current Razor code.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Languages">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Web.Razor.RazorCodeLanguage&gt; Languages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Web.Razor.RazorCodeLanguage&gt; Languages" />
      <MemberSignature Language="DocId" Value="P:System.Web.Razor.RazorCodeLanguage.Languages" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Languages As IDictionary(Of String, RazorCodeLanguage)" />
      <MemberSignature Language="F#" Value="static member Languages : System.Collections.Generic.IDictionary&lt;string, System.Web.Razor.RazorCodeLanguage&gt;" Usage="System.Web.Razor.RazorCodeLanguage.Languages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Razor</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Razor.RazorCodeLanguage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of language supported by the Razor code.This type/member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <value>The list of language supported by the Razor code.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
