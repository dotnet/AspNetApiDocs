<Type Name="WebMail" FullName="System.Web.Helpers.WebMail">
  <TypeSignature Language="C#" Value="public static class WebMail" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebMail extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Helpers.WebMail" />
  <TypeSignature Language="VB.NET" Value="Public Class WebMail" />
  <TypeSignature Language="F#" Value="type WebMail = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Helpers</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a way to construct and send an email message using Simple Mail Transfer Protocol (SMTP).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public static bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableSsl As Boolean" />
      <MemberSignature Language="F#" Value="static member EnableSsl : bool with get, set" Usage="System.Web.Helpers.WebMail.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether Secure Sockets Layer (SSL) is used to encrypt the connection when an email message is sent.</summary>
        <value>true if SSL is used to encrypt the connection; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public static string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string From" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.From" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property From As String" />
      <MemberSignature Language="F#" Value="static member From : string with get, set" Usage="System.Web.Helpers.WebMail.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the email address of the sender.</summary>
        <value>The email address of the sender.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public static string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.Password" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Password As String" />
      <MemberSignature Language="F#" Value="static member Password : string with get, set" Usage="System.Web.Helpers.WebMail.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password of the sender's email account.</summary>
        <value>The sender's password.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string to, string subject, string body, string from = default, string cc = default, System.Collections.Generic.IEnumerable&lt;string&gt; filesToAttach = default, bool isBodyHtml = true, System.Collections.Generic.IEnumerable&lt;string&gt; additionalHeaders = default, string bcc = default, string contentEncoding = default, string headerEncoding = default, string priority = default, string replyTo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string to, string subject, string body, string from, string cc, class System.Collections.Generic.IEnumerable`1&lt;string&gt; filesToAttach, bool isBodyHtml, class System.Collections.Generic.IEnumerable`1&lt;string&gt; additionalHeaders, string bcc, string contentEncoding, string headerEncoding, string priority, string replyTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.WebMail.Send(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (to As String, subject As String, body As String, Optional from As String = Nothing, Optional cc As String = Nothing, Optional filesToAttach As IEnumerable(Of String) = Nothing, Optional isBodyHtml As Boolean = true, Optional additionalHeaders As IEnumerable(Of String) = Nothing, Optional bcc As String = Nothing, Optional contentEncoding As String = Nothing, Optional headerEncoding As String = Nothing, Optional priority As String = Nothing, Optional replyTo As String = Nothing)" />
      <MemberSignature Language="F#" Value="static member Send : string * string * string * string * string * seq&lt;string&gt; * bool * seq&lt;string&gt; * string * string * string * string * string -&gt; unit" Usage="System.Web.Helpers.WebMail.Send (to, subject, body, from, cc, filesToAttach, isBodyHtml, additionalHeaders, bcc, contentEncoding, headerEncoding, priority, replyTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="cc" Type="System.String" />
        <Parameter Name="filesToAttach" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isBodyHtml" Type="System.Boolean" />
        <Parameter Name="additionalHeaders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="bcc" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="headerEncoding" Type="System.String" />
        <Parameter Name="priority" Type="System.String" />
        <Parameter Name="replyTo" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="to">The email address of the recipient or recipients. Separate multiple recipients using a semicolon (;).</param>
        <param name="subject">The subject line for the email message.</param>
        <param name="body">The body of the email message. If <paramref name="isBodyHtml" /> is true, HTML in the body is interpreted as markup.</param>
        <param name="from">(Optional) The email address of the message sender, or null to not specify a sender. The default value is null.</param>
        <param name="cc">(Optional) The email addresses of additional recipients to send a copy of the message to, or null if there are no additional recipients. Separate multiple recipients using a semicolon (;). The default value is null.</param>
        <param name="filesToAttach">(Optional) A collection of file names that specifies the files to attach to the email message, or null if there are no files to attach. The default value is null.</param>
        <param name="isBodyHtml">(Optional) true to specify that the email message body is in HTML format; false to indicate that the body is in plain-text format. The default value is true.</param>
        <param name="additionalHeaders">(Optional) A collection of headers to add to the normal SMTP headers included in this email message, or null to send no additional headers. The default value is null.</param>
        <param name="bcc">(Optional) The email addresses of additional recipients to send a "blind" copy of the message to, or null if there are no additional recipients. Separate multiple recipients using a semicolon (;). The default value is null.</param>
        <param name="contentEncoding">(Optional) The encoding to use for the body of the message. Possible values are property values for the <see cref="T:System.Text.Encoding" /> class, such as <see cref="P:System.Text.Encoding.UTF8" />. The default value is null.</param>
        <param name="headerEncoding">(Optional) The encoding to use for the header of the message. Possible values are property values for the <see cref="T:System.Text.Encoding" /> class, such as <see cref="P:System.Text.Encoding.UTF8" />. The default value is null.</param>
        <param name="priority">(Optional) A value ("Normal", "Low", "High") that specifies the priority of the message. The default is "Normal".</param>
        <param name="replyTo">(Optional) The email address that will be used when the recipient replies to the message. The default value is null, which indicates that the reply address is the value of the From property. </param>
        <summary>Sends the specified message to an SMTP server for delivery.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmtpPort">
      <MemberSignature Language="C#" Value="public static int SmtpPort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SmtpPort" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.SmtpPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SmtpPort As Integer" />
      <MemberSignature Language="F#" Value="static member SmtpPort : int with get, set" Usage="System.Web.Helpers.WebMail.SmtpPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the port that is used for SMTP transactions.</summary>
        <value>The port that is used for SMTP transactions.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmtpServer">
      <MemberSignature Language="C#" Value="public static string SmtpServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string SmtpServer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.SmtpServer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SmtpServer As String" />
      <MemberSignature Language="F#" Value="static member SmtpServer : string with get, set" Usage="System.Web.Helpers.WebMail.SmtpServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the SMTP server that is used to transmit the email message.</summary>
        <value>The SMTP server.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmtpUseDefaultCredentials">
      <MemberSignature Language="C#" Value="public static bool SmtpUseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SmtpUseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.SmtpUseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SmtpUseDefaultCredentials As Boolean" />
      <MemberSignature Language="F#" Value="static member SmtpUseDefaultCredentials : bool with get, set" Usage="System.Web.Helpers.WebMail.SmtpUseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the default credentials are sent with the requests.</summary>
        <value>true if credentials are sent with the email message; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.WebMail.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UserName As String" />
      <MemberSignature Language="F#" Value="static member UserName : string with get, set" Usage="System.Web.Helpers.WebMail.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of email account that is used to send email.</summary>
        <value>The name of the user account.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
