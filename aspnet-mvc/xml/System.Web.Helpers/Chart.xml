<Type Name="Chart" FullName="System.Web.Helpers.Chart">
  <TypeSignature Language="C#" Value="public class Chart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Helpers.Chart" />
  <TypeSignature Language="VB.NET" Value="Public Class Chart" />
  <TypeSignature Language="F#" Value="type Chart = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Helpers</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Displays data in the form of a graphical chart.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart (int width, int height, string theme = default, string themePath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, string theme, string themePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.#ctor(System.Int32,System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, Optional theme As String = Nothing, Optional themePath As String = Nothing)" />
      <MemberSignature Language="F#" Value="new System.Web.Helpers.Chart : int * int * string * string -&gt; System.Web.Helpers.Chart" Usage="new System.Web.Helpers.Chart (width, height, theme, themePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="theme" Type="System.String" />
        <Parameter Name="themePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="width">The width, in pixels, of the complete chart image.</param>
        <param name="height">The height, in pixels, of the complete chart image.</param>
        <param name="theme">(Optional) The template (theme) to apply to the chart.</param>
        <param name="themePath">(Optional) The template (theme) path and file name to apply to the chart.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Helpers.Chart" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLegend">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart AddLegend (string title = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart AddLegend(string title, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.AddLegend(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLegend (Optional title As String = Nothing, Optional name As String = Nothing) As Chart" />
      <MemberSignature Language="F#" Value="member this.AddLegend : string * string -&gt; System.Web.Helpers.Chart" Usage="chart.AddLegend (title, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">The text of the legend title.</param>
        <param name="name">The unique name of the legend.</param>
        <summary>Adds a legend to the chart.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSeries">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart AddSeries (string name = default, string chartType = &quot;Column&quot;, string chartArea = default, string axisLabel = default, string legend = default, int markerStep = 1, System.Collections.IEnumerable xValue = default, string xField = default, System.Collections.IEnumerable yValues = default, string yFields = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart AddSeries(string name, string chartType, string chartArea, string axisLabel, string legend, int32 markerStep, class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValues, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.AddSeries(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeries (Optional name As String = Nothing, Optional chartType As String = &quot;Column&quot;, Optional chartArea As String = Nothing, Optional axisLabel As String = Nothing, Optional legend As String = Nothing, Optional markerStep As Integer = 1, Optional xValue As IEnumerable = Nothing, Optional xField As String = Nothing, Optional yValues As IEnumerable = Nothing, Optional yFields As String = Nothing) As Chart" />
      <MemberSignature Language="F#" Value="member this.AddSeries : string * string * string * string * string * int * System.Collections.IEnumerable * string * System.Collections.IEnumerable * string -&gt; System.Web.Helpers.Chart" Usage="chart.AddSeries (name, chartType, chartArea, axisLabel, legend, markerStep, xValue, xField, yValues, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="chartType" Type="System.String" />
        <Parameter Name="chartArea" Type="System.String" />
        <Parameter Name="axisLabel" Type="System.String" />
        <Parameter Name="legend" Type="System.String" />
        <Parameter Name="markerStep" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The unique name of the series.</param>
        <param name="chartType">The chart type of a series.</param>
        <param name="chartArea">The name of the chart area that is used to plot the data series.</param>
        <param name="axisLabel">The axis label text for the series.</param>
        <param name="legend">The name of the series that is associated with the legend.</param>
        <param name="markerStep">The granularity of data point markers.</param>
        <param name="xValue">The values to plot along the x-axis.</param>
        <param name="xField">The name of the field for x-values.</param>
        <param name="yValues">The values to plot along the y-axis.</param>
        <param name="yFields">A comma-separated list of name or names of the field or fields for y-values.</param>
        <summary>Provides data points and series attributes for the chart.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTitle">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart AddTitle (string text = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart AddTitle(string text, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.AddTitle(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTitle (Optional text As String = Nothing, Optional name As String = Nothing) As Chart" />
      <MemberSignature Language="F#" Value="member this.AddTitle : string * string -&gt; System.Web.Helpers.Chart" Usage="chart.AddTitle (text, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The title text.</param>
        <param name="name">The unique name of the title.</param>
        <summary>Adds a title to the chart.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart DataBindCrossTable (System.Collections.IEnumerable dataSource, string groupByField, string xField, string yFields, string otherFields = default, string pointSortOrder = &quot;Ascending&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart DataBindCrossTable(class System.Collections.IEnumerable dataSource, string groupByField, string xField, string yFields, string otherFields, string pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataBindCrossTable (dataSource As IEnumerable, groupByField As String, xField As String, yFields As String, Optional otherFields As String = Nothing, Optional pointSortOrder As String = &quot;Ascending&quot;) As Chart" />
      <MemberSignature Language="F#" Value="member this.DataBindCrossTable : System.Collections.IEnumerable * string * string * string * string * string -&gt; System.Web.Helpers.Chart" Usage="chart.DataBindCrossTable (dataSource, groupByField, xField, yFields, otherFields, pointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="groupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="pointSortOrder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">The chart data source.</param>
        <param name="groupByField">The name of the column that is used to group data into the series.</param>
        <param name="xField">The name of the column for x-values.</param>
        <param name="yFields">A comma-separated list of names of the columns for y-values.</param>
        <param name="otherFields">Other data point properties that can be bound.</param>
        <param name="pointSortOrder">The order in which the series will be sorted. The default is "Ascending".</param>
        <summary>Binds a chart to a data table, where one series is created for each unique value in a column.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart DataBindTable (System.Collections.IEnumerable dataSource, string xField = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataBindTable (dataSource As IEnumerable, Optional xField As String = Nothing) As Chart" />
      <MemberSignature Language="F#" Value="member this.DataBindTable : System.Collections.IEnumerable * string -&gt; System.Web.Helpers.Chart" Usage="chart.DataBindTable (dataSource, xField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">The chart data source. This can be can be any <see cref="T:System.Collections.IEnumerable" /> object.</param>
        <param name="xField">The name of the table column used for the series x-values.</param>
        <summary>Creates and binds series data to the specified data table, and optionally populates multiple x-values.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.Chart.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.Helpers.Chart.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the file that contains the chart image.</summary>
        <value>The name of the file.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string format = &quot;jpeg&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (Optional format As String = &quot;jpeg&quot;) As Byte()" />
      <MemberSignature Language="F#" Value="member this.GetBytes : string -&gt; byte[]" Usage="chart.GetBytes format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">The image format. The default is "jpeg".</param>
        <summary>Returns a chart image as a byte array.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromCache">
      <MemberSignature Language="C#" Value="public static System.Web.Helpers.Chart GetFromCache (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Helpers.Chart GetFromCache(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.GetFromCache(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFromCache (key As String) As Chart" />
      <MemberSignature Language="F#" Value="static member GetFromCache : string -&gt; System.Web.Helpers.Chart" Usage="System.Web.Helpers.Chart.GetFromCache key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The ID of the cache item that contains the chart to retrieve. The key is set when you call the <see cref="M:System.Web.Helpers.Chart.SaveToCache(System.String,System.Int32,System.Boolean)" /> method.</param>
        <summary>Retrieves the specified chart from the cache.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.Chart.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="System.Web.Helpers.Chart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height, in pixels, of the chart image.</summary>
        <value>The chart height.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart Save (string path, string format = &quot;jpeg&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart Save(string path, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.Save(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Save (path As String, Optional format As String = &quot;jpeg&quot;) As Chart" />
      <MemberSignature Language="F#" Value="member this.Save : string * string -&gt; System.Web.Helpers.Chart" Usage="chart.Save (path, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The location and name of the image file.</param>
        <param name="format">The image file format, such as "png" or "jpeg".</param>
        <summary>Saves a chart image to the specified file.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToCache">
      <MemberSignature Language="C#" Value="public string SaveToCache (string key = default, int minutesToCache = 20, bool slidingExpiration = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SaveToCache(string key, int32 minutesToCache, bool slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.SaveToCache(System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveToCache (Optional key As String = Nothing, Optional minutesToCache As Integer = 20, Optional slidingExpiration As Boolean = true) As String" />
      <MemberSignature Language="F#" Value="member this.SaveToCache : string * int * bool -&gt; string" Usage="chart.SaveToCache (key, minutesToCache, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="minutesToCache" Type="System.Int32" />
        <Parameter Name="slidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">The ID of the chart in the cache.</param>
        <param name="minutesToCache">The number of minutes to keep the chart image in the cache. The default is 20.</param>
        <param name="slidingExpiration">true to indicate that the chart cache item's expiration is reset each time the item is accessed, or false to indicate that the expiration is based on an absolute interval since the time that the item was added to the cache. The default is true.</param>
        <summary>Saves a chart in the system cache.</summary>
        <returns>The ID of the cache item that contains the chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXml">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart SaveXml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart SaveXml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.SaveXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveXml (path As String) As Chart" />
      <MemberSignature Language="F#" Value="member this.SaveXml : string -&gt; System.Web.Helpers.Chart" Usage="chart.SaveXml path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path and name of the XML file.</param>
        <summary>Saves a chart as an XML file.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXAxis">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart SetXAxis (string title = &quot;&quot;, double min = 0, double max = NaN);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart SetXAxis(string title, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.SetXAxis(System.String,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetXAxis (Optional title As String = &quot;&quot;, Optional min As Double = 0, Optional max As Double = NaN) As Chart" />
      <MemberSignature Language="F#" Value="member this.SetXAxis : string * double * double -&gt; System.Web.Helpers.Chart" Usage="chart.SetXAxis (title, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="title">The title of the x-axis.</param>
        <param name="min">The minimum value for the x-axis.</param>
        <param name="max">The maximum value for the x-axis.</param>
        <summary>Sets values for the horizontal axis.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetYAxis">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart SetYAxis (string title = &quot;&quot;, double min = 0, double max = NaN);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart SetYAxis(string title, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.SetYAxis(System.String,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetYAxis (Optional title As String = &quot;&quot;, Optional min As Double = 0, Optional max As Double = NaN) As Chart" />
      <MemberSignature Language="F#" Value="member this.SetYAxis : string * double * double -&gt; System.Web.Helpers.Chart" Usage="chart.SetYAxis (title, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="title">The title of the y-axis.</param>
        <param name="min">The minimum value for the y-axis.</param>
        <param name="max">The maximum value for the y-axis.</param>
        <summary>Sets values for the vertical axis.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToWebImage">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.WebImage ToWebImage (string format = &quot;jpeg&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.WebImage ToWebImage(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.ToWebImage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToWebImage (Optional format As String = &quot;jpeg&quot;) As WebImage" />
      <MemberSignature Language="F#" Value="member this.ToWebImage : string -&gt; System.Web.Helpers.WebImage" Usage="chart.ToWebImage format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.WebImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">The format of the image to save the <see cref="T:System.Web.Helpers.WebImage" /> object as. The default is "jpeg". The <paramref name="format" /> parameter is not case sensitive.</param>
        <summary>Creates a <see cref="T:System.Web.Helpers.WebImage" /> object based on the current <see cref="T:System.Web.Helpers.Chart" /> object.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.Helpers.Chart.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="System.Web.Helpers.Chart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or set the width, in pixels, of the chart image.</summary>
        <value>The chart width.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public System.Web.Helpers.Chart Write (string format = &quot;jpeg&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Helpers.Chart Write(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Write (Optional format As String = &quot;jpeg&quot;) As Chart" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; System.Web.Helpers.Chart" Usage="chart.Write format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">The format of the image. The default is "jpeg".</param>
        <summary>Renders the output of the <see cref="T:System.Web.Helpers.Chart" /> object as an image.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFromCache">
      <MemberSignature Language="C#" Value="public static System.Web.Helpers.Chart WriteFromCache (string key, string format = &quot;jpeg&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Helpers.Chart WriteFromCache(string key, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Helpers.Chart.WriteFromCache(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WriteFromCache (key As String, Optional format As String = &quot;jpeg&quot;) As Chart" />
      <MemberSignature Language="F#" Value="static member WriteFromCache : string * string -&gt; System.Web.Helpers.Chart" Usage="System.Web.Helpers.Chart.WriteFromCache (key, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Helpers</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Helpers.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The ID of the chart in the cache.</param>
        <param name="format">The format of the image. The default is "jpeg".</param>
        <summary>Renders the output of a <see cref="T:System.Web.Helpers.Chart" /> object that has been cached as an image.</summary>
        <returns>The chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
