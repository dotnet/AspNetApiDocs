<Type Name="HtmlHelper" FullName="System.Web.WebPages.Html.HtmlHelper">
  <TypeSignature Language="C#" Value="public class HtmlHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebPages.Html.HtmlHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlHelper" />
  <TypeSignature Language="F#" Value="type HtmlHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.WebPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides support for rendering HTML form controls and performing form validation in a web page.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnonymousObjectToHtmlAttributes">
      <MemberSignature Language="C#" Value="public static System.Web.Routing.RouteValueDictionary AnonymousObjectToHtmlAttributes (object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.RouteValueDictionary AnonymousObjectToHtmlAttributes(object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnonymousObjectToHtmlAttributes (htmlAttributes As Object) As RouteValueDictionary" />
      <MemberSignature Language="F#" Value="static member AnonymousObjectToHtmlAttributes : obj -&gt; System.Web.Routing.RouteValueDictionary" Usage="System.Web.WebPages.Html.HtmlHelper.AnonymousObjectToHtmlAttributes htmlAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlAttributes">Anonymous object describing HTML attributes.</param>
        <summary>Creates a dictionary of HTML attributes from the input object, translating underscores to dashes.</summary>
        <returns>A dictionary that represents HTML attributes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeEncode">
      <MemberSignature Language="C#" Value="public string AttributeEncode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AttributeEncode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AttributeEncode (value As Object) As String" />
      <MemberSignature Language="F#" Value="member this.AttributeEncode : obj -&gt; string" Usage="htmlHelper.AttributeEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to encode.</param>
        <summary>Returns an HTML-encoded string that represents the specified object by using a minimal encoding that is suitable only for HTML attributes that are enclosed in quotation marks.</summary>
        <returns>An HTML-encoded string that represents the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeEncode">
      <MemberSignature Language="C#" Value="public string AttributeEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AttributeEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AttributeEncode (value As String) As String" />
      <MemberSignature Language="F#" Value="member this.AttributeEncode : string -&gt; string" Usage="htmlHelper.AttributeEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The string to encode.</param>
        <summary>Returns an HTML-encoded string that represents the specified string by using a minimal encoding that is suitable only for HTML attributes that are enclosed in quotation marks.</summary>
        <returns>An HTML-encoded string that represents the original string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString CheckBox (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString CheckBox(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (name As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.CheckBox : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.CheckBox name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <summary>Returns an HTML check box control that has the specified name.</summary>
        <returns>The HTML markup that represents the check box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString CheckBox (string name, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString CheckBox(string name, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (name As String, isChecked As Boolean) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.CheckBox : string * bool -&gt; System.Web.IHtmlString" Usage="htmlHelper.CheckBox (name, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="isChecked">true to indicate that the checked attribute is set to checked; otherwise, false.</param>
        <summary>Returns an HTML check box control that has the specified name and default checked status.</summary>
        <returns>The HTML markup that represents the check box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString CheckBox (string name, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString CheckBox(string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (name As String, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.CheckBox : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.CheckBox (name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The value to assign to the name attribute of the HTML control element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML check box control that has the specified name and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the check box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString CheckBox (string name, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString CheckBox(string name, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (name As String, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.CheckBox : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.CheckBox (name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML check box control that has the specified name and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the check box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString CheckBox (string name, bool isChecked, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString CheckBox(string name, bool isChecked, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (name As String, isChecked As Boolean, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.CheckBox : string * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.CheckBox (name, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="isChecked">true to indicate that the checked attribute is set to checked; otherwise, false.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML check box control that has the specified name, default checked status, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the check box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString CheckBox (string name, bool isChecked, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString CheckBox(string name, bool isChecked, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (name As String, isChecked As Boolean, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.CheckBox : string * bool * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.CheckBox (name, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="isChecked">true to indicate that the checked attribute is set to checked; otherwise, false.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML check box control that has the specified name, default checked status, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the check box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, selectList As IEnumerable(Of SelectListItem)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, selectList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <summary>Returns an HTML drop-down list control that has the specified name and that contains the specified list items.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML drop-down list control that has the specified name and custom attributes defined by an attribute dictionary, and that contains the specified list items.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML drop-down list control that has the specified name and custom attributes defined by an attribute object, and that contains the specified list items.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, defaultOption, selectList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <summary>Returns an HTML drop-down list control that has the specified name, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, defaultOption, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML drop-down list control that has the specified name and custom attributes defined by an attribute dictionary, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, defaultOption, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML drop-down list control that has the specified name and custom attributes defined by an attribute object, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValue, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValue, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValue As Object, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, defaultOption, selectList, selectedValue, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValue" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValue">The value that specifies the item in the list that is selected by default. The selected item is the first item in the list whose value matches the parameter (or whose text matches, if there is no value.) </param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML drop-down list control that has the specified name, custom attributes defined by an attribute dictionary, and default selection, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString DropDownList (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValue, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString DropDownList(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValue, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValue As Object, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.DropDownList : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.DropDownList (name, defaultOption, selectList, selectedValue, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValue" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValue">The value that specifies the item in the list that is selected by default. The item that is selected is the first item in the list that has a matching value, or that matches the items displayed text if the item has no value.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML drop-down list control that has the specified name, custom attributes defined by an attribute object, and default selection, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the drop-down list control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public string Encode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Encode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (value As Object) As String" />
      <MemberSignature Language="F#" Value="member this.Encode : obj -&gt; string" Usage="htmlHelper.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to encode.</param>
        <summary>Returns an HTML-encoded string that represents the specified object by using a full encoding that is suitable for arbitrary HTML.</summary>
        <returns>An HTML-encoded string that represents the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public string Encode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Encode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (value As String) As String" />
      <MemberSignature Language="F#" Value="member this.Encode : string -&gt; string" Usage="htmlHelper.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The string to encode.</param>
        <summary>Returns an HTML-encoded string that represents the specified string by using a full encoding that is suitable for arbitrary HTML.</summary>
        <returns>An HTML-encoded string that represents the original string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Hidden (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Hidden(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hidden (name As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Hidden : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.Hidden name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <summary>Returns an HTML hidden control that has the specified name.</summary>
        <returns>The HTML markup that represents the hidden control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Hidden (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Hidden(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hidden (name As String, value As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Hidden : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Hidden (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <summary>Returns an HTML hidden control that has the specified name and value.</summary>
        <returns>The HTML markup that represents the hidden control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Hidden (string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Hidden(string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Hidden (name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Hidden : string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.Hidden (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML hidden control that has the specified name, value, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the hidden control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Hidden (string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Hidden(string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hidden (name As String, value As Object, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Hidden : string * obj * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Hidden (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"> The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML hidden control that has the specified name, value, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the hidden control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="IdAttributeDotReplacement">
      <MemberSignature Language="C#" Value="public static string IdAttributeDotReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string IdAttributeDotReplacement" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IdAttributeDotReplacement As String" />
      <MemberSignature Language="F#" Value="static member IdAttributeDotReplacement : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the character that is used to replace the dot (.) in the id attribute of rendered form controls.</summary>
        <value>The character that is used to replace the dot in the id attribute of rendered form controls. The default is an underscore (_).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Label (string labelText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Label(string labelText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Label (labelText As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Label : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.Label labelText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="labelText">The text to display.</param>
        <summary>Returns an HTML label that displays the specified text.</summary>
        <returns>The HTML markup that represents the label.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="labelText" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Label (string labelText, object attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Label(string labelText, object attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Label (labelText As String, attributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Label : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Label (labelText, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelText" Type="System.String" />
        <Parameter Name="attributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="labelText">The text to display.</param>
        <param name="attributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML label that displays the specified text and that has the specified custom attributes.</summary>
        <returns>The HTML markup that represents the label.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="labelText" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Label (string labelText, string labelFor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Label(string labelText, string labelFor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Label (labelText As String, labelFor As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Label : string * string -&gt; System.Web.IHtmlString" Usage="htmlHelper.Label (labelText, labelFor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelText" Type="System.String" />
        <Parameter Name="labelFor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="labelText">The text to display.</param>
        <param name="labelFor">The value to assign to the for attribute of the HTML control element.</param>
        <summary>Returns an HTML label that displays the specified text and that has the specified for attribute.</summary>
        <returns>The HTML markup that represents the label.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="labelText" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Label (string labelText, string labelFor, System.Collections.Generic.IDictionary&lt;string,object&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Label(string labelText, string labelFor, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Label (labelText As String, labelFor As String, attributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Label : string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.Label (labelText, labelFor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelText" Type="System.String" />
        <Parameter Name="labelFor" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="labelText">The text to display.</param>
        <param name="labelFor">The value to assign to the for attribute of the HTML control element.</param>
        <param name="attributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML label that displays the specified text, and that has the specified for attribute and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the label.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="labelText" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Label (string labelText, string labelFor, object attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Label(string labelText, string labelFor, object attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Label (labelText As String, labelFor As String, attributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Label : string * string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Label (labelText, labelFor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelText" Type="System.String" />
        <Parameter Name="labelFor" Type="System.String" />
        <Parameter Name="attributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="labelText">The text to display.</param>
        <param name="labelFor">The value to assign to the for attribute of the HTML control element.</param>
        <param name="attributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML label that displays the specified text, and that has the specified for attribute and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the label.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="labelText" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, selectList As IEnumerable(Of SelectListItem)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, selectList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <summary>Returns an HTML list box control that has the specified name and that contains the specified list items.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML list box control that has the specified name and custom attributes defined by an attribute dictionary, and that contains the specified list items.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML list box control that has the specified name and custom attributes defined by an attribute object, and that contains the specified list items.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list box.</param>
        <summary>Returns an HTML list box control that has the specified name, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML list box control that has the specified name and custom attributes defined by an attribute dictionary, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list box.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML list box control that has the specified name and custom attributes defined by an attribute object, and that contains the specified list items and default item.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int size, bool allowMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int32 size, bool allowMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, selectList As IEnumerable(Of SelectListItem), selectedValues As Object, size As Integer, allowMultiple As Boolean) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * int * bool -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, selectList, selectedValues, size, allowMultiple)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValues" Type="System.Object" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="allowMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValues">An object that specifies the items in the list that are selected by default. The selections are retrieved through reflection by examining the properties of the object.</param>
        <param name="size">The value to assign to the size attribute of the element.</param>
        <param name="allowMultiple">true to indicate that the multiple selections are enabled; otherwise, false.</param>
        <summary>Returns an HTML list box control that has the specified name, size, list items, and default selections, and that specifies whether multiple selections are enabled.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValues As Object, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, selectedValues, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValues" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValues">An object that specifies the items in the list that are selected by default. The selections are retrieved through reflection by examining the properties of the object. </param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML list box control that has the specified name and custom attributes defined by an attribute dictionary, and that contains the specified list items, default item, and selections.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValues As Object, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, selectedValues, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValues" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValues">An object that specifies the items in the list that are selected by default. The selections are retrieved through reflection by examining the properties of the object.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML list box control that has the specified name, items, default item, and custom attributes defined by an attribute object, and selections.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int size, bool allowMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int32 size, bool allowMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValues As Object, size As Integer, allowMultiple As Boolean) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * int * bool -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, selectedValues, size, allowMultiple)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValues" Type="System.Object" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="allowMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValues">An object that specifies the items in the list that are selected by default. The selections are retrieved through reflection by examining the properties of the object.</param>
        <param name="size">The value to assign to the size attribute of the element.</param>
        <param name="allowMultiple">true to indicate that multiple selections are enabled; otherwise, false.</param>
        <summary>Returns an HTML list box control that has the specified name, size, items, default item, and selections, and that specifies whether multiple selections are enabled.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int size, bool allowMultiple, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int32 size, bool allowMultiple, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValues As Object, size As Integer, allowMultiple As Boolean, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * int * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, selectedValues, size, allowMultiple, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValues" Type="System.Object" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="allowMultiple" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValues">An object that specifies the items in the list that are selected by default. The selections are retrieved through reflection by examining the properties of the object.</param>
        <param name="size">The value to assign to the size attribute of the element.</param>
        <param name="allowMultiple">true to indicate that multiple selections are enabled; otherwise, false.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML list box control that has the specified name, size, custom attributes defined by an attribute dictionary, items, default item, and selections, and that specifies whether multiple selections are enabled.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ListBox (string name, string defaultOption, System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int size, bool allowMultiple, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ListBox(string name, string defaultOption, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.WebPages.Html.SelectListItem&gt; selectList, object selectedValues, int32 size, bool allowMultiple, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (name As String, defaultOption As String, selectList As IEnumerable(Of SelectListItem), selectedValues As Object, size As Integer, allowMultiple As Boolean, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ListBox : string * string * seq&lt;System.Web.WebPages.Html.SelectListItem&gt; * obj * int * bool * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ListBox (name, defaultOption, selectList, selectedValues, size, allowMultiple, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultOption" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.WebPages.Html.SelectListItem&gt;" />
        <Parameter Name="selectedValues" Type="System.Object" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="allowMultiple" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML select element.</param>
        <param name="defaultOption">The text to display for the default option in the list.</param>
        <param name="selectList">A list of <see cref="T:System.Web.WebPages.Html.SelectListItem" /> instances that are used to populate the list.</param>
        <param name="selectedValues">An object that specifies the items in the list that are selected by default. The selections are retrieved through reflection by examining the properties of the object.</param>
        <param name="size">The value to assign to the size attribute of the element.</param>
        <param name="allowMultiple">true to indicate that multiple selections are enabled; otherwise, false.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML list box control that has the specified name, size, custom attributes defined by an attribute object, items, default item, and selections, and that specifies whether multiple selections are enabled.</summary>
        <returns>The HTML markup that represents the list box control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ObjectToDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,object&gt; ObjectToDictionary (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, object&gt; ObjectToDictionary(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ObjectToDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjectToDictionary (value As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="static member ObjectToDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Web.WebPages.Html.HtmlHelper.ObjectToDictionary value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be converted.</param>
        <summary>Creates a dictionary from an object, by adding each public instance property as a key with its associated value to the dictionary. It will expose public properties from derived types as well. This is typically used with objects of an anonymous type.</summary>
        <returns>The created dictionary of property names and property values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Password (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Password(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Password (name As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Password : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.Password name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <summary>Returns an HTML password control that has the specified name.</summary>
        <returns>The HTML markup that represents the password control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Password (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Password(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Password (name As String, value As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Password : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Password (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <summary>Returns an HTML password control that has the specified name and value.</summary>
        <returns>The HTML markup that represents the password control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Password (string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Password(string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Password (name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Password : string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.Password (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML password control that has the specified name, value, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the password control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Password (string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Password(string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Password (name As String, value As Object, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Password : string * obj * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Password (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes"> An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML password control that has the specified name, value, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the password control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString RadioButton (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString RadioButton(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (name As String, value As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.RadioButton : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.RadioButton (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element. The name attribute defines the group that the radio button belongs to.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <summary>Returns an HTML radio button control that has the specified name and value.</summary>
        <returns>The HTML markup that represents the radio button control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString RadioButton (string name, object value, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString RadioButton(string name, object value, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (name As String, value As Object, isChecked As Boolean) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.RadioButton : string * obj * bool -&gt; System.Web.IHtmlString" Usage="htmlHelper.RadioButton (name, value, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element. The name attribute defines the group that the radio button belongs to.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="isChecked">true to indicate that the control is selected; otherwise, false.</param>
        <summary>Returns an HTML radio button control that has the specified name, value, and default selected status.</summary>
        <returns>The HTML markup that represents the radio button control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString RadioButton (string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString RadioButton(string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.RadioButton : string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.RadioButton (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element. The name attribute defines the group that the radio button belongs to.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML radio button control that has the specified name, value, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the radio button control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString RadioButton (string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString RadioButton(string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (name As String, value As Object, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.RadioButton : string * obj * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.RadioButton (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element. The name attribute defines the group that the radio button belongs to.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML radio button control that has the specified name, value, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the radio button control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString RadioButton (string name, object value, bool isChecked, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString RadioButton(string name, object value, bool isChecked, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (name As String, value As Object, isChecked As Boolean, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.RadioButton : string * obj * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.RadioButton (name, value, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element. The name attribute defines the group that the radio button belongs to.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="isChecked">true to indicate that the control is selected; otherwise, false.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML radio button control that has the specified name, value, default selected status, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the radio button control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString RadioButton (string name, object value, bool isChecked, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString RadioButton(string name, object value, bool isChecked, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (name As String, value As Object, isChecked As Boolean, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.RadioButton : string * obj * bool * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.RadioButton (name, value, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element. The name attribute defines the group that the radio button belongs to.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="isChecked">true to indicate that the control is selected; otherwise, false.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML radio button control that has the specified name, value, default selected status, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the radio button control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Raw (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Raw(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Raw (value As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Raw : obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.Raw value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to render HTML for.</param>
        <summary>Wraps HTML markup in an <see cref="T:System.Web.HtmlString" /> instance so that it is interpreted as HTML markup.</summary>
        <returns>The unencoded HTML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString Raw (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString Raw(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Raw (value As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.Raw : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.Raw value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The string to interpret as HTML markup instead of being HTML-encoded.</param>
        <summary>Wraps HTML markup in an <see cref="T:System.Web.HtmlString" /> instance so that it is interpreted as HTML markup.</summary>
        <returns>The unencoded HTML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, value As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * string -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textrarea element.</param>
        <param name="value">The text to display.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name and value.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, string value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, string value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, value As String, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <param name="value">The text to display.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name, value, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, string value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, string value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, value As String, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <param name="value">The text to display.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name, value, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, string value, int rows, int columns, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, string value, int32 rows, int32 columns, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, value As String, rows As Integer, columns As Integer, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * string * int * int * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, value, rows, columns, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="rows" Type="System.Int32" />
        <Parameter Name="columns" Type="System.Int32" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <param name="value">The text to display.</param>
        <param name="rows">The value to assign to the rows attribute of the element.</param>
        <param name="columns">The value to assign to the cols attribute of the element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name, value, row attribute, col attribute, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextArea (string name, string value, int rows, int columns, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextArea(string name, string value, int32 rows, int32 columns, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (name As String, value As String, rows As Integer, columns As Integer, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextArea : string * string * int * int * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextArea (name, value, rows, columns, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="rows" Type="System.Int32" />
        <Parameter Name="columns" Type="System.Int32" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML textarea element.</param>
        <param name="value">The text to display.</param>
        <param name="rows">The value to assign to the rows attribute of the element.</param>
        <param name="columns">The value to assign to the cols attribute of the element.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML multi-line text input (text area) control that has the specified name, value, row attribute, col attribute, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the text area control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextBox (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextBox(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBox (name As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextBox : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextBox name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <summary>Returns an HTML text control that has the specified name.</summary>
        <returns>The HTML markup that represents the text control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextBox (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextBox(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBox (name As String, value As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextBox : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextBox (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <summary>Returns an HTML text control that has the specified name and value.</summary>
        <returns>The HTML markup that represents the text control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextBox (string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextBox(string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBox (name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextBox : string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextBox (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML text control that has the specified name, value, and custom attributes defined by an attribute dictionary.</summary>
        <returns>The HTML markup that represents the text control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString TextBox (string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString TextBox(string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBox (name As String, value As Object, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.TextBox : string * obj * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.TextBox (name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the name attribute of the HTML control element.</param>
        <param name="value">The value to assign to the value attribute of the element.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML text control that has the specified name, value, and custom attributes defined by an attribute object.</summary>
        <returns>The HTML markup that represents the text control.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnobtrusiveJavaScriptEnabled">
      <MemberSignature Language="C#" Value="public static bool UnobtrusiveJavaScriptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UnobtrusiveJavaScriptEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UnobtrusiveJavaScriptEnabled As Boolean" />
      <MemberSignature Language="F#" Value="static member UnobtrusiveJavaScriptEnabled : bool with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the page uses unobtrusive JavaScript for Ajax functionality.</summary>
        <value>true if the page uses unobtrusive JavaScript; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationInputCssClassName">
      <MemberSignature Language="C#" Value="public static string ValidationInputCssClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidationInputCssClassName" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidationInputCssClassName As String" />
      <MemberSignature Language="F#" Value="static member ValidationInputCssClassName : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the CSS class that defines the appearance of input elements when validation fails.</summary>
        <value>The name of the CSS class. The default is field-validation-error.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationInputValidCssClassName">
      <MemberSignature Language="C#" Value="public static string ValidationInputValidCssClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidationInputValidCssClassName" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidationInputValidCssClassName As String" />
      <MemberSignature Language="F#" Value="static member ValidationInputValidCssClassName : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the CSS class that defines the appearance of input elements when validation passes.</summary>
        <value>The name of the CSS class. The default is input-validation-valid.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (name As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationMessage : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the form field that was validated.</param>
        <summary>Returns an HTML span element that contains the first validation error message for the specified form field.</summary>
        <returns>If the value in the specified field is valid, null; otherwise, the HTML markup that represents the validation error message that is associated with the specified field.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationMessage (string name, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationMessage(string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (name As String, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationMessage : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationMessage (name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the form field that was validated.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML span element that has the specified custom attributes defined by an attribute dictionary, and that contains the first validation error message for the specified form field.</summary>
        <returns>If the value in the specified field is valid, null; otherwise, the HTML markup that represents the validation error message that is associated with the specified field.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationMessage (string name, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationMessage(string name, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (name As String, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationMessage : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationMessage (name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the form field that was validated.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML span element that has the specified custom attributes defined by an attribute object, and that contains the first validation error message for the specified form field.</summary>
        <returns>If the value in the specified field is valid, null; otherwise, the HTML markup that represents the validation error message that is associated with the specified field.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationMessage (string name, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationMessage(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (name As String, message As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationMessage : string * string -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationMessage (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the form field that was validated.</param>
        <param name="message">The validation error message to display. If null, the first validation error message that is associated with the specified form field is displayed.</param>
        <summary>Returns an HTML span element that contains a validation error message for the specified form field.</summary>
        <returns>If the value in the specified field is valid, null; otherwise, the HTML markup that represents the validation error message that is associated with the specified field.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationMessage (string name, string message, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationMessage(string name, string message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (name As String, message As String, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationMessage : string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationMessage (name, message, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the form field that was validated.</param>
        <param name="message">The validation error message to display. If null, the first validation error message that is associated with the specified form field is displayed.</param>
        <param name="htmlAttributes"> The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML span element that has the specified custom attributes defined by an attribute dictionary, and that contains a validation error message for the specified form field.</summary>
        <returns>If the specified field is valid, null; otherwise, the HTML markup that represents a validation error message that is associated with the specified field.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationMessage (string name, string message, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationMessage(string name, string message, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (name As String, message As String, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationMessage : string * string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationMessage (name, message, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the form field that was validated.</param>
        <param name="message">The validation error message to display. If null, the first validation error message that is associated with the specified form field is displayed.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML span element that has the specified custom attributes defined by an attribute object, and that contains a validation error message for the specified form field.</summary>
        <returns>If the specified field is valid, null; otherwise, the HTML markup that represents a validation error message that is associated with the specified field.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Sytem.ArgumentException">
          <paramref name="name" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessageCssClassName">
      <MemberSignature Language="C#" Value="public static string ValidationMessageCssClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidationMessageCssClassName" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidationMessageCssClassName As String" />
      <MemberSignature Language="F#" Value="static member ValidationMessageCssClassName : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the CSS class that defines the appearance of validation error messages when validation fails.</summary>
        <value>The name of the CSS class.  The default is field-validation-error.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessageValidCssClassName">
      <MemberSignature Language="C#" Value="public static string ValidationMessageValidCssClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidationMessageValidCssClassName" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidationMessageValidCssClassName As String" />
      <MemberSignature Language="F#" Value="static member ValidationMessageValidCssClassName : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the CSS class that defines the appearance of validation error messages when validation passes.</summary>
        <value>The name of the CSS class. The default is field-validation-valid.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary () As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : unit -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an HTML div element that contains an unordered list of all validation error messages from the model-state dictionary.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (bool excludeFieldErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(bool excludeFieldErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (excludeFieldErrors As Boolean) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : bool -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary excludeFieldErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excludeFieldErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="excludeFieldErrors">true to exclude field-level validation error messages from the list; false to include both model-level and field-level validation error messages.</param>
        <summary>Returns an HTML div element that contains an unordered list of validation error message from the model-state dictionary, optionally excluding field-level errors.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary htmlAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML div element that has the specified custom attributes defined by an attribute dictionary, and that contains an unordered list of all validation error messages that are in the model-state dictionary.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary htmlAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML div element that has the specified custom attributes defined by an attribute object, and that contains an unordered list of all validation error messages that are in the model-state dictionary.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (message As String) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : string -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message that comes before the list of validation error messages.</param>
        <summary>Returns an HTML div element that contains a summary message and an unordered list of all validation error messages that are in the model-state dictionary.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (string message, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(string message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (message As String, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary (message, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="message">The message that comes before the list of validation error messages.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML div element that has the specified custom attributes defined by an attribute dictionary, and that contains a summary message and an unordered list of all validation error message from the model-state dictionary.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (string message, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(string message, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (message As String, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : string * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary (message, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">The summary message that comes before the list of validation error messages.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML div element that has the specified custom attributes defined by an attribute object, and that contains a summary message and an unordered list of all validation error message from the model-state dictionary.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (string message, bool excludeFieldErrors, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(string message, bool excludeFieldErrors, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (message As String, excludeFieldErrors As Boolean, htmlAttributes As IDictionary(Of String, Object)) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : string * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary (message, excludeFieldErrors, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="excludeFieldErrors" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="message">The summary message that comes before the list of validation error messages.</param>
        <param name="excludeFieldErrors">true to exclude field-level validation error messages from the results; false to include both model-level and field-level validation error messages.</param>
        <param name="htmlAttributes">The names and values of custom attributes for the element.</param>
        <summary>Returns an HTML div element that has the specified custom attributes defined by an attribute dictionary, and that contains a summary message and an unordered list of validation error message from the model-state dictionary, optionally excluding field-level errors.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C#" Value="public System.Web.IHtmlString ValidationSummary (string message, bool excludeFieldErrors, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHtmlString ValidationSummary(string message, bool excludeFieldErrors, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (message As String, excludeFieldErrors As Boolean, htmlAttributes As Object) As IHtmlString" />
      <MemberSignature Language="F#" Value="member this.ValidationSummary : string * bool * obj -&gt; System.Web.IHtmlString" Usage="htmlHelper.ValidationSummary (message, excludeFieldErrors, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="excludeFieldErrors" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">The summary message that comes before the list of validation error messages.</param>
        <param name="excludeFieldErrors">true to exclude field-level validation error messages from the results; false to include and field-level validation error messages.</param>
        <param name="htmlAttributes">An object that contains custom attributes for the element. The attribute names and values are retrieved through reflection by examining the properties of the object.</param>
        <summary>Returns an HTML div element that has the specified custom attributes defined by an attribute object, and that contains a summary message and an unordered list of validation error message from the model-state dictionary, optionally excluding field-level errors.</summary>
        <returns>The HTML markup that represents the validation error messages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummaryClass">
      <MemberSignature Language="C#" Value="public static string ValidationSummaryClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidationSummaryClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidationSummaryClass As String" />
      <MemberSignature Language="F#" Value="static member ValidationSummaryClass : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the CSS class that defines the appearance of a validation summary when validation fails.</summary>
        <value>The name of the CSS class. The default is validation-summary-errors.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummaryValidClass">
      <MemberSignature Language="C#" Value="public static string ValidationSummaryValidClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ValidationSummaryValidClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ValidationSummaryValidClass As String" />
      <MemberSignature Language="F#" Value="static member ValidationSummaryValidClass : string with get, set" Usage="System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the CSS class that defines the appearance of a validation summary when validation passes.</summary>
        <value>The name of the CSS class. The default is validation-summary-valid.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
