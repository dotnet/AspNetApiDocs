<Type Name="OutputCacheAttribute" FullName="System.Web.Mvc.OutputCacheAttribute">
  <TypeSignature Language="C#" Value="public class OutputCacheAttribute : System.Web.Mvc.ActionFilterAttribute, System.Web.Mvc.IExceptionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutputCacheAttribute extends System.Web.Mvc.ActionFilterAttribute implements class System.Web.Mvc.IExceptionFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.OutputCacheAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class OutputCacheAttribute&#xA;Inherits ActionFilterAttribute&#xA;Implements IExceptionFilter" />
  <TypeSignature Language="F#" Value="type OutputCacheAttribute = class&#xA;    inherit ActionFilterAttribute&#xA;    interface IExceptionFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Mvc.ActionFilterAttribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Mvc.IExceptionFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=false, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=false, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an attribute that is used to mark an action method whose output will be cached.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputCacheAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.OutputCacheAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheProfile">
      <MemberSignature Language="C#" Value="public string CacheProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheProfile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheProfile As String" />
      <MemberSignature Language="F#" Value="member this.CacheProfile : string with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.CacheProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the cache profile name.</summary>
        <value>The cache profile name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildActionCache">
      <MemberSignature Language="C#" Value="public static System.Runtime.Caching.ObjectCache ChildActionCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Caching.ObjectCache ChildActionCache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ChildActionCache As ObjectCache" />
      <MemberSignature Language="F#" Value="static member ChildActionCache : System.Runtime.Caching.ObjectCache with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.ChildActionCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.ObjectCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the child action cache.</summary>
        <value>The child action cache.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Integer" />
      <MemberSignature Language="F#" Value="member this.Duration : int with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the cache duration, in seconds.</summary>
        <value>The cache duration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChildActionCacheActive">
      <MemberSignature Language="C#" Value="public static bool IsChildActionCacheActive (System.Web.Mvc.ControllerContext controllerContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsChildActionCacheActive(class System.Web.Mvc.ControllerContext controllerContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsChildActionCacheActive (controllerContext As ControllerContext) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsChildActionCacheActive : System.Web.Mvc.ControllerContext -&gt; bool" Usage="System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive controllerContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <summary>Returns a value that indicates whether a child action cache is active.</summary>
        <returns>true if the child action cache is active; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Web.UI.OutputCacheLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.OutputCacheLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As OutputCacheLocation" />
      <MemberSignature Language="F#" Value="member this.Location : System.Web.UI.OutputCacheLocation with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.OutputCacheLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the location.</summary>
        <value>The location.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoStore">
      <MemberSignature Language="C#" Value="public bool NoStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.NoStore" />
      <MemberSignature Language="VB.NET" Value="Public Property NoStore As Boolean" />
      <MemberSignature Language="F#" Value="member this.NoStore : bool with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.NoStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to store the cache.</summary>
        <value>true if the cache should be stored; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuted">
      <MemberSignature Language="C#" Value="public override void OnActionExecuted (System.Web.Mvc.ActionExecutedContext filterContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnActionExecuted(class System.Web.Mvc.ActionExecutedContext filterContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnActionExecuted (filterContext As ActionExecutedContext)" />
      <MemberSignature Language="F#" Value="override this.OnActionExecuted : System.Web.Mvc.ActionExecutedContext -&gt; unit" Usage="outputCacheAttribute.OnActionExecuted filterContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterContext" Type="System.Web.Mvc.ActionExecutedContext" />
      </Parameters>
      <Docs>
        <param name="filterContext">The filter context.</param>
        <summary>This method is an implementation of <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> and supports the ASP.NET MVC infrastructure. It is not intended to be used directly from your code. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuting">
      <MemberSignature Language="C#" Value="public override void OnActionExecuting (System.Web.Mvc.ActionExecutingContext filterContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnActionExecuting(class System.Web.Mvc.ActionExecutingContext filterContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnActionExecuting (filterContext As ActionExecutingContext)" />
      <MemberSignature Language="F#" Value="override this.OnActionExecuting : System.Web.Mvc.ActionExecutingContext -&gt; unit" Usage="outputCacheAttribute.OnActionExecuting filterContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterContext" Type="System.Web.Mvc.ActionExecutingContext" />
      </Parameters>
      <Docs>
        <param name="filterContext">The filter context.</param>
        <summary>This method is an implementation of <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> and supports the ASP.NET MVC infrastructure. It is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="public void OnException (System.Web.Mvc.ExceptionContext filterContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnException(class System.Web.Mvc.ExceptionContext filterContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnException (filterContext As ExceptionContext)" />
      <MemberSignature Language="F#" Value="abstract member OnException : System.Web.Mvc.ExceptionContext -&gt; unit&#xA;override this.OnException : System.Web.Mvc.ExceptionContext -&gt; unit" Usage="outputCacheAttribute.OnException filterContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterContext" Type="System.Web.Mvc.ExceptionContext" />
      </Parameters>
      <Docs>
        <param name="filterContext">The filter context.</param>
        <summary>This method is an implementation of <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> and supports the ASP.NET MVC infrastructure. It is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResultExecuted">
      <MemberSignature Language="C#" Value="public override void OnResultExecuted (System.Web.Mvc.ResultExecutedContext filterContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnResultExecuted(class System.Web.Mvc.ResultExecutedContext filterContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnResultExecuted (filterContext As ResultExecutedContext)" />
      <MemberSignature Language="F#" Value="override this.OnResultExecuted : System.Web.Mvc.ResultExecutedContext -&gt; unit" Usage="outputCacheAttribute.OnResultExecuted filterContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterContext" Type="System.Web.Mvc.ResultExecutedContext" />
      </Parameters>
      <Docs>
        <param name="filterContext">The filter context.</param>
        <summary>This method is an implementation of <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> and supports the ASP.NET MVC infrastructure. It is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResultExecuting">
      <MemberSignature Language="C#" Value="public override void OnResultExecuting (System.Web.Mvc.ResultExecutingContext filterContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnResultExecuting(class System.Web.Mvc.ResultExecutingContext filterContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnResultExecuting (filterContext As ResultExecutingContext)" />
      <MemberSignature Language="F#" Value="override this.OnResultExecuting : System.Web.Mvc.ResultExecutingContext -&gt; unit" Usage="outputCacheAttribute.OnResultExecuting filterContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterContext" Type="System.Web.Mvc.ResultExecutingContext" />
      </Parameters>
      <Docs>
        <param name="filterContext">The filter context, which encapsulates information for using <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
        <summary>Called before the action result executes.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="filterContext" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDependency As String" />
      <MemberSignature Language="F#" Value="member this.SqlDependency : string with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the SQL dependency.</summary>
        <value>The SQL dependency.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncoding">
      <MemberSignature Language="C#" Value="public string VaryByContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByContentEncoding As String" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncoding : string with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vary-by-content encoding.</summary>
        <value>The vary-by-content encoding.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCustom As String" />
      <MemberSignature Language="F#" Value="member this.VaryByCustom : string with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vary-by-custom value.</summary>
        <value>The vary-by-custom value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByHeader As String" />
      <MemberSignature Language="F#" Value="member this.VaryByHeader : string with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vary-by-header value.</summary>
        <value>The vary-by-header value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByParam">
      <MemberSignature Language="C#" Value="public string VaryByParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParam" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByParam As String" />
      <MemberSignature Language="F#" Value="member this.VaryByParam : string with get, set" Usage="System.Web.Mvc.OutputCacheAttribute.VaryByParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vary-by-param value.</summary>
        <value>The vary-by-param value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
