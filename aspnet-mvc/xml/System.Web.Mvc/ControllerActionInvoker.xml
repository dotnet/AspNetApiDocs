<Type Name="ControllerActionInvoker" FullName="System.Web.Mvc.ControllerActionInvoker">
  <TypeSignature Language="C#" Value="public class ControllerActionInvoker : System.Web.Mvc.IActionInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControllerActionInvoker extends System.Object implements class System.Web.Mvc.IActionInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.ControllerActionInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class ControllerActionInvoker&#xA;Implements IActionInvoker" />
  <TypeSignature Language="F#" Value="type ControllerActionInvoker = class&#xA;    interface IActionInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Mvc.IActionInvoker</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a class that is responsible for invoking the action methods of a controller.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControllerActionInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.ControllerActionInvoker" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binders">
      <MemberSignature Language="C#" Value="protected internal System.Web.Mvc.ModelBinderDictionary Binders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Mvc.ModelBinderDictionary Binders" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ControllerActionInvoker.Binders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property Binders As ModelBinderDictionary" />
      <MemberSignature Language="F#" Value="member this.Binders : System.Web.Mvc.ModelBinderDictionary with get, set" Usage="System.Web.Mvc.ControllerActionInvoker.Binders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ModelBinderDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the model binders that are associated with the action.</summary>
        <value>The model binders that are associated with the action.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateActionResult">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ActionResult CreateActionResult (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ActionDescriptor actionDescriptor, object actionReturnValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ActionResult CreateActionResult(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ActionDescriptor actionDescriptor, object actionReturnValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateActionResult (controllerContext As ControllerContext, actionDescriptor As ActionDescriptor, actionReturnValue As Object) As ActionResult" />
      <MemberSignature Language="F#" Value="abstract member CreateActionResult : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor * obj -&gt; System.Web.Mvc.ActionResult&#xA;override this.CreateActionResult : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor * obj -&gt; System.Web.Mvc.ActionResult" Usage="controllerActionInvoker.CreateActionResult (controllerContext, actionDescriptor, actionReturnValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
        <Parameter Name="actionReturnValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionDescriptor">The action descriptor.</param>
        <param name="actionReturnValue">The action return value.</param>
        <summary>Creates the action result.</summary>
        <returns>The action result object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAction">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ActionDescriptor FindAction (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ControllerDescriptor controllerDescriptor, string actionName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ActionDescriptor FindAction(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ControllerDescriptor controllerDescriptor, string actionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindAction (controllerContext As ControllerContext, controllerDescriptor As ControllerDescriptor, actionName As String) As ActionDescriptor" />
      <MemberSignature Language="F#" Value="abstract member FindAction : System.Web.Mvc.ControllerContext * System.Web.Mvc.ControllerDescriptor * string -&gt; System.Web.Mvc.ActionDescriptor&#xA;override this.FindAction : System.Web.Mvc.ControllerContext * System.Web.Mvc.ControllerDescriptor * string -&gt; System.Web.Mvc.ActionDescriptor" Usage="controllerActionInvoker.FindAction (controllerContext, controllerDescriptor, actionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ActionDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="controllerDescriptor" Type="System.Web.Mvc.ControllerDescriptor" />
        <Parameter Name="actionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="controllerDescriptor">The controller descriptor.</param>
        <param name="actionName">The name of the action.</param>
        <summary>Finds the information about the action method.</summary>
        <returns>Information about the action method.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControllerDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ControllerDescriptor GetControllerDescriptor (System.Web.Mvc.ControllerContext controllerContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ControllerDescriptor GetControllerDescriptor(class System.Web.Mvc.ControllerContext controllerContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControllerDescriptor (controllerContext As ControllerContext) As ControllerDescriptor" />
      <MemberSignature Language="F#" Value="abstract member GetControllerDescriptor : System.Web.Mvc.ControllerContext -&gt; System.Web.Mvc.ControllerDescriptor&#xA;override this.GetControllerDescriptor : System.Web.Mvc.ControllerContext -&gt; System.Web.Mvc.ControllerDescriptor" Usage="controllerActionInvoker.GetControllerDescriptor controllerContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ControllerDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <summary>Retrieves information about the controller by using the specified controller context.</summary>
        <returns>Information about the controller.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.FilterInfo GetFilters (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ActionDescriptor actionDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.FilterInfo GetFilters(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ActionDescriptor actionDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetFilters (controllerContext As ControllerContext, actionDescriptor As ActionDescriptor) As FilterInfo" />
      <MemberSignature Language="F#" Value="abstract member GetFilters : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor -&gt; System.Web.Mvc.FilterInfo&#xA;override this.GetFilters : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor -&gt; System.Web.Mvc.FilterInfo" Usage="controllerActionInvoker.GetFilters (controllerContext, actionDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.FilterInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionDescriptor">The action descriptor.</param>
        <summary>Retrieves information about the action filters.</summary>
        <returns>Information about the action filters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterValue">
      <MemberSignature Language="C#" Value="protected virtual object GetParameterValue (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ParameterDescriptor parameterDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetParameterValue(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ParameterDescriptor parameterDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetParameterValue (controllerContext As ControllerContext, parameterDescriptor As ParameterDescriptor) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetParameterValue : System.Web.Mvc.ControllerContext * System.Web.Mvc.ParameterDescriptor -&gt; obj&#xA;override this.GetParameterValue : System.Web.Mvc.ControllerContext * System.Web.Mvc.ParameterDescriptor -&gt; obj" Usage="controllerActionInvoker.GetParameterValue (controllerContext, parameterDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="parameterDescriptor" Type="System.Web.Mvc.ParameterDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="parameterDescriptor">The parameter descriptor.</param>
        <summary>Gets the value of the specified action-method parameter.</summary>
        <returns>The value of the action-method parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetParameterValues (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ActionDescriptor actionDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetParameterValues(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ActionDescriptor actionDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetParameterValues (controllerContext As ControllerContext, actionDescriptor As ActionDescriptor) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetParameterValues : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetParameterValues : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="controllerActionInvoker.GetParameterValues (controllerContext, actionDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionDescriptor">The action descriptor.</param>
        <summary>Gets the values of the action-method parameters.</summary>
        <returns>The values of the action-method parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAction">
      <MemberSignature Language="C#" Value="public virtual bool InvokeAction (System.Web.Mvc.ControllerContext controllerContext, string actionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeAction(class System.Web.Mvc.ControllerContext controllerContext, string actionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeAction (controllerContext As ControllerContext, actionName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member InvokeAction : System.Web.Mvc.ControllerContext * string -&gt; bool&#xA;override this.InvokeAction : System.Web.Mvc.ControllerContext * string -&gt; bool" Usage="controllerActionInvoker.InvokeAction (controllerContext, actionName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionName">The name of the action to invoke.</param>
        <summary>Invokes the specified action by using the specified controller context.</summary>
        <returns>The result of executing the action.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="controllerContext" /> parameter is null.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="actionName" /> parameter is null or empty.</exception>
        <exception cref="T:System.Threading.ThreadAbortException">The thread was aborted during invocation of the action.</exception>
        <exception cref="T:System.Exception">An unspecified error occurred during invocation of the action.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeActionMethod">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ActionResult InvokeActionMethod (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ActionDescriptor actionDescriptor, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ActionResult InvokeActionMethod(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ActionDescriptor actionDescriptor, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeActionMethod (controllerContext As ControllerContext, actionDescriptor As ActionDescriptor, parameters As IDictionary(Of String, Object)) As ActionResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeActionMethod : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.ActionResult&#xA;override this.InvokeActionMethod : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionDescriptor * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.ActionResult" Usage="controllerActionInvoker.InvokeActionMethod (controllerContext, actionDescriptor, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionDescriptor">The action descriptor.</param>
        <param name="parameters">The parameters.</param>
        <summary>Invokes the specified action method by using the specified parameters and the controller context.</summary>
        <returns>The result of executing the action method.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeActionMethodWithFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ActionExecutedContext InvokeActionMethodWithFilters (System.Web.Mvc.ControllerContext controllerContext, System.Collections.Generic.IList&lt;System.Web.Mvc.IActionFilter&gt; filters, System.Web.Mvc.ActionDescriptor actionDescriptor, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ActionExecutedContext InvokeActionMethodWithFilters(class System.Web.Mvc.ControllerContext controllerContext, class System.Collections.Generic.IList`1&lt;class System.Web.Mvc.IActionFilter&gt; filters, class System.Web.Mvc.ActionDescriptor actionDescriptor, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeActionMethodWithFilters (controllerContext As ControllerContext, filters As IList(Of IActionFilter), actionDescriptor As ActionDescriptor, parameters As IDictionary(Of String, Object)) As ActionExecutedContext" />
      <MemberSignature Language="F#" Value="abstract member InvokeActionMethodWithFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IActionFilter&gt; * System.Web.Mvc.ActionDescriptor * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.ActionExecutedContext&#xA;override this.InvokeActionMethodWithFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IActionFilter&gt; * System.Web.Mvc.ActionDescriptor * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.ActionExecutedContext" Usage="controllerActionInvoker.InvokeActionMethodWithFilters (controllerContext, filters, actionDescriptor, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ActionExecutedContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;System.Web.Mvc.IActionFilter&gt;" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="filters">The action filters.</param>
        <param name="actionDescriptor">The action descriptor.</param>
        <param name="parameters">The parameters.</param>
        <summary>Invokes the specified action method by using the specified parameters, controller context, and action filters.</summary>
        <returns>The context for the ActionExecuted method of the <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> class.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeActionResult">
      <MemberSignature Language="C#" Value="protected virtual void InvokeActionResult (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ActionResult actionResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InvokeActionResult(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ActionResult actionResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InvokeActionResult (controllerContext As ControllerContext, actionResult As ActionResult)" />
      <MemberSignature Language="F#" Value="abstract member InvokeActionResult : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionResult -&gt; unit&#xA;override this.InvokeActionResult : System.Web.Mvc.ControllerContext * System.Web.Mvc.ActionResult -&gt; unit" Usage="controllerActionInvoker.InvokeActionResult (controllerContext, actionResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionResult" Type="System.Web.Mvc.ActionResult" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionResult">The action result.</param>
        <summary>Invokes the specified action result by using the specified controller context.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeActionResultWithFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ResultExecutedContext InvokeActionResultWithFilters (System.Web.Mvc.ControllerContext controllerContext, System.Collections.Generic.IList&lt;System.Web.Mvc.IResultFilter&gt; filters, System.Web.Mvc.ActionResult actionResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ResultExecutedContext InvokeActionResultWithFilters(class System.Web.Mvc.ControllerContext controllerContext, class System.Collections.Generic.IList`1&lt;class System.Web.Mvc.IResultFilter&gt; filters, class System.Web.Mvc.ActionResult actionResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeActionResultWithFilters (controllerContext As ControllerContext, filters As IList(Of IResultFilter), actionResult As ActionResult) As ResultExecutedContext" />
      <MemberSignature Language="F#" Value="abstract member InvokeActionResultWithFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IResultFilter&gt; * System.Web.Mvc.ActionResult -&gt; System.Web.Mvc.ResultExecutedContext&#xA;override this.InvokeActionResultWithFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IResultFilter&gt; * System.Web.Mvc.ActionResult -&gt; System.Web.Mvc.ResultExecutedContext" Usage="controllerActionInvoker.InvokeActionResultWithFilters (controllerContext, filters, actionResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ResultExecutedContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;System.Web.Mvc.IResultFilter&gt;" />
        <Parameter Name="actionResult" Type="System.Web.Mvc.ActionResult" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="filters">The action filters.</param>
        <param name="actionResult">The action result.</param>
        <summary>Invokes the specified action result by using the specified action filters and the controller context.</summary>
        <returns>The context for the ResultExecuted method of the <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> class.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAuthenticationFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.Filters.AuthenticationContext InvokeAuthenticationFilters (System.Web.Mvc.ControllerContext controllerContext, System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt; filters, System.Web.Mvc.ActionDescriptor actionDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.Filters.AuthenticationContext InvokeAuthenticationFilters(class System.Web.Mvc.ControllerContext controllerContext, class System.Collections.Generic.IList`1&lt;class System.Web.Mvc.Filters.IAuthenticationFilter&gt; filters, class System.Web.Mvc.ActionDescriptor actionDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeAuthenticationFilters (controllerContext As ControllerContext, filters As IList(Of IAuthenticationFilter), actionDescriptor As ActionDescriptor) As AuthenticationContext" />
      <MemberSignature Language="F#" Value="abstract member InvokeAuthenticationFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt; * System.Web.Mvc.ActionDescriptor -&gt; System.Web.Mvc.Filters.AuthenticationContext&#xA;override this.InvokeAuthenticationFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt; * System.Web.Mvc.ActionDescriptor -&gt; System.Web.Mvc.Filters.AuthenticationContext" Usage="controllerActionInvoker.InvokeAuthenticationFilters (controllerContext, filters, actionDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.Filters.AuthenticationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt;" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerContext">To be added.</param>
        <param name="filters">To be added.</param>
        <param name="actionDescriptor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAuthenticationFiltersChallenge">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.Filters.AuthenticationChallengeContext InvokeAuthenticationFiltersChallenge (System.Web.Mvc.ControllerContext controllerContext, System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt; filters, System.Web.Mvc.ActionDescriptor actionDescriptor, System.Web.Mvc.ActionResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.Filters.AuthenticationChallengeContext InvokeAuthenticationFiltersChallenge(class System.Web.Mvc.ControllerContext controllerContext, class System.Collections.Generic.IList`1&lt;class System.Web.Mvc.Filters.IAuthenticationFilter&gt; filters, class System.Web.Mvc.ActionDescriptor actionDescriptor, class System.Web.Mvc.ActionResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeAuthenticationFiltersChallenge (controllerContext As ControllerContext, filters As IList(Of IAuthenticationFilter), actionDescriptor As ActionDescriptor, result As ActionResult) As AuthenticationChallengeContext" />
      <MemberSignature Language="F#" Value="abstract member InvokeAuthenticationFiltersChallenge : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt; * System.Web.Mvc.ActionDescriptor * System.Web.Mvc.ActionResult -&gt; System.Web.Mvc.Filters.AuthenticationChallengeContext&#xA;override this.InvokeAuthenticationFiltersChallenge : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt; * System.Web.Mvc.ActionDescriptor * System.Web.Mvc.ActionResult -&gt; System.Web.Mvc.Filters.AuthenticationChallengeContext" Usage="controllerActionInvoker.InvokeAuthenticationFiltersChallenge (controllerContext, filters, actionDescriptor, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.Filters.AuthenticationChallengeContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;System.Web.Mvc.Filters.IAuthenticationFilter&gt;" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
        <Parameter Name="result" Type="System.Web.Mvc.ActionResult" />
      </Parameters>
      <Docs>
        <param name="controllerContext">To be added.</param>
        <param name="filters">To be added.</param>
        <param name="actionDescriptor">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAuthorizationFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.AuthorizationContext InvokeAuthorizationFilters (System.Web.Mvc.ControllerContext controllerContext, System.Collections.Generic.IList&lt;System.Web.Mvc.IAuthorizationFilter&gt; filters, System.Web.Mvc.ActionDescriptor actionDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.AuthorizationContext InvokeAuthorizationFilters(class System.Web.Mvc.ControllerContext controllerContext, class System.Collections.Generic.IList`1&lt;class System.Web.Mvc.IAuthorizationFilter&gt; filters, class System.Web.Mvc.ActionDescriptor actionDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeAuthorizationFilters (controllerContext As ControllerContext, filters As IList(Of IAuthorizationFilter), actionDescriptor As ActionDescriptor) As AuthorizationContext" />
      <MemberSignature Language="F#" Value="abstract member InvokeAuthorizationFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IAuthorizationFilter&gt; * System.Web.Mvc.ActionDescriptor -&gt; System.Web.Mvc.AuthorizationContext&#xA;override this.InvokeAuthorizationFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IAuthorizationFilter&gt; * System.Web.Mvc.ActionDescriptor -&gt; System.Web.Mvc.AuthorizationContext" Usage="controllerActionInvoker.InvokeAuthorizationFilters (controllerContext, filters, actionDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.AuthorizationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;System.Web.Mvc.IAuthorizationFilter&gt;" />
        <Parameter Name="actionDescriptor" Type="System.Web.Mvc.ActionDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="filters">The authorization filters.</param>
        <param name="actionDescriptor">The action descriptor.</param>
        <summary>Invokes the specified authorization filters by using the specified action descriptor and controller context.</summary>
        <returns>The context for the <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeExceptionFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Web.Mvc.ExceptionContext InvokeExceptionFilters (System.Web.Mvc.ControllerContext controllerContext, System.Collections.Generic.IList&lt;System.Web.Mvc.IExceptionFilter&gt; filters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.Mvc.ExceptionContext InvokeExceptionFilters(class System.Web.Mvc.ControllerContext controllerContext, class System.Collections.Generic.IList`1&lt;class System.Web.Mvc.IExceptionFilter&gt; filters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeExceptionFilters (controllerContext As ControllerContext, filters As IList(Of IExceptionFilter), exception As Exception) As ExceptionContext" />
      <MemberSignature Language="F#" Value="abstract member InvokeExceptionFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IExceptionFilter&gt; * Exception -&gt; System.Web.Mvc.ExceptionContext&#xA;override this.InvokeExceptionFilters : System.Web.Mvc.ControllerContext * System.Collections.Generic.IList&lt;System.Web.Mvc.IExceptionFilter&gt; * Exception -&gt; System.Web.Mvc.ExceptionContext" Usage="controllerActionInvoker.InvokeExceptionFilters (controllerContext, filters, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ExceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;System.Web.Mvc.IExceptionFilter&gt;" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="filters">The exception filters.</param>
        <param name="exception">The exception.</param>
        <summary>Invokes the specified exception filters by using the specified exception and controller context.</summary>
        <returns>The context for the <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
