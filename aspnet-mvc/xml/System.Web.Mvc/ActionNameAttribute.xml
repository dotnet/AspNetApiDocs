<Type Name="ActionNameAttribute" FullName="System.Web.Mvc.ActionNameAttribute">
  <TypeSignature Language="C#" Value="public sealed class ActionNameAttribute : System.Web.Mvc.ActionNameSelectorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionNameAttribute extends System.Web.Mvc.ActionNameSelectorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.ActionNameAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionNameAttribute&#xA;Inherits ActionNameSelectorAttribute" />
  <TypeSignature Language="F#" Value="type ActionNameAttribute = class&#xA;    inherit ActionNameSelectorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Mvc.ActionNameSelectorAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an attribute that is used for the name of an action.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionNameAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.ActionNameAttribute : string -&gt; System.Web.Mvc.ActionNameAttribute" Usage="new System.Web.Mvc.ActionNameAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Name of the action.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.ActionNameAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public override bool IsValidName (System.Web.Mvc.ControllerContext controllerContext, string actionName, System.Reflection.MethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidName(class System.Web.Mvc.ControllerContext controllerContext, string actionName, class System.Reflection.MethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidName (controllerContext As ControllerContext, actionName As String, methodInfo As MethodInfo) As Boolean" />
      <MemberSignature Language="F#" Value="override this.IsValidName : System.Web.Mvc.ControllerContext * string * System.Reflection.MethodInfo -&gt; bool" Usage="actionNameAttribute.IsValidName (controllerContext, actionName, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="actionName">The name of the action.</param>
        <param name="methodInfo">Information about the action method.</param>
        <summary>Determines whether the action name is valid within the specified controller context.</summary>
        <returns>true if the action name is valid within the specified controller context; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ActionNameAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Mvc.ActionNameAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the action.</summary>
        <value>The name of the action.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
