<Type Name="TagBuilder" FullName="System.Web.Mvc.TagBuilder">
  <TypeSignature Language="C#" Value="public class TagBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TagBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.TagBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class TagBuilder" />
  <TypeSignature Language="F#" Value="type TagBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.WebPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Web.Mvc" FromVersion="5.2.9.0" To="System.Web.WebPages" ToVersion="3.0.0.0" FrameworkAlternate="aspnet-mvc-5.2" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains classes and properties that are used to create HTML elements. This class is used to write helpers, such as those found in the <see cref="N:System.Web.Helpers" /> namespace.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagBuilder (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagName As String)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.TagBuilder : string -&gt; System.Web.Mvc.TagBuilder" Usage="new System.Web.Mvc.TagBuilder tagName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">The tag name without the "&lt;", "/", or "&gt;" delimiters.</param>
        <summary>Creates a new tag that has the specified tag name.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagName" /> is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCssClass">
      <MemberSignature Language="C#" Value="public void AddCssClass (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCssClass(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.AddCssClass(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCssClass (value As String)" />
      <MemberSignature Language="F#" Value="member this.AddCssClass : string -&gt; unit" Usage="tagBuilder.AddCssClass value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The CSS class to add.</param>
        <summary>Adds a CSS class to the list of CSS classes in the tag.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.TagBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Web.Mvc.TagBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of attributes.</summary>
        <value>The collection of attributes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSanitizedId">
      <MemberSignature Language="C#" Value="public static string CreateSanitizedId (string originalId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateSanitizedId(string originalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSanitizedId (originalId As String) As String" />
      <MemberSignature Language="F#" Value="static member CreateSanitizedId : string -&gt; string" Usage="System.Web.Mvc.TagBuilder.CreateSanitizedId originalId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalId">The ID that might contain characters to replace.</param>
        <summary>Replaces each invalid character in the tag ID with a valid HTML character.</summary>
        <returns>The sanitized tag ID, or null if <paramref name="originalId" /> is null or empty, or if <paramref name="originalId" /> does not begin with a letter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSanitizedId">
      <MemberSignature Language="C#" Value="public static string CreateSanitizedId (string originalId, string invalidCharReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateSanitizedId(string originalId, string invalidCharReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSanitizedId (originalId As String, invalidCharReplacement As String) As String" />
      <MemberSignature Language="F#" Value="static member CreateSanitizedId : string * string -&gt; string" Usage="System.Web.Mvc.TagBuilder.CreateSanitizedId (originalId, invalidCharReplacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalId" Type="System.String" />
        <Parameter Name="invalidCharReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalId">The ID that might contain characters to replace.</param>
        <param name="invalidCharReplacement">The replacement string.</param>
        <summary>Replaces each invalid character in the tag ID with the specified replacement string.</summary>
        <returns>The sanitized tag ID, or null if <paramref name="originalId" /> is null or empty, or if <paramref name="originalId" /> does not begin with a letter.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="invalidCharReplacement" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateId">
      <MemberSignature Language="C#" Value="public void GenerateId (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateId(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.GenerateId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateId (name As String)" />
      <MemberSignature Language="F#" Value="member this.GenerateId : string -&gt; unit" Usage="tagBuilder.GenerateId name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name to use to generate an ID attribute.</param>
        <summary>Generates a sanitized ID attribute for the tag by using the specified name.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdAttributeDotReplacement">
      <MemberSignature Language="C#" Value="public string IdAttributeDotReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdAttributeDotReplacement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.TagBuilder.IdAttributeDotReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property IdAttributeDotReplacement As String" />
      <MemberSignature Language="F#" Value="member this.IdAttributeDotReplacement : string with get, set" Usage="System.Web.Mvc.TagBuilder.IdAttributeDotReplacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string that can be used to replace invalid HTML characters.</summary>
        <value>The string to use to replace invalid HTML characters.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.TagBuilder.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerHtml As String" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.Mvc.TagBuilder.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the inner HTML value for the element.</summary>
        <value>The inner HTML value for the element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttribute">
      <MemberSignature Language="C#" Value="public void MergeAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttribute (key As String, value As String)" />
      <MemberSignature Language="F#" Value="member this.MergeAttribute : string * string -&gt; unit" Usage="tagBuilder.MergeAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key for the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>Adds a new attribute to the tag.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttribute">
      <MemberSignature Language="C#" Value="public void MergeAttribute (string key, string value, bool replaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttribute(string key, string value, bool replaceExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttribute (key As String, value As String, replaceExisting As Boolean)" />
      <MemberSignature Language="F#" Value="member this.MergeAttribute : string * string * bool -&gt; unit" Usage="tagBuilder.MergeAttribute (key, value, replaceExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="replaceExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">The key for the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <param name="replaceExisting">true to replace an existing attribute if an attribute exists that has the specified <paramref name="key" /> value, or false to leave the original attribute unchanged.</param>
        <summary>Adds a new attribute or optionally replaces an existing attribute in the opening tag.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttributes&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public void MergeAttributes&lt;TKey,TValue&gt; (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttributes&lt;TKey, TValue&gt;(class System.Collections.Generic.IDictionary`2&lt;!!TKey, !!TValue&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttributes(Of TKey, TValue) (attributes As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="F#" Value="member this.MergeAttributes : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; -&gt; unit" Usage="tagBuilder.MergeAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the key object.</typeparam>
        <typeparam name="TValue">The type of the value object.</typeparam>
        <param name="attributes">The collection of attributes to add.</param>
        <summary>Adds new attributes to the tag.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttributes&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public void MergeAttributes&lt;TKey,TValue&gt; (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; attributes, bool replaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttributes&lt;TKey, TValue&gt;(class System.Collections.Generic.IDictionary`2&lt;!!TKey, !!TValue&gt; attributes, bool replaceExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttributes(Of TKey, TValue) (attributes As IDictionary(Of TKey, TValue), replaceExisting As Boolean)" />
      <MemberSignature Language="F#" Value="member this.MergeAttributes : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; * bool -&gt; unit" Usage="tagBuilder.MergeAttributes (attributes, replaceExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="replaceExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the key object.</typeparam>
        <typeparam name="TValue">The type of the value object.</typeparam>
        <param name="attributes">The collection of attributes to add or replace.</param>
        <param name="replaceExisting">For each attribute in <paramref name="attributes" />, true to replace the attribute if an attribute already exists that has the same key, or false to leave the original attribute unchanged.</param>
        <summary>Adds new attributes or optionally replaces existing attributes in the tag.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInnerText">
      <MemberSignature Language="C#" Value="public void SetInnerText (string innerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInnerText(string innerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.SetInnerText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInnerText (innerText As String)" />
      <MemberSignature Language="F#" Value="member this.SetInnerText : string -&gt; unit" Usage="tagBuilder.SetInnerText innerText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="innerText">The string to HTML-encode.</param>
        <summary>Sets the <see cref="P:System.Web.Mvc.TagBuilder.InnerHtml" /> property of the element to an HTML-encoded version of the specified string.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.TagBuilder.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.Mvc.TagBuilder.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the tag name for this tag.</summary>
        <value>The name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tagBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the element as a <see cref="F:System.Web.Mvc.TagRenderMode.Normal" /> element.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Web.Mvc.TagRenderMode renderMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(valuetype System.Web.Mvc.TagRenderMode renderMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.TagBuilder.ToString(System.Web.Mvc.TagRenderMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (renderMode As TagRenderMode) As String" />
      <MemberSignature Language="F#" Value="override this.ToString : System.Web.Mvc.TagRenderMode -&gt; string" Usage="tagBuilder.ToString renderMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.WebPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderMode" Type="System.Web.Mvc.TagRenderMode" />
      </Parameters>
      <Docs>
        <param name="renderMode">The render mode.</param>
        <summary>Renders the HTML tag by using the specified render mode.</summary>
        <returns>The rendered HTML tag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
