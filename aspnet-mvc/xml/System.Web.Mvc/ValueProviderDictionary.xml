<Type Name="ValueProviderDictionary" FullName="System.Web.Mvc.ValueProviderDictionary">
  <TypeSignature Language="C#" Value="public class ValueProviderDictionary : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,System.Web.Mvc.ValueProviderResult&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt;&gt;, System.Web.Mvc.IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValueProviderDictionary extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt;&gt;, class System.Collections.IEnumerable, class System.Web.Mvc.IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.ValueProviderDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Class ValueProviderDictionary&#xA;Implements ICollection(Of KeyValuePair(Of String, ValueProviderResult)), IDictionary(Of String, ValueProviderResult), IEnumerable(Of KeyValuePair(Of String, ValueProviderResult)), IValueProvider" />
  <TypeSignature Language="F#" Value="type ValueProviderDictionary = class&#xA;    interface IDictionary&lt;string, ValueProviderResult&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;string, ValueProviderResult&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;string, ValueProviderResult&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IValueProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Mvc.IValueProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("The recommended alternative is to use one of the specific ValueProvider types, such as FormValueProvider.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The recommended alternative is to use one of the specific ValueProvider types, such as FormValueProvider.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Note: This API is now obsolete.Represents a dictionary of value providers for the application.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueProviderDictionary (System.Web.Mvc.ControllerContext controllerContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Mvc.ControllerContext controllerContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (controllerContext As ControllerContext)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.ValueProviderDictionary : System.Web.Mvc.ControllerContext -&gt; System.Web.Mvc.ValueProviderDictionary" Usage="new System.Web.Mvc.ValueProviderDictionary controllerContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.ValueProviderDictionary" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, ValueProviderResult))" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt; -&gt; unit" Usage="valueProviderDictionary.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
        <summary>Adds the specified item to the collection of value providers.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="valueProviderDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key of the element to add.</param>
        <param name="value">The value of the element to add.</param>
        <summary>Adds an element that has the specified key and value to the collection of value providers.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> object is read-only.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null.</exception>
        <exception cref="T:System.ArgumentException">An element that has the specified key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" /> object.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, System.Web.Mvc.ValueProviderResult value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, class System.Web.Mvc.ValueProviderResult value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As ValueProviderResult)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Web.Mvc.ValueProviderResult -&gt; unit&#xA;override this.Add : string * System.Web.Mvc.ValueProviderResult -&gt; unit" Usage="valueProviderDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Web.Mvc.ValueProviderResult" />
      </Parameters>
      <Docs>
        <param name="key">The key of the element to add.</param>
        <param name="value">The value of the element to add.</param>
        <summary>Adds an element that has the specified key and value to the collection of value providers.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> object is read-only.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null.</exception>
        <exception cref="T:System.ArgumentException">An element that has the specified key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" /> object.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="valueProviderDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all items from the collection of value providers.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, ValueProviderResult)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt; -&gt; bool" Usage="valueProviderDictionary.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" /> instance.</param>
        <summary>Determines whether the collection of value providers contains the specified item.</summary>
        <returns>true if <paramref name="item" /> is found in the collection of value providers; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="valueProviderDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the element to find in the <see cref="T:System.Collections.Generic.IDictionary`2" /> instance.</param>
        <summary>Determines whether the collection of value providers contains an element that has the specified key.</summary>
        <returns>true if the collection of value providers contains an element that has the key; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControllerContext">
      <MemberSignature Language="C#" Value="public System.Web.Mvc.ControllerContext ControllerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Mvc.ControllerContext ControllerContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControllerContext As ControllerContext" />
      <MemberSignature Language="F#" Value="member this.ControllerContext : System.Web.Mvc.ControllerContext" Usage="System.Web.Mvc.ValueProviderDictionary.ControllerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ControllerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the controller context.</summary>
        <value>The controller context.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, ValueProviderResult)(), arrayIndex As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt;[] * int -&gt; unit" Usage="valueProviderDictionary.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" /> object. The array must have zero-based indexing.</param>
        <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying starts.</param>
        <summary>Copies the elements of the collection to an array, starting at the specified index.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="arrayIndex" /> is less than 0.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source collection is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type <paramref name="T" /> cannot be cast automatically to the type of the destination array.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ValueProviderDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Mvc.ValueProviderDictionary.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of elements in the collection.</summary>
        <value>The number of elements in the collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, ValueProviderResult))" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt;&gt;" Usage="valueProviderDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can be used to iterate through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.Mvc.ValueProviderDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the collection is read-only.</summary>
        <value>true if the collection is read-only; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Mvc.ValueProviderResult this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Mvc.ValueProviderResult Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ValueProviderResult" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Mvc.ValueProviderResult with get, set" Usage="System.Web.Mvc.ValueProviderDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ValueProviderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>Gets or sets the <see cref="T:System.Web.Mvc.ValueProviderResult" /> object that has the specified key.</summary>
        <value>The <see cref="T:System.Web.Mvc.ValueProviderResult" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ValueProviderDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;string&gt;" Usage="System.Web.Mvc.ValueProviderDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" /> instance.</summary>
        <value>A collection that contains the keys of the object that implements the <see cref="T:System.Collections.Generic.IDictionary`2" /> interface.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,System.Web.Mvc.ValueProviderResult&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Web.Mvc.ValueProviderResult&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, ValueProviderResult)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;string, System.Web.Mvc.ValueProviderResult&gt; -&gt; bool" Usage="valueProviderDictionary.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.Mvc.ValueProviderResult&gt;" />
      </Parameters>
      <Docs>
        <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" /> instance.</param>
        <summary>Removes the first occurrence of the specified item from the collection of value providers.</summary>
        <returns>true if <paramref name="item" /> was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the collection.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="valueProviderDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the element to remove.</param>
        <summary>Removes the element that has the specified key from the collection of value providers.</summary>
        <returns>true if the element was successfully removed; otherwise, false. This method also returns false if <paramref name="key" /> was not found in the collection.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> object is read-only.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="valueProviderDictionary.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can be used to iterate through a collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Mvc.IValueProvider.ContainsPrefix">
      <MemberSignature Language="C#" Value="bool IValueProvider.ContainsPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.Mvc.IValueProvider.ContainsPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function ContainsPrefix (prefix As String) As Boolean Implements IValueProvider.ContainsPrefix" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Mvc.IValueProvider.ContainsPrefix : string -&gt; bool&#xA;override this.System.Web.Mvc.IValueProvider.ContainsPrefix : string -&gt; bool" Usage="valueProviderDictionary.System.Web.Mvc.IValueProvider.ContainsPrefix prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix to search for.</param>
        <summary>Determines whether the collection contains the specified prefix.</summary>
        <returns>true if the collection contains the specified prefix; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Mvc.IValueProvider.GetValue">
      <MemberSignature Language="C#" Value="System.Web.Mvc.ValueProviderResult IValueProvider.GetValue (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.Mvc.ValueProviderResult System.Web.Mvc.IValueProvider.GetValue(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetValue (key As String) As ValueProviderResult Implements IValueProvider.GetValue" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Mvc.IValueProvider.GetValue : string -&gt; System.Web.Mvc.ValueProviderResult&#xA;override this.System.Web.Mvc.IValueProvider.GetValue : string -&gt; System.Web.Mvc.ValueProviderResult" Usage="valueProviderDictionary.System.Web.Mvc.IValueProvider.GetValue key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IValueProvider.GetValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ValueProviderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the value object to return.</param>
        <summary>Returns a value object using the specified key.</summary>
        <returns>The value object for the specified key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out System.Web.Mvc.ValueProviderResult value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] class System.Web.Mvc.ValueProviderResult&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As ValueProviderResult) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string * ValueProviderResult -&gt; bool&#xA;override this.TryGetValue : string * ValueProviderResult -&gt; bool" Usage="valueProviderDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Web.Mvc.ValueProviderResult" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The key of the element to get.</param>
        <param name="value">When this method returns, the value that is associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
        <summary>Gets the value of the element that has the specified key.</summary>
        <returns>true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element that has the specified key; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Web.Mvc.ValueProviderResult&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Web.Mvc.ValueProviderResult&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.ValueProviderDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of ValueProviderResult)" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;System.Web.Mvc.ValueProviderResult&gt;" Usage="System.Web.Mvc.ValueProviderDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Web.Mvc.ValueProviderResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.IDictionary`2" /> object.</summary>
        <value>A collection of the values in the object that implements the <see cref="T:System.Collections.Generic.IDictionary`2" /> interface.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
