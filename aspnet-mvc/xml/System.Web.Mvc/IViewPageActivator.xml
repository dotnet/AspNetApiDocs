<Type Name="IViewPageActivator" FullName="System.Web.Mvc.IViewPageActivator">
  <TypeSignature Language="C#" Value="public interface IViewPageActivator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IViewPageActivator" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.IViewPageActivator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IViewPageActivator" />
  <TypeSignature Language="F#" Value="type IViewPageActivator = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Provides fine-grained control over how view pages are created using dependency injection.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public object Create (System.Web.Mvc.ControllerContext controllerContext, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(class System.Web.Mvc.ControllerContext controllerContext, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (controllerContext As ControllerContext, type As Type) As Object" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Web.Mvc.ControllerContext * Type -&gt; obj" Usage="iViewPageActivator.Create (controllerContext, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The controller context.</param>
        <param name="type">The type of the controller.</param>
        <summary>Provides fine-grained control over how view pages are created using dependency injection.</summary>
        <returns>The created view page.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
