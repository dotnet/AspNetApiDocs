<Type Name="DefaultControllerFactory" FullName="System.Web.Mvc.DefaultControllerFactory">
  <TypeSignature Language="C#" Value="public class DefaultControllerFactory : System.Web.Mvc.IControllerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultControllerFactory extends System.Object implements class System.Web.Mvc.IControllerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.DefaultControllerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultControllerFactory&#xA;Implements IControllerFactory" />
  <TypeSignature Language="F#" Value="type DefaultControllerFactory = class&#xA;    interface IControllerFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Mvc.IControllerFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents the controller factory that is registered by default.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultControllerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultControllerFactory (System.Web.Mvc.IControllerActivator controllerActivator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Mvc.IControllerActivator controllerActivator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (controllerActivator As IControllerActivator)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.DefaultControllerFactory : System.Web.Mvc.IControllerActivator -&gt; System.Web.Mvc.DefaultControllerFactory" Usage="new System.Web.Mvc.DefaultControllerFactory controllerActivator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="controllerActivator" Type="System.Web.Mvc.IControllerActivator" />
      </Parameters>
      <Docs>
        <param name="controllerActivator">An object that implements the controller activator interface.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> class using a controller activator.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateController">
      <MemberSignature Language="C#" Value="public virtual System.Web.Mvc.IController CreateController (System.Web.Routing.RequestContext requestContext, string controllerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Mvc.IController CreateController(class System.Web.Routing.RequestContext requestContext, string controllerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateController (requestContext As RequestContext, controllerName As String) As IController" />
      <MemberSignature Language="F#" Value="abstract member CreateController : System.Web.Routing.RequestContext * string -&gt; System.Web.Mvc.IController&#xA;override this.CreateController : System.Web.Routing.RequestContext * string -&gt; System.Web.Mvc.IController" Usage="defaultControllerFactory.CreateController (requestContext, controllerName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.IController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="controllerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestContext">The context of the HTTP request, which includes the HTTP context and route data.</param>
        <param name="controllerName">The name of the controller.</param>
        <summary>Creates the specified controller by using the specified request context.</summary>
        <returns>The controller.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="requestContext" /> parameter is null.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="controllerName" /> parameter is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetControllerInstance">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.Mvc.IController GetControllerInstance (System.Web.Routing.RequestContext requestContext, Type controllerType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.Mvc.IController GetControllerInstance(class System.Web.Routing.RequestContext requestContext, class System.Type controllerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetControllerInstance (requestContext As RequestContext, controllerType As Type) As IController" />
      <MemberSignature Language="F#" Value="abstract member GetControllerInstance : System.Web.Routing.RequestContext * Type -&gt; System.Web.Mvc.IController&#xA;override this.GetControllerInstance : System.Web.Routing.RequestContext * Type -&gt; System.Web.Mvc.IController" Usage="defaultControllerFactory.GetControllerInstance (requestContext, controllerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.IController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="controllerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestContext">The context of the HTTP request, which includes the HTTP context and route data.</param>
        <param name="controllerType">The type of the controller.</param>
        <summary>Retrieves the controller instance for the specified request context and controller type.</summary>
        <returns>The controller instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="controllerType" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="controllerType" /> cannot be assigned.</exception>
        <exception cref="T:System.InvalidOperationException">An instance of <paramref name="controllerType" /> cannot be created.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetControllerSessionBehavior">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.SessionState.SessionStateBehavior GetControllerSessionBehavior (System.Web.Routing.RequestContext requestContext, Type controllerType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Web.SessionState.SessionStateBehavior GetControllerSessionBehavior(class System.Web.Routing.RequestContext requestContext, class System.Type controllerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetControllerSessionBehavior (requestContext As RequestContext, controllerType As Type) As SessionStateBehavior" />
      <MemberSignature Language="F#" Value="abstract member GetControllerSessionBehavior : System.Web.Routing.RequestContext * Type -&gt; System.Web.SessionState.SessionStateBehavior&#xA;override this.GetControllerSessionBehavior : System.Web.Routing.RequestContext * Type -&gt; System.Web.SessionState.SessionStateBehavior" Usage="defaultControllerFactory.GetControllerSessionBehavior (requestContext, controllerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateBehavior</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="controllerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestContext">The request context.</param>
        <param name="controllerType">The type of the controller.</param>
        <summary>Returns the controller's session behavior.</summary>
        <returns>The controller's session behavior.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControllerType">
      <MemberSignature Language="C#" Value="protected internal virtual Type GetControllerType (System.Web.Routing.RequestContext requestContext, string controllerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Type GetControllerType(class System.Web.Routing.RequestContext requestContext, string controllerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetControllerType (requestContext As RequestContext, controllerName As String) As Type" />
      <MemberSignature Language="F#" Value="abstract member GetControllerType : System.Web.Routing.RequestContext * string -&gt; Type&#xA;override this.GetControllerType : System.Web.Routing.RequestContext * string -&gt; Type" Usage="defaultControllerFactory.GetControllerType (requestContext, controllerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="controllerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestContext">The context of the HTTP request, which includes the HTTP context and route data.</param>
        <param name="controllerName">The name of the controller.</param>
        <summary>Retrieves the controller type for the specified name and request context.</summary>
        <returns>The controller type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseController">
      <MemberSignature Language="C#" Value="public virtual void ReleaseController (System.Web.Mvc.IController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseController(class System.Web.Mvc.IController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseController (controller As IController)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseController : System.Web.Mvc.IController -&gt; unit&#xA;override this.ReleaseController : System.Web.Mvc.IController -&gt; unit" Usage="defaultControllerFactory.ReleaseController controller" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="System.Web.Mvc.IController" />
      </Parameters>
      <Docs>
        <param name="controller">The controller to release.</param>
        <summary>Releases the specified controller.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior">
      <MemberSignature Language="C#" Value="System.Web.SessionState.SessionStateBehavior IControllerFactory.GetControllerSessionBehavior (System.Web.Routing.RequestContext requestContext, string controllerName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Web.SessionState.SessionStateBehavior System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(class System.Web.Routing.RequestContext requestContext, string controllerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetControllerSessionBehavior (requestContext As RequestContext, controllerName As String) As SessionStateBehavior Implements IControllerFactory.GetControllerSessionBehavior" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior : System.Web.Routing.RequestContext * string -&gt; System.Web.SessionState.SessionStateBehavior&#xA;override this.System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior : System.Web.Routing.RequestContext * string -&gt; System.Web.SessionState.SessionStateBehavior" Usage="defaultControllerFactory.System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior (requestContext, controllerName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateBehavior</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="controllerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestContext">The request context.</param>
        <param name="controllerName">The controller name.</param>
        <summary>This API supports the ASP.NET MVC infrastructure and is not intended to be used directly from your code. This method calls the <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" /> method.</summary>
        <returns>The controller's session behavior.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
