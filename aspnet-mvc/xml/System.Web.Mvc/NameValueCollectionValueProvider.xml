<Type Name="NameValueCollectionValueProvider" FullName="System.Web.Mvc.NameValueCollectionValueProvider">
  <TypeSignature Language="C#" Value="public class NameValueCollectionValueProvider : System.Web.Mvc.IEnumerableValueProvider, System.Web.Mvc.IUnvalidatedValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameValueCollectionValueProvider extends System.Object implements class System.Web.Mvc.IEnumerableValueProvider, class System.Web.Mvc.IUnvalidatedValueProvider, class System.Web.Mvc.IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.NameValueCollectionValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class NameValueCollectionValueProvider&#xA;Implements IEnumerableValueProvider, IUnvalidatedValueProvider" />
  <TypeSignature Language="F#" Value="type NameValueCollectionValueProvider = class&#xA;    interface IValueProvider&#xA;    interface IUnvalidatedValueProvider&#xA;    interface IEnumerableValueProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Mvc.IEnumerableValueProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Mvc.IUnvalidatedValueProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Mvc.IValueProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents the base class for value providers whose values come from a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollectionValueProvider (System.Collections.Specialized.NameValueCollection collection, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection collection, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As NameValueCollection, culture As CultureInfo)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.NameValueCollectionValueProvider : System.Collections.Specialized.NameValueCollection * System.Globalization.CultureInfo -&gt; System.Web.Mvc.NameValueCollectionValueProvider" Usage="new System.Web.Mvc.NameValueCollectionValueProvider (collection, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="collection">A collection that contains the values that are used to initialize the provider.</param>
        <param name="culture">An object that contains information about the target culture.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="collection" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollectionValueProvider (System.Collections.Specialized.NameValueCollection collection, System.Collections.Specialized.NameValueCollection unvalidatedCollection, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection collection, class System.Collections.Specialized.NameValueCollection unvalidatedCollection, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As NameValueCollection, unvalidatedCollection As NameValueCollection, culture As CultureInfo)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.NameValueCollectionValueProvider : System.Collections.Specialized.NameValueCollection * System.Collections.Specialized.NameValueCollection * System.Globalization.CultureInfo -&gt; System.Web.Mvc.NameValueCollectionValueProvider" Usage="new System.Web.Mvc.NameValueCollectionValueProvider (collection, unvalidatedCollection, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="unvalidatedCollection" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="collection">A collection that contains the values that are used to initialize the provider.</param>
        <param name="unvalidatedCollection">A collection that contains the values that are used to initialize the provider. This collection will not be validated.</param>
        <param name="culture">An object that contains information about the target culture.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> class using the specified unvalidated collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollectionValueProvider (System.Collections.Specialized.NameValueCollection collection, System.Collections.Specialized.NameValueCollection unvalidatedCollection, System.Globalization.CultureInfo culture, bool jQueryToMvcRequestNormalizationRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection collection, class System.Collections.Specialized.NameValueCollection unvalidatedCollection, class System.Globalization.CultureInfo culture, bool jQueryToMvcRequestNormalizationRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As NameValueCollection, unvalidatedCollection As NameValueCollection, culture As CultureInfo, jQueryToMvcRequestNormalizationRequired As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Web.Mvc.NameValueCollectionValueProvider : System.Collections.Specialized.NameValueCollection * System.Collections.Specialized.NameValueCollection * System.Globalization.CultureInfo * bool -&gt; System.Web.Mvc.NameValueCollectionValueProvider" Usage="new System.Web.Mvc.NameValueCollectionValueProvider (collection, unvalidatedCollection, culture, jQueryToMvcRequestNormalizationRequired)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="unvalidatedCollection" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="jQueryToMvcRequestNormalizationRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection">Key value collection from request.</param>
        <param name="unvalidatedCollection">Unvalidated key value collection from the request.</param>
        <param name="culture">Culture with which the values are to be used.</param>
        <param name="jQueryToMvcRequestNormalizationRequired">jQuery POST when sending complex Javascript objects to server does not encode in the way understandable by MVC. This flag should be set if the request should be normalized to MVC form - https://aspnetwebstack.codeplex.com/workitem/1564.</param>
        <summary>Initializes Name Value collection provider.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool ContainsPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsPrefix (prefix As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ContainsPrefix : string -&gt; bool&#xA;override this.ContainsPrefix : string -&gt; bool" Usage="nameValueCollectionValueProvider.ContainsPrefix prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix to search for.</param>
        <summary>Determines whether the collection contains the specified prefix.</summary>
        <returns>true if the collection contains the specified prefix; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="prefix" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeysFromPrefix">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetKeysFromPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetKeysFromPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeysFromPrefix (prefix As String) As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="abstract member GetKeysFromPrefix : string -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.GetKeysFromPrefix : string -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="nameValueCollectionValueProvider.GetKeysFromPrefix prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix.</param>
        <summary>Gets the keys using the specified prefix.</summary>
        <returns>They keys.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual System.Web.Mvc.ValueProviderResult GetValue (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Mvc.ValueProviderResult GetValue(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (key As String) As ValueProviderResult" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string -&gt; System.Web.Mvc.ValueProviderResult&#xA;override this.GetValue : string -&gt; System.Web.Mvc.ValueProviderResult" Usage="nameValueCollectionValueProvider.GetValue key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IValueProvider.GetValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ValueProviderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the value object to retrieve.</param>
        <summary>Returns a value object using the specified key.</summary>
        <returns>The value object for the specified key.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual System.Web.Mvc.ValueProviderResult GetValue (string key, bool skipValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Mvc.ValueProviderResult GetValue(string key, bool skipValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (key As String, skipValidation As Boolean) As ValueProviderResult" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string * bool -&gt; System.Web.Mvc.ValueProviderResult&#xA;override this.GetValue : string * bool -&gt; System.Web.Mvc.ValueProviderResult" Usage="nameValueCollectionValueProvider.GetValue (key, skipValidation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ValueProviderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="skipValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <param name="skipValidation">true if validation should be skipped; otherwise, false.</param>
        <summary>Returns a value object using the specified key and validation directive.</summary>
        <returns>The value object for the specified key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
