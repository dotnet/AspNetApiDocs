<Type Name="DefaultModelBinder" FullName="System.Web.Mvc.DefaultModelBinder">
  <TypeSignature Language="C#" Value="public class DefaultModelBinder : System.Web.Mvc.IModelBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultModelBinder extends System.Object implements class System.Web.Mvc.IModelBinder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.DefaultModelBinder" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultModelBinder&#xA;Implements IModelBinder" />
  <TypeSignature Language="F#" Value="type DefaultModelBinder = class&#xA;    interface IModelBinder" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Mvc.IModelBinder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Maps a browser request to a data object. This class provides a concrete implementation of a model binder.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultModelBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.DefaultModelBinder" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binders">
      <MemberSignature Language="C#" Value="protected internal System.Web.Mvc.ModelBinderDictionary Binders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Mvc.ModelBinderDictionary Binders" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.DefaultModelBinder.Binders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property Binders As ModelBinderDictionary" />
      <MemberSignature Language="F#" Value="member this.Binders : System.Web.Mvc.ModelBinderDictionary with get, set" Usage="System.Web.Mvc.DefaultModelBinder.Binders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.ModelBinderDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the model binders for the application.</summary>
        <value>The model binders for the application.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindModel">
      <MemberSignature Language="C#" Value="public virtual object BindModel (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BindModel(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindModel (controllerContext As ControllerContext, bindingContext As ModelBindingContext) As Object" />
      <MemberSignature Language="F#" Value="abstract member BindModel : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; obj&#xA;override this.BindModel : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; obj" Usage="defaultModelBinder.BindModel (controllerContext, bindingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Binds the model by using the specified controller context and binding context.</summary>
        <returns>The bound object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="bindingContext " />parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindProperty">
      <MemberSignature Language="C#" Value="protected virtual void BindProperty (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext, System.ComponentModel.PropertyDescriptor propertyDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BindProperty(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext, class System.ComponentModel.PropertyDescriptor propertyDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BindProperty (controllerContext As ControllerContext, bindingContext As ModelBindingContext, propertyDescriptor As PropertyDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member BindProperty : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor -&gt; unit&#xA;override this.BindProperty : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="defaultModelBinder.BindProperty (controllerContext, bindingContext, propertyDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <param name="propertyDescriptor">Describes a property to be bound. The descriptor provides information such as the component type, property type, and property value. It also provides methods to get or set the property value.</param>
        <summary>Binds the specified property by using the specified controller context and binding context and the specified property descriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModel">
      <MemberSignature Language="C#" Value="protected virtual object CreateModel (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext, Type modelType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateModel(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext, class System.Type modelType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateModel (controllerContext As ControllerContext, bindingContext As ModelBindingContext, modelType As Type) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateModel : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * Type -&gt; obj&#xA;override this.CreateModel : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * Type -&gt; obj" Usage="defaultModelBinder.CreateModel (controllerContext, bindingContext, modelType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
        <Parameter Name="modelType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <param name="modelType">The type of the model object to return.</param>
        <summary>Creates the specified model type by using the specified controller context and binding context.</summary>
        <returns>A data object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubIndexName">
      <MemberSignature Language="C#" Value="protected static string CreateSubIndexName (string prefix, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateSubIndexName(string prefix, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateSubIndexName (prefix As String, index As Integer) As String" />
      <MemberSignature Language="F#" Value="static member CreateSubIndexName : string * int -&gt; string" Usage="System.Web.Mvc.DefaultModelBinder.CreateSubIndexName (prefix, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix for the subindex.</param>
        <param name="index">The index value.</param>
        <summary>Creates an index (a subindex) based on a category of components that make up a larger index, where the specified index value is an integer.</summary>
        <returns>The name of the subindex.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubIndexName">
      <MemberSignature Language="C#" Value="protected static string CreateSubIndexName (string prefix, string index);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateSubIndexName(string prefix, string index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateSubIndexName (prefix As String, index As String) As String" />
      <MemberSignature Language="F#" Value="static member CreateSubIndexName : string * string -&gt; string" Usage="System.Web.Mvc.DefaultModelBinder.CreateSubIndexName (prefix, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="index" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix for the subindex.</param>
        <param name="index">The index value.</param>
        <summary>Creates an index (a subindex) based on a category of components that make up a larger index, where the specified index value is a string.</summary>
        <returns>The name of the subindex.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubPropertyName">
      <MemberSignature Language="C#" Value="protected internal static string CreateSubPropertyName (string prefix, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string CreateSubPropertyName(string prefix, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function CreateSubPropertyName (prefix As String, propertyName As String) As String" />
      <MemberSignature Language="F#" Value="static member CreateSubPropertyName : string * string -&gt; string" Usage="System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName (prefix, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix for the subproperty.</param>
        <param name="propertyName">The name of the property.</param>
        <summary>Creates the name of the subproperty by using the specified prefix and property name.</summary>
        <returns>The name of the subproperty.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredModelProperties">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IEnumerable&lt;System.ComponentModel.PropertyDescriptor&gt; GetFilteredModelProperties (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.PropertyDescriptor&gt; GetFilteredModelProperties(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetFilteredModelProperties (controllerContext As ControllerContext, bindingContext As ModelBindingContext) As IEnumerable(Of PropertyDescriptor)" />
      <MemberSignature Language="F#" Value="member this.GetFilteredModelProperties : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; seq&lt;System.ComponentModel.PropertyDescriptor&gt;" Usage="defaultModelBinder.GetFilteredModelProperties (controllerContext, bindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.PropertyDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Returns a set of properties that match the property filter restrictions that are established by the specified <paramref name="binding context" />.</summary>
        <returns>An enumerable set of property descriptors.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetModelProperties (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetModelProperties(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetModelProperties (controllerContext As ControllerContext, bindingContext As ModelBindingContext) As PropertyDescriptorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetModelProperties : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetModelProperties : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="defaultModelBinder.GetModelProperties (controllerContext, bindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Returns the properties of the model by using the specified controller context and binding context.</summary>
        <returns>A collection of property descriptors.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected virtual object GetPropertyValue (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext, System.ComponentModel.PropertyDescriptor propertyDescriptor, System.Web.Mvc.IModelBinder propertyBinder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetPropertyValue(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext, class System.ComponentModel.PropertyDescriptor propertyDescriptor, class System.Web.Mvc.IModelBinder propertyBinder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPropertyValue (controllerContext As ControllerContext, bindingContext As ModelBindingContext, propertyDescriptor As PropertyDescriptor, propertyBinder As IModelBinder) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * System.Web.Mvc.IModelBinder -&gt; obj&#xA;override this.GetPropertyValue : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * System.Web.Mvc.IModelBinder -&gt; obj" Usage="defaultModelBinder.GetPropertyValue (controllerContext, bindingContext, propertyDescriptor, propertyBinder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="propertyBinder" Type="System.Web.Mvc.IModelBinder" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <param name="propertyDescriptor">The descriptor for the property to access. The descriptor provides information such as the component type, property type, and property value. It also provides methods to get or set the property value.</param>
        <param name="propertyBinder">An object that provides a way to bind the property.</param>
        <summary>Returns the value of a property using the specified controller context, binding context, property descriptor, and property binder.</summary>
        <returns>An object that represents the property value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTypeDescriptor (controllerContext As ControllerContext, bindingContext As ModelBindingContext) As ICustomTypeDescriptor" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="defaultModelBinder.GetTypeDescriptor (controllerContext, bindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Returns the descriptor object for a type that is specified by its controller context and binding context.</summary>
        <returns>A custom type descriptor object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModelValid">
      <MemberSignature Language="C#" Value="protected static bool IsModelValid (System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsModelValid(class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsModelValid (bindingContext As ModelBindingContext) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsModelValid : System.Web.Mvc.ModelBindingContext -&gt; bool" Usage="System.Web.Mvc.DefaultModelBinder.IsModelValid bindingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Determines whether a data model is valid for the specified binding context.</summary>
        <returns>true if the model is valid; otherwise, false.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="bindingContext" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnModelUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnModelUpdated (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModelUpdated(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModelUpdated (controllerContext As ControllerContext, bindingContext As ModelBindingContext)" />
      <MemberSignature Language="F#" Value="abstract member OnModelUpdated : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; unit&#xA;override this.OnModelUpdated : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; unit" Usage="defaultModelBinder.OnModelUpdated (controllerContext, bindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Called when the model is updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelUpdating">
      <MemberSignature Language="C#" Value="protected virtual bool OnModelUpdating (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnModelUpdating(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnModelUpdating (controllerContext As ControllerContext, bindingContext As ModelBindingContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnModelUpdating : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; bool&#xA;override this.OnModelUpdating : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext -&gt; bool" Usage="defaultModelBinder.OnModelUpdating (controllerContext, bindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <summary>Called when the model is updating.</summary>
        <returns>true if the model is updating; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyValidated (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext, System.ComponentModel.PropertyDescriptor propertyDescriptor, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyValidated(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext, class System.ComponentModel.PropertyDescriptor propertyDescriptor, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyValidated (controllerContext As ControllerContext, bindingContext As ModelBindingContext, propertyDescriptor As PropertyDescriptor, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyValidated : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * obj -&gt; unit&#xA;override this.OnPropertyValidated : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * obj -&gt; unit" Usage="defaultModelBinder.OnPropertyValidated (controllerContext, bindingContext, propertyDescriptor, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <param name="propertyDescriptor">Describes a property to be validated. The descriptor provides information such as the component type, property type, and property value. It also provides methods to get or set the property value.</param>
        <param name="value">The value to set for the property.</param>
        <summary>Called when the specified property is validated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyValidating">
      <MemberSignature Language="C#" Value="protected virtual bool OnPropertyValidating (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext, System.ComponentModel.PropertyDescriptor propertyDescriptor, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPropertyValidating(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext, class System.ComponentModel.PropertyDescriptor propertyDescriptor, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnPropertyValidating (controllerContext As ControllerContext, bindingContext As ModelBindingContext, propertyDescriptor As PropertyDescriptor, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyValidating : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * obj -&gt; bool&#xA;override this.OnPropertyValidating : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * obj -&gt; bool" Usage="defaultModelBinder.OnPropertyValidating (controllerContext, bindingContext, propertyDescriptor, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <param name="propertyDescriptor">Describes a property being validated. The descriptor provides information such as component type, property type, and property value. It also provides methods to get or set the property value.</param>
        <param name="value">The value to set for the property.</param>
        <summary>Called when the specified property is validating.</summary>
        <returns>true if the property is validating; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceClassKey">
      <MemberSignature Language="C#" Value="public static string ResourceClassKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ResourceClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ResourceClassKey As String" />
      <MemberSignature Language="F#" Value="static member ResourceClassKey : string with get, set" Usage="System.Web.Mvc.DefaultModelBinder.ResourceClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the resource file (class key) that contains localized string values.</summary>
        <value>The name of the resource file (class key).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="protected virtual void SetProperty (System.Web.Mvc.ControllerContext controllerContext, System.Web.Mvc.ModelBindingContext bindingContext, System.ComponentModel.PropertyDescriptor propertyDescriptor, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetProperty(class System.Web.Mvc.ControllerContext controllerContext, class System.Web.Mvc.ModelBindingContext bindingContext, class System.ComponentModel.PropertyDescriptor propertyDescriptor, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetProperty (controllerContext As ControllerContext, bindingContext As ModelBindingContext, propertyDescriptor As PropertyDescriptor, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * obj -&gt; unit&#xA;override this.SetProperty : System.Web.Mvc.ControllerContext * System.Web.Mvc.ModelBindingContext * System.ComponentModel.PropertyDescriptor * obj -&gt; unit" Usage="defaultModelBinder.SetProperty (controllerContext, bindingContext, propertyDescriptor, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Mvc.ControllerContext" />
        <Parameter Name="bindingContext" Type="System.Web.Mvc.ModelBindingContext" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="controllerContext">The context within which the controller operates. The context information includes the controller, HTTP content, request context, and route data.</param>
        <param name="bindingContext">The context within which the model is bound. The context includes information such as the model object, model name, model type, property filter, and value provider.</param>
        <param name="propertyDescriptor">Describes a property to be set. The descriptor provides information such as the component type, property type, and property value. It also provides methods to get or set the property value.</param>
        <param name="value">The value to set for the property.</param>
        <summary>Sets the specified property by using the specified controller context, binding context, and property value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
