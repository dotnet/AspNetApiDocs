<Type Name="InputExtensions" FullName="System.Web.Mvc.Html.InputExtensions">
  <TypeSignature Language="C#" Value="public static class InputExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit InputExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mvc.Html.InputExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module InputExtensions" />
  <TypeSignature Language="F#" Value="type InputExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mvc</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents support for HTML input controls in an application.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBox (htmlHelper As HtmlHelper, name As String) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <summary>Returns a check box input element by using the specified HTML helper and the name of the form field.</summary>
        <returns>An input element whose type attribute is set to "checkbox".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBox (htmlHelper As HtmlHelper, name As String, isChecked As Boolean) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * bool -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <param name="isChecked">true to select the check box; otherwise, false. The value of the check box is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a checked attribute in the html attributes.</param>
        <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, and a value to indicate whether the check box is selected.</summary>
        <returns>An input element whose type attribute is set to "checkbox".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBox (htmlHelper As HtmlHelper, name As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "checkbox".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBox (htmlHelper As HtmlHelper, name As String, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "checkbox".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBox (htmlHelper As HtmlHelper, name As String, isChecked As Boolean, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <param name="isChecked">true to select the check box; otherwise, false. The value of the check box is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a checked attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, a value to indicate whether the check box is selected, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "checkbox".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBox (htmlHelper As HtmlHelper, name As String, isChecked As Boolean, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * bool * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <param name="isChecked">true to select the check box; otherwise, false. The value of the check box is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a checked attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, a value that indicates whether the check box is selected, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "checkbox".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxFor&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,bool&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, bool&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBoxFor(Of TModel) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean))) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, bool&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBoxFor (htmlHelper, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <summary>Returns a check box input element for each property in the object that is represented by the specified expression.</summary>
        <returns>An HTML input element whose type attribute is set to "checkbox" for each property in the object that is represented by the specified expression.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="expression" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxFor&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,bool&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, bool&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBoxFor(Of TModel) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, bool&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBoxFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Boolean&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
        <summary>Returns a check box input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "checkbox" for each property in the object that is represented by the specified expression, using the specified HTML attributes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="expression" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxFor&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,bool&gt;&gt; expression, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, bool&gt;&gt; expression, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBoxFor(Of TModel) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean)), htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member CheckBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, bool&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBoxFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Boolean&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a check box input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "checkbox" for each property in the object that is represented by the specified expression, using the specified HTML attributes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="expression" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hidden (htmlHelper As HtmlHelper, name As String) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <summary>Returns a hidden input element by using the specified HTML helper and the name of the form field.</summary>
        <returns>An input element whose type attribute is set to "hidden".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hidden (htmlHelper As HtmlHelper, name As String, value As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the hidden input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <summary>Returns a hidden input element by using the specified HTML helper, the name of the form field, and the value.</summary>
        <returns>An input element whose type attribute is set to "hidden".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hidden (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the hidden input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a hidden input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "hidden".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hidden (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the hidden input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a hidden input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "hidden".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HiddenFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HiddenFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member HiddenFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.HiddenFor (htmlHelper, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <summary>Returns an HTML hidden input element for each property in the object that is represented by the specified expression.</summary>
        <returns>An input element whose type attribute is set to "hidden" for each property in the object that is represented by the expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HiddenFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HiddenFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member HiddenFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.HiddenFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns an HTML hidden input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "hidden" for each property in the object that is represented by the expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HiddenFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HiddenFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member HiddenFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.HiddenFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns an HTML hidden input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "hidden" for each property in the object that is represented by the expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Password (htmlHelper As HtmlHelper, name As String) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <summary>Returns a password input element by using the specified HTML helper and the name of the form field.</summary>
        <returns>An input element whose type attribute is set to "password".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Password (htmlHelper As HtmlHelper, name As String, value As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the password input element. If a value for this parameter is not provided, the value attribute in the html attributes is used to retrieve the value.</param>
        <summary>Returns a password input element by using the specified HTML helper, the name of the form field, and the value.</summary>
        <returns>An input element whose type attribute is set to "password".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Password (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the password input element. If a value for this parameter is not provided, the value attribute in the html attributes is used to retrieve the value.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a password input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "password".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Password (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the password input element. If a value for this parameter is not provided, the value attribute in the html attributes is used to retrieve the value.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a password input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "password".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PasswordFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member PasswordFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.PasswordFor (htmlHelper, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <summary>Returns a password input element for each property in the object that is represented by the specified expression.</summary>
        <returns>An HTML input element whose type attribute is set to "password" for each property in the object that is represented by the specified expression.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="expression" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PasswordFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member PasswordFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.PasswordFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
        <summary>Returns a password input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "password" for each property in the object that is represented by the specified expression, using the specified HTML attributes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="expression" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PasswordFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member PasswordFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.PasswordFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a password input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "password" for each property in the object that is represented by the specified expression, using the specified HTML attributes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="expression" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButton (htmlHelper As HtmlHelper, name As String, value As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        <returns>An input element whose type attribute is set to "radio".</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButton (htmlHelper As HtmlHelper, name As String, value As Object, isChecked As Boolean) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * bool -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="isChecked">true to select the radio button; otherwise, false.</param>
        <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        <returns>An input element whose type attribute is set to "radio".</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButton (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        <returns>An input element whose type attribute is set to "radio".</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButton (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        <returns>An input element whose type attribute is set to "radio".</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButton (htmlHelper As HtmlHelper, name As String, value As Object, isChecked As Boolean, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="isChecked">true to select the radio button; otherwise, false.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        <returns>An input element whose type attribute is set to "radio".</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButton (htmlHelper As HtmlHelper, name As String, value As Object, isChecked As Boolean, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * bool * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="isChecked">true to select the radio button; otherwise, false.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        <returns>An input element whose type attribute is set to "radio".</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is null or empty.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButtonFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButtonFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), value As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButtonFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButtonFor (htmlHelper, expression, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <summary>Returns a radio button input element for each property in the object that is represented by the specified expression.</summary>
        <returns>An HTML input element whose type attribute is set to "radio" for each property in the object that is represented by the specified expression.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButtonFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButtonFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), value As Object, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButtonFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButtonFor (htmlHelper, expression, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
        <summary>Returns a radio button input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "radio" for each property in the object that is represented by the specified expression, using the specified HTML attributes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButtonFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButtonFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), value As Object, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member RadioButtonFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButtonFor (htmlHelper, expression, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a radio button input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "radio" for each property in the object that is represented by the specified expression, using the specified HTML attributes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <summary>Returns a text input element by using the specified HTML helper and the name of the form field.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String, value As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <summary>Returns a text input element by using the specified HTML helper, the name of the form field, and the value.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String, value As Object, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String, value As Object, format As String) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field.</param>
        <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="format">A string that is used to format the input.</param>
        <summary>Returns a text input element.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String, value As Object, format As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, format, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="format">A string that is used to format the input.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBox (htmlHelper As HtmlHelper, name As String, value As Object, format As String, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, format, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
        <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
        <param name="format">A string that is used to format the input.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <summary>Returns a text input element for each property in the object that is represented by the specified expression.</summary>
        <returns>An HTML input element whose type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="expression" /> parameter is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="expression" /> parameter is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to render.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        <returns>An HTML input element whose type attribute is set to "text" for each property in the object that is represented by the expression.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="expression" /> parameter is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to display.</param>
        <param name="format">A string that is used to format the input.</param>
        <summary>Returns a text input element.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, format, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to display.</param>
        <param name="format">A string that is used to format the input.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String, htmlAttributes As Object) As MvcHtmlString" />
      <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, format, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Mvc</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model.</typeparam>
        <typeparam name="TProperty">The type of the value.</typeparam>
        <param name="htmlHelper">The HTML helper instance that this method extends.</param>
        <param name="expression">An expression that identifies the object that contains the properties to display.</param>
        <param name="format">A string that is used to format the input.</param>
        <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
        <summary>Returns a text input element.</summary>
        <returns>An input element whose type attribute is set to "text".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
