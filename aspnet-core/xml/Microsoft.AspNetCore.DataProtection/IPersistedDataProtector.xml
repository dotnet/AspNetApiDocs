<Type Name="IPersistedDataProtector" FullName="Microsoft.AspNetCore.DataProtection.IPersistedDataProtector">
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistedDataProtector : Microsoft::AspNetCore::DataProtection::IDataProtector" />
  <TypeSignature Language="C#" Value="public interface IPersistedDataProtector : Microsoft.AspNetCore.DataProtection.IDataProtector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistedDataProtector implements class Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, class Microsoft.AspNetCore.DataProtection.IDataProtector" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.DataProtection.IPersistedDataProtector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistedDataProtector&#xA;Implements IDataProtector" />
  <TypeSignature Language="F#" Value="type IPersistedDataProtector = interface&#xA;    interface IDataProtector&#xA;    interface IDataProtectionProvider" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
  <TypeSignature Language="F#" Value="type IPersistedDataProtector = interface&#xA;    interface IDataProtectionProvider&#xA;    interface IDataProtector" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPersistedDataProtector implements class Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, class Microsoft.AspNetCore.DataProtection.IDataProtector" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.DataProtection.IDataProtectionProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.DataProtection.IDataProtector</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An interface that can provide data protection services for data which has been persisted
            to long-term storage.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DangerousUnprotect">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DangerousUnprotect(cli::array &lt;System::Byte&gt; ^ protectedData, bool ignoreRevocationErrors, [Runtime::InteropServices::Out] bool % requiresMigration, [Runtime::InteropServices::Out] bool % wasRevoked);" />
      <MemberSignature Language="C#" Value="public byte[] DangerousUnprotect (byte[] protectedData, bool ignoreRevocationErrors, out bool requiresMigration, out bool wasRevoked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DangerousUnprotect(unsigned int8[] protectedData, bool ignoreRevocationErrors, [out] bool&amp; requiresMigration, [out] bool&amp; wasRevoked) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.IPersistedDataProtector.DangerousUnprotect(System.Byte[],System.Boolean,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function DangerousUnprotect (protectedData As Byte(), ignoreRevocationErrors As Boolean, ByRef requiresMigration As Boolean, ByRef wasRevoked As Boolean) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member DangerousUnprotect : byte[] * bool * bool * bool -&gt; byte[]" Usage="iPersistedDataProtector.DangerousUnprotect (protectedData, ignoreRevocationErrors, requiresMigration, wasRevoked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" />
        <Parameter Name="ignoreRevocationErrors" Type="System.Boolean" />
        <Parameter Name="requiresMigration" Type="System.Boolean" RefType="out" />
        <Parameter Name="wasRevoked" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="protectedData">The protected data to unprotect.</param>
        <param name="ignoreRevocationErrors">'true' if the payload should be unprotected even
            if the cryptographic key used to protect it has been revoked (due to potential compromise),
            'false' if revocation should fail the unprotect operation.</param>
        <param name="requiresMigration">'true' if the data should be reprotected before being
            persisted back to long-term storage, 'false' otherwise. Migration might be requested
            when the default protection key has changed, for instance.</param>
        <param name="wasRevoked">'true' if the cryptographic key used to protect this payload
            has been revoked, 'false' otherwise. Payloads whose keys have been revoked should be
            treated as suspect unless the application has separate assurance that the payload
            has not been tampered with.</param>
        <summary>
            Cryptographically unprotects a piece of data, optionally ignoring failures due to
            revocation of the cryptographic keys used to protect the payload.
            </summary>
        <returns>The plaintext form of the protected data.</returns>
        <remarks>
            Implementations should throw CryptographicException if the protected data is
            invalid or malformed.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
