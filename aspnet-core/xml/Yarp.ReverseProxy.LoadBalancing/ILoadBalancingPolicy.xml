<Type Name="ILoadBalancingPolicy" FullName="Yarp.ReverseProxy.LoadBalancing.ILoadBalancingPolicy">
  <TypeSignature Language="C#" Value="public interface ILoadBalancingPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILoadBalancingPolicy" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.LoadBalancing.ILoadBalancingPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILoadBalancingPolicy" />
  <TypeSignature Language="F#" Value="type ILoadBalancingPolicy = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ILoadBalancingPolicy" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides a method that applies a load balancing policy
            to select a destination.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.LoadBalancing.ILoadBalancingPolicy.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Yarp.ReverseProxy.LoadBalancing.ILoadBalancingPolicy.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A unique identifier for this load balancing policy. This will be referenced from config.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickDestination">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Model.DestinationState? PickDestination (Microsoft.AspNetCore.Http.HttpContext context, Yarp.ReverseProxy.Model.ClusterState cluster, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt; availableDestinations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Yarp.ReverseProxy.Model.DestinationState PickDestination(class Microsoft.AspNetCore.Http.HttpContext context, class Yarp.ReverseProxy.Model.ClusterState cluster, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt; availableDestinations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.LoadBalancing.ILoadBalancingPolicy.PickDestination(Microsoft.AspNetCore.Http.HttpContext,Yarp.ReverseProxy.Model.ClusterState,System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Model.DestinationState})" />
      <MemberSignature Language="VB.NET" Value="Public Function PickDestination (context As HttpContext, cluster As ClusterState, availableDestinations As IReadOnlyList(Of DestinationState)) As DestinationState" />
      <MemberSignature Language="F#" Value="abstract member PickDestination : Microsoft.AspNetCore.Http.HttpContext * Yarp.ReverseProxy.Model.ClusterState * System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt; -&gt; Yarp.ReverseProxy.Model.DestinationState" Usage="iLoadBalancingPolicy.PickDestination (context, cluster, availableDestinations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Model.DestinationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Model.ClusterState" />
        <Parameter Name="availableDestinations" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="cluster">To be added.</param>
        <param name="availableDestinations">To be added.</param>
        <summary>
            Picks a destination to send traffic to.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
