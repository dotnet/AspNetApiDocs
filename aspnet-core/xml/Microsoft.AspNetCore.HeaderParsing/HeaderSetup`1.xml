<Type Name="HeaderSetup&lt;THeader&gt;" FullName="Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;THeader&gt;">
  <TypeSignature Language="C#" Value="public class HeaderSetup&lt;THeader&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HeaderSetup`1&lt;THeader&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1" />
  <TypeSignature Language="VB.NET" Value="Public Class HeaderSetup(Of THeader)" />
  <TypeSignature Language="F#" Value="type HeaderSetup&lt;'Header&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THeader" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="THeader">The type of the header value.</typeparam>
    <summary>
            Stores all setup information for a header.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HeaderSetup (string headerName, Microsoft.AspNetCore.HeaderParsing.HeaderParser&lt;THeader&gt; instance, bool cacheable = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string headerName, class Microsoft.AspNetCore.HeaderParsing.HeaderParser`1&lt;!THeader&gt; instance, bool cacheable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.#ctor(System.String,Microsoft.AspNetCore.HeaderParsing.HeaderParser{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (headerName As String, instance As HeaderParser(Of THeader), Optional cacheable As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt; : string * Microsoft.AspNetCore.HeaderParsing.HeaderParser&lt;'Header&gt; * bool -&gt; Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt;" Usage="new Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt; (headerName, instance, cacheable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="instance" Type="Microsoft.AspNetCore.HeaderParsing.HeaderParser&lt;THeader&gt;" />
        <Parameter Name="cacheable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="headerName">The name of the header.</param>
        <param name="instance">The parser to parse header values.</param>
        <param name="cacheable">Indicates whether the header's values can be cached.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HeaderSetup (string headerName, Type parserType, bool cacheable = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string headerName, class System.Type parserType, bool cacheable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.#ctor(System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (headerName As String, parserType As Type, Optional cacheable As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt; : string * Type * bool -&gt; Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt;" Usage="new Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt; (headerName, parserType, cacheable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="parserType" Type="System.Type" />
        <Parameter Name="cacheable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="headerName">The name of the header.</param>
        <param name="parserType">The type of the parser to parse header values.</param>
        <param name="cacheable">Indicates whether the header's values can be cached.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cacheable">
      <MemberSignature Language="C#" Value="public bool Cacheable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cacheable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.Cacheable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cacheable As Boolean" />
      <MemberSignature Language="F#" Value="member this.Cacheable : bool" Usage="Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt;.Cacheable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this header's parsed values can and/or should be cached.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderName As String" />
      <MemberSignature Language="F#" Value="member this.HeaderName : string" Usage="Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt;.HeaderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the header.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParserInstance">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.HeaderParsing.HeaderParser&lt;THeader&gt;? ParserInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.HeaderParsing.HeaderParser`1&lt;!THeader&gt; ParserInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.ParserInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParserInstance As HeaderParser(Of THeader)" />
      <MemberSignature Language="F#" Value="member this.ParserInstance : Microsoft.AspNetCore.HeaderParsing.HeaderParser&lt;'Header&gt;" Usage="Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt;.ParserInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.HeaderParsing.HeaderParser&lt;THeader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parser to parse header values.
            </summary>
        <value>To be added.</value>
        <remarks>Not <see langword="null" /> when <see cref="P:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.ParserType" /> is <see langword="null" /> and vice versa.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParserType">
      <MemberSignature Language="C#" Value="public Type? ParserType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParserType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.ParserType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParserType As Type" />
      <MemberSignature Language="F#" Value="member this.ParserType : Type" Usage="Microsoft.AspNetCore.HeaderParsing.HeaderSetup&lt;'Header&gt;.ParserType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the parser to parse header values.
            </summary>
        <value>To be added.</value>
        <remarks>Not <see langword="null" /> when <see cref="P:Microsoft.AspNetCore.HeaderParsing.HeaderSetup`1.ParserInstance" /> is <see langword="null" /> and vice versa.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
