<Type Name="HostHeaderValue" FullName="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue">
  <TypeSignature Language="C#" Value="public readonly struct HostHeaderValue : IEquatable&lt;Microsoft.AspNetCore.HeaderParsing.HostHeaderValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HostHeaderValue extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" />
  <TypeSignature Language="VB.NET" Value="Public Structure HostHeaderValue&#xA;Implements IEquatable(Of HostHeaderValue)" />
  <TypeSignature Language="F#" Value="type HostHeaderValue = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.AspNetCore.HeaderParsing.HostHeaderValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Holds parsed data for the HTTP host header.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostHeaderValue (string host, int? port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, valuetype System.Nullable`1&lt;int32&gt; port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.#ctor(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.HeaderParsing.HostHeaderValue : string * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" Usage="new Microsoft.AspNetCore.HeaderParsing.HostHeaderValue (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="host">The address of the host.</param>
        <param name="port">The optional TCP port number on which the host is listening.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" /> struct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.AspNetCore.HeaderParsing.HostHeaderValue other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.Equals(Microsoft.AspNetCore.HeaderParsing.HostHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As HostHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.AspNetCore.HeaderParsing.HostHeaderValue -&gt; bool" Usage="hostHeaderValue.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" />
      </Parameters>
      <Docs>
        <param name="other">The other host header value.</param>
        <summary>
            Determines whether this host header value and a specified host header value are identical.
            </summary>
        <returns>
          <see langword="true" /> if the two values are identical; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hostHeaderValue.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare.</param>
        <summary>
            Determines whether the specified object is equal to the current host header value.
            </summary>
        <returns>
          <see langword="true" /> if the specified object is identical to the current host header value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hostHeaderValue.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a hash code for this object.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the host address.
            </summary>
        <value>
            The address of the server.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.AspNetCore.HeaderParsing.HostHeaderValue left, Microsoft.AspNetCore.HeaderParsing.HostHeaderValue right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue left, valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.op_Equality(Microsoft.AspNetCore.HeaderParsing.HostHeaderValue,Microsoft.AspNetCore.HeaderParsing.HostHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HostHeaderValue, right As HostHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.AspNetCore.HeaderParsing.HostHeaderValue * Microsoft.AspNetCore.HeaderParsing.HostHeaderValue -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" />
        <Parameter Name="right" Type="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" />
      </Parameters>
      <Docs>
        <param name="left">First value.</param>
        <param name="right">Second value.</param>
        <summary>
            Equality operator.
            </summary>
        <returns>
          <see langword="true" />, if its operands are equal, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.AspNetCore.HeaderParsing.HostHeaderValue left, Microsoft.AspNetCore.HeaderParsing.HostHeaderValue right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue left, valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.op_Inequality(Microsoft.AspNetCore.HeaderParsing.HostHeaderValue,Microsoft.AspNetCore.HeaderParsing.HostHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HostHeaderValue, right As HostHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.AspNetCore.HeaderParsing.HostHeaderValue * Microsoft.AspNetCore.HeaderParsing.HostHeaderValue -&gt; bool" Usage="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" />
        <Parameter Name="right" Type="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" />
      </Parameters>
      <Docs>
        <param name="left">First value.</param>
        <param name="right">Second value.</param>
        <summary>
            Inequality operator.
            </summary>
        <returns>
          <see langword="true" />, if its operands are inequal, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int? Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Port" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Port : Nullable&lt;int&gt;" Usage="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the port value.
            </summary>
        <value>
            The optional TCP port number on which the server is listening.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="hostHeaderValue.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string representation of this object.
            </summary>
        <returns>A string representing this object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out Microsoft.AspNetCore.HeaderParsing.HostHeaderValue result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype Microsoft.AspNetCore.HeaderParsing.HostHeaderValue&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.TryParse(System.String,Microsoft.AspNetCore.HeaderParsing.HostHeaderValue@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As HostHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : string * HostHeaderValue -&gt; bool" Usage="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HeaderParsing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="Microsoft.AspNetCore.HeaderParsing.HostHeaderValue" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to parse.</param>
        <param name="result">The parsed result.</param>
        <summary>
            Parses a host header value.
            </summary>
        <returns>
          <see langword="true" /> if the value was parsed successfully, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
