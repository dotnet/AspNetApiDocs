<Type Name="IProxyStateLookup" FullName="Yarp.ReverseProxy.IProxyStateLookup">
  <TypeSignature Language="C#" Value="public interface IProxyStateLookup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProxyStateLookup" FrameworkAlternate="yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.IProxyStateLookup" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProxyStateLookup" />
  <TypeSignature Language="F#" Value="type IProxyStateLookup = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IProxyStateLookup" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Allows access to the proxy's current set of routes and clusters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetClusters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.ClusterState&gt; GetClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Yarp.ReverseProxy.Model.ClusterState&gt; GetClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.IProxyStateLookup.GetClusters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClusters () As IEnumerable(Of ClusterState)" />
      <MemberSignature Language="F#" Value="abstract member GetClusters : unit -&gt; seq&lt;Yarp.ReverseProxy.Model.ClusterState&gt;" Usage="iProxyStateLookup.GetClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.ClusterState&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Enumerates all current clusters. This is thread safe but the collection may change mid-enumeration if the configuration is reloaded.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.RouteModel&gt; GetRoutes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Yarp.ReverseProxy.Model.RouteModel&gt; GetRoutes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.IProxyStateLookup.GetRoutes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoutes () As IEnumerable(Of RouteModel)" />
      <MemberSignature Language="F#" Value="abstract member GetRoutes : unit -&gt; seq&lt;Yarp.ReverseProxy.Model.RouteModel&gt;" Usage="iProxyStateLookup.GetRoutes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.RouteModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Enumerates all current routes. This is thread safe but the collection may change mid-enumeration if the configuration is reloaded.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCluster">
      <MemberSignature Language="C#" Value="public bool TryGetCluster (string id, out Yarp.ReverseProxy.Model.ClusterState? cluster);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCluster(string id, [out] class Yarp.ReverseProxy.Model.ClusterState&amp; cluster) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.IProxyStateLookup.TryGetCluster(System.String,Yarp.ReverseProxy.Model.ClusterState@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCluster (id As String, ByRef cluster As ClusterState) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetCluster : string * ClusterState -&gt; bool" Usage="iProxyStateLookup.TryGetCluster (id, cluster)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Model.ClusterState" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="cluster">To be added.</param>
        <summary>
            Retrieves a specific cluster by id, if present.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRoute">
      <MemberSignature Language="C#" Value="public bool TryGetRoute (string id, out Yarp.ReverseProxy.Model.RouteModel? route);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetRoute(string id, [out] class Yarp.ReverseProxy.Model.RouteModel&amp; route) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.IProxyStateLookup.TryGetRoute(System.String,Yarp.ReverseProxy.Model.RouteModel@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRoute (id As String, ByRef route As RouteModel) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetRoute : string * RouteModel -&gt; bool" Usage="iProxyStateLookup.TryGetRoute (id, route)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="route" Type="Yarp.ReverseProxy.Model.RouteModel" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="route">To be added.</param>
        <summary>
            Retrieves a specific route by id, if present.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
