<Type Name="ComplexTypeModelBinder" FullName="Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder">
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexTypeModelBinder : Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinder" />
  <TypeSignature Language="C#" Value="public class ComplexTypeModelBinder : Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexTypeModelBinder extends System.Object implements class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexTypeModelBinder&#xA;Implements IModelBinder" />
  <TypeSignature Language="F#" Value="type ComplexTypeModelBinder = class&#xA;    interface IModelBinder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
      <AttributeName Language="C#">[System.Obsolete("This type is obsolete and will be removed in a future version. Use ComplexObjectModelBinder instead.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This type is obsolete and will be removed in a future version. Use ComplexObjectModelBinder instead.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" /> implementation for binding complex types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComplexTypeModelBinder(System::Collections::Generic::IDictionary&lt;Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^, Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinder ^&gt; ^ propertyBinders);" />
      <MemberSignature Language="C#" Value="public ComplexTypeModelBinder (System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; propertyBinders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; propertyBinders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.#ctor(System.Collections.Generic.IDictionary{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyBinders As IDictionary(Of ModelMetadata, IModelBinder))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder : System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; -&gt; Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" Usage="new Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder propertyBinders" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This constructor is obsolete and will be removed in a future version. The recommended alternative is the overload that also takes an ILoggerFactory.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constructor is obsolete and will be removed in a future version. The recommended alternative is the overload that also takes an ILoggerFactory.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyBinders" Type="System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt;" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBinders">
            The <see cref="T:System.Collections.Generic.IDictionary`2" /> of binders to use for binding properties.
            </param>
        <summary>
          <para>This constructor is obsolete and will be removed in a future version. The recommended alternative
            is the overload that also takes an <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</para>
          <para>Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" />.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComplexTypeModelBinder(System::Collections::Generic::IDictionary&lt;Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^, Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinder ^&gt; ^ propertyBinders, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberSignature Language="C#" Value="public ComplexTypeModelBinder (System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; propertyBinders, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; propertyBinders, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.#ctor(System.Collections.Generic.IDictionary{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyBinders As IDictionary(Of ModelMetadata, IModelBinder), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder : System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" Usage="new Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder (propertyBinders, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyBinders" Type="System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt;" Index="0" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="1" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBinders">
            The <see cref="T:System.Collections.Generic.IDictionary`2" /> of binders to use for binding properties.
            </param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" />.
            </summary>
        <remarks>
            The binder will not add an error for an unbound top-level model even if
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired" /> is <see langword="true" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComplexTypeModelBinder(System::Collections::Generic::IDictionary&lt;Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^, Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinder ^&gt; ^ propertyBinders, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory, bool allowValidatingTopLevelNodes);" />
      <MemberSignature Language="C#" Value="public ComplexTypeModelBinder (System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; propertyBinders, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, bool allowValidatingTopLevelNodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; propertyBinders, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, bool allowValidatingTopLevelNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.#ctor(System.Collections.Generic.IDictionary{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder},Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyBinders As IDictionary(Of ModelMetadata, IModelBinder), loggerFactory As ILoggerFactory, allowValidatingTopLevelNodes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder : System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt; * Microsoft.Extensions.Logging.ILoggerFactory * bool -&gt; Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" Usage="new Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder (propertyBinders, loggerFactory, allowValidatingTopLevelNodes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyBinders" Type="System.Collections.Generic.IDictionary&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder&gt;" Index="0" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="1" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="allowValidatingTopLevelNodes" Type="System.Boolean" Index="2" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBinders">
            The <see cref="T:System.Collections.Generic.IDictionary`2" /> of binders to use for binding properties.
            </param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true" /> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired" /> is <see langword="true" /> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> error when the model is not bound.
            </param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder" />.
            </summary>
        <remarks>The <paramref name="allowValidatingTopLevelNodes" /> parameter is currently ignored.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindModelAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ BindModelAsync(Microsoft::AspNetCore::Mvc::ModelBinding::ModelBindingContext ^ bindingContext);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task BindModelAsync (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task BindModelAsync(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindModelAsync (bindingContext As ModelBindingContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member BindModelAsync : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; System.Threading.Tasks.Task&#xA;override this.BindModelAsync : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; System.Threading.Tasks.Task" Usage="complexTypeModelBinder.BindModelAsync bindingContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="bindingContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="BindProperty">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ BindProperty(Microsoft::AspNetCore::Mvc::ModelBinding::ModelBindingContext ^ bindingContext);" />
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task BindProperty (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task BindProperty(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.BindProperty(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BindProperty (bindingContext As ModelBindingContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member BindProperty : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; System.Threading.Tasks.Task&#xA;override this.BindProperty : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; System.Threading.Tasks.Task" Usage="complexTypeModelBinder.BindProperty bindingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" /> for the model property.</param>
        <summary>
            Attempts to bind a property of the model.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> that when completed will set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Result" /> to the
            result of model binding.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBindProperty">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanBindProperty(Microsoft::AspNetCore::Mvc::ModelBinding::ModelBindingContext ^ bindingContext, Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^ propertyMetadata);" />
      <MemberSignature Language="C#" Value="protected virtual bool CanBindProperty (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanBindProperty(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.CanBindProperty(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanBindProperty (bindingContext As ModelBindingContext, propertyMetadata As ModelMetadata) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanBindProperty : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext * Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata -&gt; bool&#xA;override this.CanBindProperty : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext * Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata -&gt; bool" Usage="complexTypeModelBinder.CanBindProperty (bindingContext, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
        <Parameter Name="propertyMetadata" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />
      </Parameters>
      <Docs>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" /> for the container model.</param>
        <param name="propertyMetadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" /> for the model property.</param>
        <summary>
            Gets a value indicating whether or not the model property identified by <paramref name="propertyMetadata" />
            can be bound.
            </summary>
        <returns>
          <c>true</c> if the model property can be bound, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModel">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateModel(Microsoft::AspNetCore::Mvc::ModelBinding::ModelBindingContext ^ bindingContext);" />
      <MemberSignature Language="C#" Value="protected virtual object CreateModel (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateModel(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.CreateModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateModel (bindingContext As ModelBindingContext) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateModel : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; obj&#xA;override this.CreateModel : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; obj" Usage="complexTypeModelBinder.CreateModel bindingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
      </Parameters>
      <Docs>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />.</param>
        <summary>
            Creates suitable <see cref="T:System.Object" /> for given <paramref name="bindingContext" />.
            </summary>
        <returns>An <see cref="T:System.Object" /> compatible with <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetProperty(Microsoft::AspNetCore::Mvc::ModelBinding::ModelBindingContext ^ bindingContext, System::String ^ modelName, Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^ propertyMetadata, Microsoft::AspNetCore::Mvc::ModelBinding::ModelBindingResult result);" />
      <MemberSignature Language="C#" Value="protected virtual void SetProperty (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, string modelName, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata propertyMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetProperty(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, string modelName, class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata propertyMetadata, valuetype Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.SetProperty(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetProperty (bindingContext As ModelBindingContext, modelName As String, propertyMetadata As ModelMetadata, result As ModelBindingResult)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext * string * Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata * Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult -&gt; unit&#xA;override this.SetProperty : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext * string * Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata * Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult -&gt; unit" Usage="complexTypeModelBinder.SetProperty (bindingContext, modelName, propertyMetadata, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
        <Parameter Name="modelName" Type="System.String" />
        <Parameter Name="propertyMetadata" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />
        <Parameter Name="result" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" />
      </Parameters>
      <Docs>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />.</param>
        <param name="modelName">The model name.</param>
        <param name="propertyMetadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" /> for the property to set.</param>
        <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" /> for the property's new value.</param>
        <summary>
            Updates a property in the current <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Model" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
