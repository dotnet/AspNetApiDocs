<Type Name="IHandleEvent" FullName="Microsoft.AspNetCore.Components.IHandleEvent">
  <TypeSignature Language="C++ CLI" Value="public interface class IHandleEvent" />
  <TypeSignature Language="C#" Value="public interface IHandleEvent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHandleEvent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.IHandleEvent" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHandleEvent" />
  <TypeSignature Language="F#" Value="type IHandleEvent = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface implemented by components that receive notification of state changes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleEventAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ HandleEventAsync(Microsoft::AspNetCore::Components::EventCallbackWorkItem item, System::Object ^ arg);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task HandleEventAsync (Microsoft.AspNetCore.Components.EventCallbackWorkItem item, object arg);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task HandleEventAsync(valuetype Microsoft.AspNetCore.Components.EventCallbackWorkItem item, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleEventAsync (item As EventCallbackWorkItem, arg As Object) As Task" />
      <MemberSignature Language="F#" Value="abstract member HandleEventAsync : Microsoft.AspNetCore.Components.EventCallbackWorkItem * obj -&gt; System.Threading.Tasks.Task" Usage="iHandleEvent.HandleEventAsync (item, arg)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task HandleEventAsync (Microsoft.AspNetCore.Components.EventCallbackWorkItem item, object? arg);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.AspNetCore.Components.EventCallbackWorkItem" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The <see cref="T:Microsoft.AspNetCore.Components.EventCallbackWorkItem" /> associated with this event.</param>
        <param name="arg">The argument associated with this event.</param>
        <summary>
            Notifies the a state change has been triggered.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> that completes once the component has processed the state change.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
