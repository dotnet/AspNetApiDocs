<Type Name="LayoutView" FullName="Microsoft.AspNetCore.Components.LayoutView">
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutView : Microsoft::AspNetCore::Components::IComponent" />
  <TypeSignature Language="C#" Value="public class LayoutView : Microsoft.AspNetCore.Components.IComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LayoutView extends System.Object implements class Microsoft.AspNetCore.Components.IComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.LayoutView" />
  <TypeSignature Language="VB.NET" Value="Public Class LayoutView&#xA;Implements IComponent" />
  <TypeSignature Language="F#" Value="type LayoutView = class&#xA;    interface IComponent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Displays the specified content inside the specified layout and any further
            nested layouts.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LayoutView();" />
      <MemberSignature Language="C#" Value="public LayoutView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.LayoutView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Attach(Microsoft::AspNetCore::Components::RenderHandle renderHandle);" />
      <MemberSignature Language="C#" Value="public void Attach (Microsoft.AspNetCore.Components.RenderHandle renderHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(valuetype Microsoft.AspNetCore.Components.RenderHandle renderHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.LayoutView.Attach(Microsoft.AspNetCore.Components.RenderHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (renderHandle As RenderHandle)" />
      <MemberSignature Language="F#" Value="abstract member Attach : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit&#xA;override this.Attach : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit" Usage="layoutView.Attach renderHandle" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderHandle" Type="Microsoft.AspNetCore.Components.RenderHandle" />
      </Parameters>
      <Docs>
        <param name="renderHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ChildContent">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment ^ ChildContent { Microsoft::AspNetCore::Components::RenderFragment ^ get(); void set(Microsoft::AspNetCore::Components::RenderFragment ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment ChildContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment ChildContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.LayoutView.ChildContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildContent As RenderFragment" />
      <MemberSignature Language="F#" Value="member this.ChildContent : Microsoft.AspNetCore.Components.RenderFragment with get, set" Usage="Microsoft.AspNetCore.Components.LayoutView.ChildContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content to display.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Layout { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="C#" Value="public Type Layout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Layout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.LayoutView.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Property Layout As Type" />
      <MemberSignature Language="F#" Value="member this.Layout : Type with get, set" Usage="Microsoft.AspNetCore.Components.LayoutView.Layout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type of the layout in which to display the content.
            The type must implement <see cref="T:Microsoft.AspNetCore.Components.IComponent" /> and accept a parameter named <see cref="P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterView parameters);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterView parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterView parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.LayoutView.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetParametersAsync (parameters As ParameterView) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task&#xA;override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task" Usage="layoutView.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterView" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
