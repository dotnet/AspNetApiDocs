<Type Name="ComponentBase" FullName="Microsoft.AspNetCore.Components.ComponentBase">
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentBase abstract : Microsoft::AspNetCore::Components::IComponent, Microsoft::AspNetCore::Components::IHandleAfterRender, Microsoft::AspNetCore::Components::IHandleEvent" />
  <TypeSignature Language="C#" Value="public abstract class ComponentBase : Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleAfterRender, Microsoft.AspNetCore.Components.IHandleEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentBase extends System.Object implements class Microsoft.AspNetCore.Components.IComponent, class Microsoft.AspNetCore.Components.IHandleAfterRender, class Microsoft.AspNetCore.Components.IHandleEvent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.ComponentBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentBase&#xA;Implements IComponent, IHandleAfterRender, IHandleEvent" />
  <TypeSignature Language="F#" Value="type ComponentBase = class&#xA;    interface IComponent&#xA;    interface IHandleAfterRender&#xA;    interface IHandleEvent" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="F#" Value="type ComponentBase = class&#xA;    interface IComponent&#xA;    interface IHandleEvent&#xA;    interface IHandleAfterRender" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IHandleAfterRender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IHandleEvent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Optional base class for components. Alternatively, components may
            implement <see cref="T:Microsoft.AspNetCore.Components.IComponent" /> directly.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentBase();" />
      <MemberSignature Language="C#" Value="public ComponentBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.ComponentBase" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildRenderTree">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BuildRenderTree(Microsoft::AspNetCore::Components::Rendering::RenderTreeBuilder ^ builder);" />
      <MemberSignature Language="C#" Value="protected virtual void BuildRenderTree (Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BuildRenderTree(class Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BuildRenderTree (builder As RenderTreeBuilder)" />
      <MemberSignature Language="F#" Value="abstract member BuildRenderTree : Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder -&gt; unit&#xA;override this.BuildRenderTree : Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder -&gt; unit" Usage="componentBase.BuildRenderTree builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder" /> that will receive the render output.</param>
        <summary>
            Renders the component to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchExceptionAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task DispatchExceptionAsync (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task DispatchExceptionAsync(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.DispatchExceptionAsync(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DispatchExceptionAsync (exception As Exception) As Task" />
      <MemberSignature Language="F#" Value="member this.DispatchExceptionAsync : Exception -&gt; System.Threading.Tasks.Task" Usage="componentBase.DispatchExceptionAsync exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="exception">The <see cref="T:System.Exception" /> that will be dispatched to the renderer.</param>
        <summary>
             Treats the supplied <paramref name="exception" /> as being thrown by this component. This will cause the
             enclosing ErrorBoundary to transition into a failed state. If there is no enclosing ErrorBoundary,
             it will be regarded as an exception from the enclosing renderer.
            
             This is useful if an exception occurs outside the component lifecycle methods, but you wish to treat it
             the same as an exception from a component lifecycle method.
             </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will be completed when the exception has finished dispatching.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Threading::Tasks::Task ^ InvokeAsync(Action ^ workItem);" />
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task InvokeAsync (Action workItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task InvokeAsync(class System.Action workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeAsync (workItem As Action) As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action -&gt; System.Threading.Tasks.Task" Usage="componentBase.InvokeAsync workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="workItem">The work item to execute.</param>
        <summary>
            Executes the supplied work item on the associated renderer's
            synchronization context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Threading::Tasks::Task ^ InvokeAsync(Func&lt;System::Threading::Tasks::Task ^&gt; ^ workItem);" />
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task InvokeAsync (Func&lt;System.Threading.Tasks.Task&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task InvokeAsync(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeAsync (workItem As Func(Of Task)) As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="componentBase.InvokeAsync workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="workItem">The work item to execute.</param>
        <summary>
            Executes the supplied work item on the associated renderer's
            synchronization context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.IComponent.Attach">
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft::AspNetCore::Components::RenderHandle renderHandle) = Microsoft::AspNetCore::Components::IComponent::Attach;" />
      <MemberSignature Language="C#" Value="void IComponent.Attach (Microsoft.AspNetCore.Components.RenderHandle renderHandle);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Components.IComponent.Attach(valuetype Microsoft.AspNetCore.Components.RenderHandle renderHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (renderHandle As RenderHandle) Implements IComponent.Attach" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.IComponent.Attach : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit&#xA;override this.Microsoft.AspNetCore.Components.IComponent.Attach : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit" Usage="componentBase.Microsoft.AspNetCore.Components.IComponent.Attach renderHandle" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderHandle" Type="Microsoft.AspNetCore.Components.RenderHandle" />
      </Parameters>
      <Docs>
        <param name="renderHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync">
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Task ^ Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() = Microsoft::AspNetCore::Components::IHandleAfterRender::OnAfterRenderAsync;" />
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IHandleAfterRender.OnAfterRenderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync" />
      <MemberSignature Language="VB.NET" Value="Function OnAfterRenderAsync () As Task Implements IHandleAfterRender.OnAfterRenderAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync : unit -&gt; System.Threading.Tasks.Task" Usage="componentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync">
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Task ^ Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft::AspNetCore::Components::EventCallbackWorkItem callback, System::Object ^ arg) = Microsoft::AspNetCore::Components::IHandleEvent::HandleEventAsync;" />
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IHandleEvent.HandleEventAsync (Microsoft.AspNetCore.Components.EventCallbackWorkItem callback, object arg);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(valuetype Microsoft.AspNetCore.Components.EventCallbackWorkItem callback, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.Microsoft#AspNetCore#Components#IHandleEvent#HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function HandleEventAsync (callback As EventCallbackWorkItem, arg As Object) As Task Implements IHandleEvent.HandleEventAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync : Microsoft.AspNetCore.Components.EventCallbackWorkItem * obj -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync : Microsoft.AspNetCore.Components.EventCallbackWorkItem * obj -&gt; System.Threading.Tasks.Task" Usage="componentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync (callback, arg)" />
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IHandleEvent.HandleEventAsync (Microsoft.AspNetCore.Components.EventCallbackWorkItem callback, object? arg);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Microsoft.AspNetCore.Components.EventCallbackWorkItem" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterRender">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterRender(bool firstRender);" />
      <MemberSignature Language="C#" Value="protected virtual void OnAfterRender (bool firstRender);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterRender(bool firstRender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterRender (firstRender As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnAfterRender : bool -&gt; unit&#xA;override this.OnAfterRender : bool -&gt; unit" Usage="componentBase.OnAfterRender firstRender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstRender" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="firstRender">
             Set to <c>true</c> if this is the first time <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" /> has been invoked
             on this component instance; otherwise <c>false</c>.
             </param>
        <summary>
             Method invoked after each time the component has rendered interactively and the UI has finished
             updating (for example, after elements have been added to the browser DOM). Any <see cref="T:Microsoft.AspNetCore.Components.ElementReference" />
             fields will be populated by the time this runs.
            
             This method is not invoked during prerendering or server-side rendering, because those processes
             are not attached to any live browser DOM and are already complete before the DOM is updated.
             </summary>
        <remarks>
             The <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" /> and <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" /> lifecycle methods
             are useful for performing interop, or interacting with values received from <c>@ref</c>.
             Use the <paramref name="firstRender" /> parameter to ensure that initialization work is only performed
             once.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterRenderAsync">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ OnAfterRenderAsync(bool firstRender);" />
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnAfterRenderAsync (bool firstRender);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnAfterRenderAsync(bool firstRender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAfterRenderAsync (firstRender As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnAfterRenderAsync : bool -&gt; System.Threading.Tasks.Task&#xA;override this.OnAfterRenderAsync : bool -&gt; System.Threading.Tasks.Task" Usage="componentBase.OnAfterRenderAsync firstRender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstRender" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="firstRender">
             Set to <c>true</c> if this is the first time <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" /> has been invoked
             on this component instance; otherwise <c>false</c>.
             </param>
        <summary>
             Method invoked after each time the component has been rendered interactively and the UI has finished
             updating (for example, after elements have been added to the browser DOM). Any <see cref="T:Microsoft.AspNetCore.Components.ElementReference" />
             fields will be populated by the time this runs.
            
             This method is not invoked during prerendering or server-side rendering, because those processes
             are not attached to any live browser DOM and are already complete before the DOM is updated.
            
             Note that the component does not automatically re-render after the completion of any returned <see cref="T:System.Threading.Tasks.Task" />,
             because that would cause an infinite render loop.
             </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing any asynchronous operation.</returns>
        <remarks>
             The <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" /> and <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" /> lifecycle methods
             are useful for performing interop, or interacting with values received from <c>@ref</c>.
             Use the <paramref name="firstRender" /> parameter to ensure that initialization work is only performed
             once.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialized();" />
      <MemberSignature Language="C#" Value="protected virtual void OnInitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.OnInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialized ()" />
      <MemberSignature Language="F#" Value="abstract member OnInitialized : unit -&gt; unit&#xA;override this.OnInitialized : unit -&gt; unit" Usage="componentBase.OnInitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method invoked when the component is ready to start, having received its
            initial parameters from its parent in the render tree.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitializedAsync">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ OnInitializedAsync();" />
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInitializedAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInitializedAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInitializedAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInitializedAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OnInitializedAsync : unit -&gt; System.Threading.Tasks.Task" Usage="componentBase.OnInitializedAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Method invoked when the component is ready to start, having received its
             initial parameters from its parent in the render tree.
            
             Override this method if you will perform an asynchronous operation and
             want the component to refresh when that operation is completed.
             </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing any asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParametersSet">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParametersSet();" />
      <MemberSignature Language="C#" Value="protected virtual void OnParametersSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParametersSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParametersSet ()" />
      <MemberSignature Language="F#" Value="abstract member OnParametersSet : unit -&gt; unit&#xA;override this.OnParametersSet : unit -&gt; unit" Usage="componentBase.OnParametersSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method invoked when the component has received parameters from its parent in
            the render tree, and the incoming values have been assigned to properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParametersSetAsync">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ OnParametersSetAsync();" />
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnParametersSetAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnParametersSetAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnParametersSetAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member OnParametersSetAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OnParametersSetAsync : unit -&gt; System.Threading.Tasks.Task" Usage="componentBase.OnParametersSetAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method invoked when the component has received parameters from its parent in
            the render tree, and the incoming values have been assigned to properties.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing any asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterView parameters);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterView parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterView parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetParametersAsync (parameters As ParameterView) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task&#xA;override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task" Usage="componentBase.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterView" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters.</param>
        <summary>
            Sets parameters supplied by the component's parent in the render tree.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when the component has finished updating and rendering itself.</returns>
        <remarks>
          <para>
            Parameters are passed when <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)" /> is called. It is not required that
            the caller supply a parameter value for all of the parameters that are logically understood by the component.
            </para>
          <para>
            The default implementation of <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)" /> will set the value of each property
            decorated with <see cref="T:Microsoft.AspNetCore.Components.ParameterAttribute" /> or <see cref="T:Microsoft.AspNetCore.Components.CascadingParameterAttribute" /> that has
            a corresponding value in the <see cref="T:Microsoft.AspNetCore.Components.ParameterView" />. Parameters that do not have a corresponding value
            will be unchanged.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRender">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldRender();" />
      <MemberSignature Language="C#" Value="protected virtual bool ShouldRender ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.ShouldRender" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldRender () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldRender : unit -&gt; bool&#xA;override this.ShouldRender : unit -&gt; bool" Usage="componentBase.ShouldRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a flag to indicate whether the component should render.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateHasChanged">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void StateHasChanged();" />
      <MemberSignature Language="C#" Value="protected void StateHasChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StateHasChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StateHasChanged ()" />
      <MemberSignature Language="F#" Value="member this.StateHasChanged : unit -&gt; unit" Usage="componentBase.StateHasChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Notifies the component that its state has changed. When applicable, this will
            cause the component to be re-rendered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
