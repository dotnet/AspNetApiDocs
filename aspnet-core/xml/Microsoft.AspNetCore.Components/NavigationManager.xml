<Type Name="NavigationManager" FullName="Microsoft.AspNetCore.Components.NavigationManager">
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationManager abstract" />
  <TypeSignature Language="C#" Value="public abstract class NavigationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NavigationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.NavigationManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NavigationManager" />
  <TypeSignature Language="F#" Value="type NavigationManager = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides an abstraction for querying and managing URI navigation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NavigationManager();" />
      <MemberSignature Language="C#" Value="protected NavigationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseUri {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string BaseUri { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As String" />
      <MemberSignature Language="F#" Value="member this.BaseUri : string with get, set" Usage="Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current base URI. The <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" /> is always represented as an absolute URI in string form with trailing slash.
            Typically this corresponds to the 'href' attribute on the document's &lt;base&gt; element.
            </summary>
        <value>To be added.</value>
        <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" /> will not trigger the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureInitialized">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureInitialized();" />
      <MemberSignature Language="C#" Value="protected virtual void EnsureInitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.EnsureInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureInitialized ()" />
      <MemberSignature Language="F#" Value="abstract member EnsureInitialized : unit -&gt; unit&#xA;override this.EnsureInitialized : unit -&gt; unit" Usage="navigationManager.EnsureInitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Allows derived classes to lazily self-initialize. Implementations that support lazy-initialization should override
            this method and call <see cref="M:Microsoft.AspNetCore.Components.NavigationManager.Initialize(System.String,System.String)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleLocationChangingHandlerException">
      <MemberSignature Language="C#" Value="protected virtual void HandleLocationChangingHandlerException (Exception ex, Microsoft.AspNetCore.Components.Routing.LocationChangingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleLocationChangingHandlerException(class System.Exception ex, class Microsoft.AspNetCore.Components.Routing.LocationChangingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.HandleLocationChangingHandlerException(System.Exception,Microsoft.AspNetCore.Components.Routing.LocationChangingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleLocationChangingHandlerException (ex As Exception, context As LocationChangingContext)" />
      <MemberSignature Language="F#" Value="abstract member HandleLocationChangingHandlerException : Exception * Microsoft.AspNetCore.Components.Routing.LocationChangingContext -&gt; unit&#xA;override this.HandleLocationChangingHandlerException : Exception * Microsoft.AspNetCore.Components.Routing.LocationChangingContext -&gt; unit" Usage="navigationManager.HandleLocationChangingHandlerException (ex, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Components.Routing.LocationChangingContext" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="ex">The exception to handle.</param>
        <param name="context">The context passed to the handler.</param>
        <summary>
            Handles exceptions thrown in location changing handlers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoryEntryState">
      <MemberSignature Language="C#" Value="public string? HistoryEntryState { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HistoryEntryState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.NavigationManager.HistoryEntryState" />
      <MemberSignature Language="VB.NET" Value="Public Property HistoryEntryState As String" />
      <MemberSignature Language="F#" Value="member this.HistoryEntryState : string with get, set" Usage="Microsoft.AspNetCore.Components.NavigationManager.HistoryEntryState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the state associated with the current navigation.
            </summary>
        <value>To be added.</value>
        <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.HistoryEntryState" /> will not trigger the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::String ^ baseUri, System::String ^ uri);" />
      <MemberSignature Language="C#" Value="protected void Initialize (string baseUri, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(string baseUri, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.Initialize(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (baseUri As String, uri As String)" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * string -&gt; unit" Usage="navigationManager.Initialize (baseUri, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">To be added.</param>
        <param name="uri">To be added.</param>
        <summary>
            Called to initialize BaseURI and current URI before these values are used for the first time.
            Override <see cref="M:Microsoft.AspNetCore.Components.NavigationManager.EnsureInitialized" /> and call this method to dynamically calculate these values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::AspNetCore::Components::Routing::LocationChangedEventArgs ^&gt; ^ LocationChanged;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; LocationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler(Of LocationChangedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; " Usage="member this.LocationChanged : System.EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that fires when the navigation location has changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri, Microsoft.AspNetCore.Components.NavigationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateTo(string uri, valuetype Microsoft.AspNetCore.Components.NavigationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateTo(System.String,Microsoft.AspNetCore.Components.NavigationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String, options As NavigationOptions)" />
      <MemberSignature Language="F#" Value="member this.NavigateTo : string * Microsoft.AspNetCore.Components.NavigationOptions -&gt; unit" Usage="navigationManager.NavigateTo (uri, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Components.NavigationOptions" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="options">Provides additional <see cref="T:Microsoft.AspNetCore.Components.NavigationOptions" />.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri, bool forceLoad = false);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateTo(string uri, bool forceLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String, Optional forceLoad As Boolean = false)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="F#" Value="member this.NavigateTo : string * bool -&gt; unit" Usage="navigationManager.NavigateTo (uri, forceLoad)" />
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri, bool forceLoad);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String, forceLoad As Boolean)" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="forceLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri, bool forceLoad = false, bool replace = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateTo(string uri, bool forceLoad, bool replace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateTo(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String, Optional forceLoad As Boolean = false, Optional replace As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.NavigateTo : string * bool * bool -&gt; unit" Usage="navigationManager.NavigateTo (uri, forceLoad, replace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="forceLoad" Type="System.Boolean" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="replace" Type="System.Boolean" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <param name="replace">If true, replaces the current entry in the history stack. If false, appends the new entry to the history stack.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToCore">
      <MemberSignature Language="C#" Value="protected virtual void NavigateToCore (string uri, Microsoft.AspNetCore.Components.NavigationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NavigateToCore(string uri, valuetype Microsoft.AspNetCore.Components.NavigationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateToCore(System.String,Microsoft.AspNetCore.Components.NavigationOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NavigateToCore (uri As String, options As NavigationOptions)" />
      <MemberSignature Language="F#" Value="abstract member NavigateToCore : string * Microsoft.AspNetCore.Components.NavigationOptions -&gt; unit&#xA;override this.NavigateToCore : string * Microsoft.AspNetCore.Components.NavigationOptions -&gt; unit" Usage="navigationManager.NavigateToCore (uri, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Components.NavigationOptions" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="options">Provides additional <see cref="T:Microsoft.AspNetCore.Components.NavigationOptions" />.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToCore">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void NavigateToCore(System::String ^ uri, bool forceLoad);" />
      <MemberSignature Language="C#" Value="protected abstract void NavigateToCore (string uri, bool forceLoad);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NavigateToCore(string uri, bool forceLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateToCore(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub NavigateToCore (uri As String, forceLoad As Boolean)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member NavigateToCore : string * bool -&gt; unit" Usage="navigationManager.NavigateToCore (uri, forceLoad)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="protected virtual void NavigateToCore (string uri, bool forceLoad);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NavigateToCore (uri As String, forceLoad As Boolean)" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="F#" Value="abstract member NavigateToCore : string * bool -&gt; unit&#xA;override this.NavigateToCore : string * bool -&gt; unit" Usage="navigationManager.NavigateToCore (uri, forceLoad)" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="forceLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyLocationChanged">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyLocationChanged(bool isInterceptedLink);" />
      <MemberSignature Language="C#" Value="protected void NotifyLocationChanged (bool isInterceptedLink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyLocationChanged(bool isInterceptedLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NotifyLocationChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyLocationChanged (isInterceptedLink As Boolean)" />
      <MemberSignature Language="F#" Value="member this.NotifyLocationChanged : bool -&gt; unit" Usage="navigationManager.NotifyLocationChanged isInterceptedLink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInterceptedLink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isInterceptedLink">To be added.</param>
        <summary>
            Triggers the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event with the current URI value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyLocationChangingAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.ValueTask&lt;bool&gt; NotifyLocationChangingAsync (string uri, string? state, bool isNavigationIntercepted);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt; NotifyLocationChangingAsync(string uri, string state, bool isNavigationIntercepted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NotifyLocationChangingAsync(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function NotifyLocationChangingAsync (uri As String, state As String, isNavigationIntercepted As Boolean) As ValueTask(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.NotifyLocationChangingAsync : string * string * bool -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;" Usage="navigationManager.NotifyLocationChangingAsync (uri, state, isNavigationIntercepted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="isNavigationIntercepted" Type="System.Boolean" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI.</param>
        <param name="state">The state associated with the target history entry.</param>
        <param name="isNavigationIntercepted">Whether this navigation was intercepted from a link.</param>
        <summary>
            Notifies the registered handlers of the current location change.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1" /> representing the completion of the operation. If the result is <see langword="true" />, the navigation should continue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual void Refresh (bool forceReload = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh(bool forceReload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.Refresh(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Refresh (Optional forceReload As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Refresh : bool -&gt; unit&#xA;override this.Refresh : bool -&gt; unit" Usage="navigationManager.Refresh forceReload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceReload" Type="System.Boolean" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="forceReload">To be added.</param>
        <summary>
            Refreshes the current page via request to the server.
            </summary>
        <remarks>
            If <paramref name="forceReload" /> is <c>true</c>, a full page reload will always be performed.
            Otherwise, the response HTML may be merged with the document's existing HTML to preserve client-side state,
            falling back on a full page reload if necessary.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLocationChangingHandler">
      <MemberSignature Language="C#" Value="public IDisposable RegisterLocationChangingHandler (Func&lt;Microsoft.AspNetCore.Components.Routing.LocationChangingContext,System.Threading.Tasks.ValueTask&gt; locationChangingHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable RegisterLocationChangingHandler(class System.Func`2&lt;class Microsoft.AspNetCore.Components.Routing.LocationChangingContext, valuetype System.Threading.Tasks.ValueTask&gt; locationChangingHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.RegisterLocationChangingHandler(System.Func{Microsoft.AspNetCore.Components.Routing.LocationChangingContext,System.Threading.Tasks.ValueTask})" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterLocationChangingHandler (locationChangingHandler As Func(Of LocationChangingContext, ValueTask)) As IDisposable" />
      <MemberSignature Language="F#" Value="member this.RegisterLocationChangingHandler : Func&lt;Microsoft.AspNetCore.Components.Routing.LocationChangingContext, System.Threading.Tasks.ValueTask&gt; -&gt; IDisposable" Usage="navigationManager.RegisterLocationChangingHandler locationChangingHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationChangingHandler" Type="System.Func&lt;Microsoft.AspNetCore.Components.Routing.LocationChangingContext,System.Threading.Tasks.ValueTask&gt;" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="locationChangingHandler">The handler to process incoming navigation events.</param>
        <summary>
            Registers a handler to process incoming navigation events.
            </summary>
        <returns>An <see cref="T:System.IDisposable" /> that can be disposed to unregister the location changing handler.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationLockState">
      <MemberSignature Language="C#" Value="protected virtual void SetNavigationLockState (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetNavigationLockState(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.SetNavigationLockState(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetNavigationLockState (value As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetNavigationLockState : bool -&gt; unit&#xA;override this.SetNavigationLockState : bool -&gt; unit" Usage="navigationManager.SetNavigationLockState value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="value">Whether navigation is currently locked.</param>
        <summary>
            Sets whether navigation is currently locked. If it is, then implementations should not update <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" /> and call
            <see cref="M:Microsoft.AspNetCore.Components.NavigationManager.NotifyLocationChanged(System.Boolean)" /> until they have first confirmed the navigation by calling
            <see cref="M:Microsoft.AspNetCore.Components.NavigationManager.NotifyLocationChangingAsync(System.String,System.String,System.Boolean)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToAbsoluteUri">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ ToAbsoluteUri(System::String ^ relativeUri);" />
      <MemberSignature Language="C#" Value="public Uri ToAbsoluteUri (string relativeUri);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri ToAbsoluteUri(string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.ToAbsoluteUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToAbsoluteUri (relativeUri As String) As Uri" />
      <MemberSignature Language="F#" Value="member this.ToAbsoluteUri : string -&gt; Uri" Usage="navigationManager.ToAbsoluteUri relativeUri" />
      <MemberSignature Language="C#" Value="public Uri ToAbsoluteUri (string? relativeUri);" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUri" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="relativeUri">The relative URI.</param>
        <summary>
            Converts a relative URI into an absolute one (by resolving it
            relative to the current absolute URI).
            </summary>
        <returns>The absolute URI.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBaseRelativePath">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToBaseRelativePath(System::String ^ uri);" />
      <MemberSignature Language="C#" Value="public string ToBaseRelativePath (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToBaseRelativePath(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.ToBaseRelativePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBaseRelativePath (uri As String) As String" />
      <MemberSignature Language="F#" Value="member this.ToBaseRelativePath : string -&gt; string" Usage="navigationManager.ToBaseRelativePath uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">An absolute URI that is within the space of the base URI.</param>
        <summary>
            Given a base URI (e.g., one previously returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />),
            converts an absolute URI into one relative to the base URI prefix.
            </summary>
        <returns>A relative URI path.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ Uri {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string Uri { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="Microsoft.AspNetCore.Components.NavigationManager.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current URI. The <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" /> is always represented as an absolute URI in string form.
            </summary>
        <value>To be added.</value>
        <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" /> will not trigger the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
