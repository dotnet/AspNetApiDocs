<Type Name="CascadingValueSource&lt;TValue&gt;" FullName="Microsoft.AspNetCore.Components.CascadingValueSource&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public class CascadingValueSource&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CascadingValueSource`1&lt;TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" />
  <TypeSignature Language="VB.NET" Value="Public Class CascadingValueSource(Of TValue)" />
  <TypeSignature Language="F#" Value="type CascadingValueSource&lt;'Value&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TValue">To be added.</typeparam>
    <summary>
            Supplies a cascading value that can be received by components using
            <see cref="T:Microsoft.AspNetCore.Components.CascadingParameterAttribute" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CascadingValueSource (Func&lt;TValue&gt; initialValueFactory, bool isFixed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TValue&gt; initialValueFactory, bool isFixed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.#ctor(System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialValueFactory As Func(Of TValue), isFixed As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; : Func&lt;'Value&gt; * bool -&gt; Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt;" Usage="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; (initialValueFactory, isFixed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialValueFactory" Type="System.Func&lt;TValue&gt;" />
        <Parameter Name="isFixed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialValueFactory">A callback that produces the initial value when first required.</param>
        <param name="isFixed">A flag to indicate whether the value is fixed. If false, all receipients will subscribe for update notifications, which you can issue by calling <see cref="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.NotifyChangedAsync" />. These subscriptions come at a performance cost, so if the value will not change, set <paramref name="isFixed" /> to true.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CascadingValueSource (TValue value, bool isFixed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TValue value, bool isFixed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.#ctor(`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As TValue, isFixed As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; : 'Value * bool -&gt; Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt;" Usage="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; (value, isFixed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="isFixed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The initial value.</param>
        <param name="isFixed">A flag to indicate whether the value is fixed. If false, all receipients will subscribe for update notifications, which you can issue by calling <see cref="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.NotifyChangedAsync" />. These subscriptions come at a performance cost, so if the value will not change, set <paramref name="isFixed" /> to true.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CascadingValueSource (string name, Func&lt;TValue&gt; initialValueFactory, bool isFixed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Func`1&lt;!TValue&gt; initialValueFactory, bool isFixed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.#ctor(System.String,System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, initialValueFactory As Func(Of TValue), isFixed As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; : string * Func&lt;'Value&gt; * bool -&gt; Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt;" Usage="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; (name, initialValueFactory, isFixed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="initialValueFactory" Type="System.Func&lt;TValue&gt;" />
        <Parameter Name="isFixed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">A name for the cascading value. If set, <see cref="T:Microsoft.AspNetCore.Components.CascadingParameterAttribute" /> can be configured to match based on this name.</param>
        <param name="initialValueFactory">A callback that produces the initial value when first required.</param>
        <param name="isFixed">A flag to indicate whether the value is fixed. If false, all receipients will subscribe for update notifications, which you can issue by calling <see cref="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.NotifyChangedAsync" />. These subscriptions come at a performance cost, so if the value will not change, set <paramref name="isFixed" /> to true.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CascadingValueSource (string name, TValue value, bool isFixed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, !TValue value, bool isFixed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.#ctor(System.String,`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As TValue, isFixed As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; : string * 'Value * bool -&gt; Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt;" Usage="new Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt; (name, value, isFixed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="isFixed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">A name for the cascading value. If set, <see cref="T:Microsoft.AspNetCore.Components.CascadingParameterAttribute" /> can be configured to match based on this name.</param>
        <param name="value">The initial value.</param>
        <param name="isFixed">A flag to indicate whether the value is fixed. If false, all receipients will subscribe for update notifications, which you can issue by calling <see cref="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.NotifyChangedAsync" />. These subscriptions come at a performance cost, so if the value will not change, set <paramref name="isFixed" /> to true.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyChangedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task NotifyChangedAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task NotifyChangedAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.NotifyChangedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function NotifyChangedAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.NotifyChangedAsync : unit -&gt; System.Threading.Tasks.Task" Usage="cascadingValueSource.NotifyChangedAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Notifies subscribers that the value has changed (for example, if it has been mutated).
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when the notifications have been issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyChangedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task NotifyChangedAsync (TValue newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task NotifyChangedAsync(!TValue newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.CascadingValueSource`1.NotifyChangedAsync(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function NotifyChangedAsync (newValue As TValue) As Task" />
      <MemberSignature Language="F#" Value="member this.NotifyChangedAsync : 'Value -&gt; System.Threading.Tasks.Task" Usage="cascadingValueSource.NotifyChangedAsync newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="newValue" />
        <summary>
            Notifies subscribers that the value has changed, supplying a new value.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when the notifications have been issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
