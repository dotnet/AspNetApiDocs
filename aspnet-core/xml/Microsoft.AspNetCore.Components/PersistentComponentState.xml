<Type Name="PersistentComponentState" FullName="Microsoft.AspNetCore.Components.PersistentComponentState">
  <TypeSignature Language="C#" Value="public class PersistentComponentState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PersistentComponentState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.PersistentComponentState" />
  <TypeSignature Language="VB.NET" Value="Public Class PersistentComponentState" />
  <TypeSignature Language="F#" Value="type PersistentComponentState = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The state for the components and services of a components application.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PersistAsJson&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public void PersistAsJson&lt;TValue&gt; (string key, TValue instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistAsJson&lt;TValue&gt;(string key, !!TValue instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.PersistentComponentState.PersistAsJson``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistAsJson(Of TValue) (key As String, instance As TValue)" />
      <MemberSignature Language="F#" Value="member this.PersistAsJson : string * 'Value -&gt; unit" Usage="persistentComponentState.PersistAsJson (key, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="instance" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The <paramref name="instance" /> type.</typeparam>
        <param name="key">The key to use to persist the state.</param>
        <param name="instance">The instance to persist.</param>
        <summary>
            Serializes <paramref name="instance" /> as JSON and persists it under the given <paramref name="key" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterOnPersisting">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.PersistingComponentStateSubscription RegisterOnPersisting (Func&lt;System.Threading.Tasks.Task&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.AspNetCore.Components.PersistingComponentStateSubscription RegisterOnPersisting(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.PersistentComponentState.RegisterOnPersisting(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterOnPersisting (callback As Func(Of Task)) As PersistingComponentStateSubscription" />
      <MemberSignature Language="F#" Value="member this.RegisterOnPersisting : Func&lt;System.Threading.Tasks.Task&gt; -&gt; Microsoft.AspNetCore.Components.PersistingComponentStateSubscription" Usage="persistentComponentState.RegisterOnPersisting callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.PersistingComponentStateSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to invoke when the application is being paused.</param>
        <summary>
            Register a callback to persist the component state when the application is about to be paused.
            Registered callbacks can use this opportunity to persist their state so that it can be retrieved when the application resumes.
            </summary>
        <returns>A subscription that can be used to unregister the callback when disposed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterOnPersisting">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.PersistingComponentStateSubscription RegisterOnPersisting (Func&lt;System.Threading.Tasks.Task&gt; callback, Microsoft.AspNetCore.Components.IComponentRenderMode? renderMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.AspNetCore.Components.PersistingComponentStateSubscription RegisterOnPersisting(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; callback, class Microsoft.AspNetCore.Components.IComponentRenderMode renderMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.PersistentComponentState.RegisterOnPersisting(System.Func{System.Threading.Tasks.Task},Microsoft.AspNetCore.Components.IComponentRenderMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterOnPersisting (callback As Func(Of Task), renderMode As IComponentRenderMode) As PersistingComponentStateSubscription" />
      <MemberSignature Language="F#" Value="member this.RegisterOnPersisting : Func&lt;System.Threading.Tasks.Task&gt; * Microsoft.AspNetCore.Components.IComponentRenderMode -&gt; Microsoft.AspNetCore.Components.PersistingComponentStateSubscription" Usage="persistentComponentState.RegisterOnPersisting (callback, renderMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.PersistingComponentStateSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="renderMode" Type="Microsoft.AspNetCore.Components.IComponentRenderMode" Index="1" FrameworkAlternate="aspnetcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">The callback to invoke when the application is being paused.</param>
        <param name="renderMode" />
        <summary>
            Register a callback to persist the component state when the application is about to be paused.
            Registered callbacks can use this opportunity to persist their state so that it can be retrieved when the application resumes.
            </summary>
        <returns>A subscription that can be used to unregister the callback when disposed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromJson&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public bool TryTakeFromJson&lt;TValue&gt; (string key, out TValue? instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTakeFromJson&lt;TValue&gt;(string key, [out] !!TValue&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.PersistentComponentState.TryTakeFromJson``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTakeFromJson(Of TValue) (key As String, ByRef instance As TValue) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryTakeFromJson : string * 'Value -&gt; bool" Usage="persistentComponentState.TryTakeFromJson (key, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="instance" Type="TValue" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="key">The key used to persist the instance.</param>
        <param name="instance">The persisted instance.</param>
        <summary>
            Tries to retrieve the persisted state as JSON with the given <paramref name="key" /> and deserializes it into an
            instance of type <typeparamref name="TValue" />.
            When the key is present, the state is successfully returned via <paramref name="instance" />
            and removed from the <see cref="T:Microsoft.AspNetCore.Components.PersistentComponentState" />.
            </summary>
        <returns>
          <c>true</c> if the state was found; <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
