<Type Name="IPersistentComponentStateStore" FullName="Microsoft.AspNetCore.Components.IPersistentComponentStateStore">
  <TypeSignature Language="C#" Value="public interface IPersistentComponentStateStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistentComponentStateStore" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.IPersistentComponentStateStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistentComponentStateStore" />
  <TypeSignature Language="F#" Value="type IPersistentComponentStateStore = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPersistentComponentStateStore" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Manages the storage for components and services that are part of a Blazor application.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPersistedStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string,byte[]&gt;&gt; GetPersistedStateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt;&gt; GetPersistedStateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.IPersistentComponentStateStore.GetPersistedStateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPersistedStateAsync () As Task(Of IDictionary(Of String, Byte()))" />
      <MemberSignature Language="F#" Value="abstract member GetPersistedStateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string, byte[]&gt;&gt;" Usage="iPersistentComponentStateStore.GetPersistedStateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the persisted state from the store.
            </summary>
        <returns>The persisted state.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PersistStateAsync (System.Collections.Generic.IReadOnlyDictionary&lt;string,byte[]&gt; state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PersistStateAsync(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, unsigned int8[]&gt; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.IPersistentComponentStateStore.PersistStateAsync(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Byte[]})" />
      <MemberSignature Language="VB.NET" Value="Public Function PersistStateAsync (state As IReadOnlyDictionary(Of String, Byte())) As Task" />
      <MemberSignature Language="F#" Value="abstract member PersistStateAsync : System.Collections.Generic.IReadOnlyDictionary&lt;string, byte[]&gt; -&gt; System.Threading.Tasks.Task" Usage="iPersistentComponentStateStore.PersistStateAsync state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Byte[]&gt;" />
      </Parameters>
      <Docs>
        <param name="state">The serialized state to persist.</param>
        <summary>
            Persists the serialized state into the storage.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when the state is persisted to disk.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRenderMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRenderMode (Microsoft.AspNetCore.Components.IComponentRenderMode renderMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsRenderMode(class Microsoft.AspNetCore.Components.IComponentRenderMode renderMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.IPersistentComponentStateStore.SupportsRenderMode(Microsoft.AspNetCore.Components.IComponentRenderMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportsRenderMode (renderMode As IComponentRenderMode) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member SupportsRenderMode : Microsoft.AspNetCore.Components.IComponentRenderMode -&gt; bool&#xA;override this.SupportsRenderMode : Microsoft.AspNetCore.Components.IComponentRenderMode -&gt; bool" Usage="iPersistentComponentStateStore.SupportsRenderMode renderMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderMode" Type="Microsoft.AspNetCore.Components.IComponentRenderMode" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="renderMode">The <see cref="T:Microsoft.AspNetCore.Components.IComponentRenderMode" /> in question.</param>
        <summary>
            Returns a value that indicates whether the store supports the given <see cref="T:Microsoft.AspNetCore.Components.IComponentRenderMode" />.
            </summary>
        <returns>
          <c>true</c> if the render mode is supported by the store, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
