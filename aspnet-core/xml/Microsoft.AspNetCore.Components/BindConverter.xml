<Type Name="BindConverter" FullName="Microsoft.AspNetCore.Components.BindConverter">
  <TypeSignature Language="C++ CLI" Value="public ref class BindConverter abstract sealed" />
  <TypeSignature Language="C#" Value="public static class BindConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.BindConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BindConverter" />
  <TypeSignature Language="F#" Value="type BindConverter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Performs conversions during binding.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static bool FormatValue (bool value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FormatValue(bool value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Boolean, Optional culture As CultureInfo = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="static member FormatValue : bool * System.Globalization.CultureInfo -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static bool FormatValue (bool value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateOnly value, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.DateOnly value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.DateOnly,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As DateOnly, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : DateOnly * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateOnly" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTime value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.DateTime value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.DateTime,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As DateTime, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : DateTime * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTime value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTimeOffset value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.DateTimeOffset value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.DateTimeOffset,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As DateTimeOffset, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : DateTimeOffset * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTimeOffset value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (decimal value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Decimal value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Decimal,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Decimal, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : decimal * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (decimal value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (double value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(float64 value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Double,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Double, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : double * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (double value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (short value, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(int16 value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Int16,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Short, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : int16 * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (int value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(int32 value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Integer, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : int * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (int value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (long value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(int64 value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Int64,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Long, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : int64 * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (long value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static bool? FormatValue (bool? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; FormatValue(valuetype System.Nullable`1&lt;bool&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Boolean},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Boolean), Optional culture As CultureInfo = Nothing) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;bool&gt; * System.Globalization.CultureInfo -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static bool? FormatValue (bool? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string? FormatValue (DateOnly? value, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.DateOnly&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.DateOnly},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of DateOnly), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;DateOnly&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateOnly&gt;" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTime? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.DateTime},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of DateTime), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;DateTime&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (DateTime? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTimeOffset? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.DateTimeOffset},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of DateTimeOffset), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;DateTimeOffset&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (DateTimeOffset? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (decimal? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Decimal},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Decimal), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;decimal&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (decimal? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (double? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;float64&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Double},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Double), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;double&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (double? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string? FormatValue (short? value, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;int16&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Int16},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Short), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;int16&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Int16&gt;" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (int? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;int32&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Int32},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Integer), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;int&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (int? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (long? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;int64&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Int64},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Long), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;int64&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (long? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (float? value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;float32&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.Single},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of Single), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;single&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (float? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string? FormatValue (TimeOnly? value, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.TimeOnly&gt; value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.TimeOnly},System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of TimeOnly), Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;TimeOnly&gt; * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.TimeOnly&gt;" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (float value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(float32 value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Single,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Single, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : single * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (float value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> for inclusion in an attribute.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (string value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(string value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (string? value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (TimeOnly value, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.TimeOnly value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.TimeOnly,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As TimeOnly, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : TimeOnly * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeOnly" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateOnly value, string format, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.DateOnly value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.DateOnly,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As DateOnly, format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : DateOnly * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateOnly" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateOnly.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTime value, string format, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.DateTime value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.DateTime,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As DateTime, format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : DateTime * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTime value, string format, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTimeOffset value, string format, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.DateTimeOffset value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.DateTimeOffset,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As DateTimeOffset, format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : DateTimeOffset * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTimeOffset value, string format, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string? FormatValue (DateOnly? value, string format, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.DateOnly&gt; value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.DateOnly},System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of DateOnly), format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;DateOnly&gt; * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateOnly&gt;" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateOnly.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTime? value, string format, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.DateTime},System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of DateTime), format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;DateTime&gt; * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (DateTime? value, string? format, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (DateTimeOffset? value, string format, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.DateTimeOffset},System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of DateTimeOffset), format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;DateTimeOffset&gt; * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberSignature Language="C#" Value="public static string? FormatValue (DateTimeOffset? value, string format, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string? FormatValue (TimeOnly? value, string format, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.Nullable`1&lt;valuetype System.TimeOnly&gt; value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.Nullable{System.TimeOnly},System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As Nullable(Of TimeOnly), format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : Nullable&lt;TimeOnly&gt; * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.TimeOnly&gt;" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateOnly.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C#" Value="public static string FormatValue (TimeOnly value, string format, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatValue(valuetype System.TimeOnly value, string format, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue(System.TimeOnly,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue (value As TimeOnly, format As String, Optional culture As CultureInfo = Nothing) As String" />
      <MemberSignature Language="F#" Value="static member FormatValue : TimeOnly * string * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, format, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeOnly" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <param name="format">The format to use. Provided to <see cref="M:System.DateOnly.ToString(System.String,System.IFormatProvider)" />.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static object FormatValue&lt;T&gt; (T value, System.Globalization.CultureInfo culture = default);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FormatValue&lt;T&gt;(!!T value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.FormatValue``1(``0,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatValue(Of T) (value As T, Optional culture As CultureInfo = Nothing) As Object" />
      <MemberSignature Language="F#" Value="static member FormatValue : 'T * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.AspNetCore.Components.BindConverter.FormatValue (value, culture)" />
      <MemberSignature Language="C#" Value="public static object? FormatValue&lt;T&gt; (T value, System.Globalization.CultureInfo? culture = default);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">The value to format.</param>
        <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> to use while formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.
            </param>
        <summary>
            Formats the provided <paramref name="value" /> as a <see cref="T:System.String" />.
            </summary>
        <returns>The formatted value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertTo&lt;T&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryConvertTo(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertTo&lt;T&gt; (object obj, System.Globalization.CultureInfo culture, out T value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertTo&lt;T&gt;(object obj, class System.Globalization.CultureInfo culture, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertTo``1(System.Object,System.Globalization.CultureInfo,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertTo(Of T) (obj As Object, culture As CultureInfo, ByRef value As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertTo : obj * System.Globalization.CultureInfo * 'T -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertTo (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertTo&lt;T&gt; (object? obj, System.Globalization.CultureInfo? culture, out T value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="T" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a value of type <typeparamref name="T" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToBool">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToBool(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] bool % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToBool (object obj, System.Globalization.CultureInfo culture, out bool value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToBool(object obj, class System.Globalization.CultureInfo culture, [out] bool&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToBool(System.Object,System.Globalization.CultureInfo,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToBool (obj As Object, culture As CultureInfo, ByRef value As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToBool : obj * System.Globalization.CultureInfo * bool -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToBool (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToBool (object? obj, System.Globalization.CultureInfo? culture, out bool value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Boolean" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDateOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateOnly (object? obj, System.Globalization.CultureInfo? culture, out DateOnly value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDateOnly(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.DateOnly&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateOnly(System.Object,System.Globalization.CultureInfo,System.DateOnly@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDateOnly (obj As Object, culture As CultureInfo, ByRef value As DateOnly) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDateOnly : obj * System.Globalization.CultureInfo * DateOnly -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateOnly (obj, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="value" Type="System.DateOnly" RefType="out" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.DateOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDateOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateOnly (object? obj, System.Globalization.CultureInfo? culture, string format, out DateOnly value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDateOnly(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.DateOnly&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateOnly(System.Object,System.Globalization.CultureInfo,System.String,System.DateOnly@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDateOnly (obj As Object, culture As CultureInfo, format As String, ByRef value As DateOnly) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDateOnly : obj * System.Globalization.CultureInfo * string * DateOnly -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateOnly (obj, culture, format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.DateOnly" RefType="out" Index="3" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.DateOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDateTime">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToDateTime(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] DateTime % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTime (object obj, System.Globalization.CultureInfo culture, out DateTime value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDateTime(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.DateTime&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTime(System.Object,System.Globalization.CultureInfo,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDateTime (obj As Object, culture As CultureInfo, ByRef value As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDateTime : obj * System.Globalization.CultureInfo * DateTime -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTime (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTime (object? obj, System.Globalization.CultureInfo? culture, out DateTime value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.DateTime" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDateTime">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToDateTime(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, System::String ^ format, [Runtime::InteropServices::Out] DateTime % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTime (object obj, System.Globalization.CultureInfo culture, string format, out DateTime value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDateTime(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.DateTime&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTime(System.Object,System.Globalization.CultureInfo,System.String,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDateTime (obj As Object, culture As CultureInfo, format As String, ByRef value As DateTime) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDateTime : obj * System.Globalization.CultureInfo * string * DateTime -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTime (obj, culture, format, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTime (object? obj, System.Globalization.CultureInfo? culture, string format, out DateTime value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.DateTime" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDateTimeOffset">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToDateTimeOffset(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] DateTimeOffset % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTimeOffset (object obj, System.Globalization.CultureInfo culture, out DateTimeOffset value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDateTimeOffset(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.DateTimeOffset&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTimeOffset(System.Object,System.Globalization.CultureInfo,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDateTimeOffset (obj As Object, culture As CultureInfo, ByRef value As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDateTimeOffset : obj * System.Globalization.CultureInfo * DateTimeOffset -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTimeOffset (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTimeOffset (object? obj, System.Globalization.CultureInfo? culture, out DateTimeOffset value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.DateTimeOffset" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDateTimeOffset">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToDateTimeOffset(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, System::String ^ format, [Runtime::InteropServices::Out] DateTimeOffset % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTimeOffset (object obj, System.Globalization.CultureInfo culture, string format, out DateTimeOffset value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDateTimeOffset(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.DateTimeOffset&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTimeOffset(System.Object,System.Globalization.CultureInfo,System.String,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDateTimeOffset (obj As Object, culture As CultureInfo, format As String, ByRef value As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDateTimeOffset : obj * System.Globalization.CultureInfo * string * DateTimeOffset -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDateTimeOffset (obj, culture, format, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDateTimeOffset (object? obj, System.Globalization.CultureInfo? culture, string format, out DateTimeOffset value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.DateTimeOffset" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDecimal">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToDecimal(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] System::Decimal % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDecimal (object obj, System.Globalization.CultureInfo culture, out decimal value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDecimal(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Decimal&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDecimal(System.Object,System.Globalization.CultureInfo,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDecimal (obj As Object, culture As CultureInfo, ByRef value As Decimal) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDecimal : obj * System.Globalization.CultureInfo * decimal -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDecimal (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDecimal (object? obj, System.Globalization.CultureInfo? culture, out decimal value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Decimal" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToDouble">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToDouble(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] double % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDouble (object obj, System.Globalization.CultureInfo culture, out double value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToDouble(object obj, class System.Globalization.CultureInfo culture, [out] float64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToDouble(System.Object,System.Globalization.CultureInfo,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToDouble (obj As Object, culture As CultureInfo, ByRef value As Double) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToDouble : obj * System.Globalization.CultureInfo * double -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToDouble (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToDouble (object? obj, System.Globalization.CultureInfo? culture, out double value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Double" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToFloat">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToFloat(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] float % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToFloat (object obj, System.Globalization.CultureInfo culture, out float value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToFloat(object obj, class System.Globalization.CultureInfo culture, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToFloat(System.Object,System.Globalization.CultureInfo,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToFloat (obj As Object, culture As CultureInfo, ByRef value As Single) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToFloat : obj * System.Globalization.CultureInfo * single -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToFloat (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToFloat (object? obj, System.Globalization.CultureInfo? culture, out float value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Single" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToInt">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToInt(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToInt (object obj, System.Globalization.CultureInfo culture, out int value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToInt(object obj, class System.Globalization.CultureInfo culture, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToInt(System.Object,System.Globalization.CultureInfo,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToInt (obj As Object, culture As CultureInfo, ByRef value As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToInt : obj * System.Globalization.CultureInfo * int -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToInt (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToInt (object? obj, System.Globalization.CultureInfo? culture, out int value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Int32" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToLong">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToLong(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToLong (object obj, System.Globalization.CultureInfo culture, out long value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToLong(object obj, class System.Globalization.CultureInfo culture, [out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToLong(System.Object,System.Globalization.CultureInfo,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToLong (obj As Object, culture As CultureInfo, ByRef value As Long) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToLong : obj * System.Globalization.CultureInfo * int64 -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToLong (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToLong (object? obj, System.Globalization.CultureInfo? culture, out long value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Int64" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableBool">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableBool(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;bool&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableBool (object obj, System.Globalization.CultureInfo culture, out bool? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableBool(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;bool&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableBool(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Boolean}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableBool (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Boolean)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableBool : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableBool (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableBool (object? obj, System.Globalization.CultureInfo? culture, out bool? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Boolean" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDateOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateOnly (object? obj, System.Globalization.CultureInfo? culture, out DateOnly? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDateOnly(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;valuetype System.DateOnly&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateOnly(System.Object,System.Globalization.CultureInfo,System.Nullable{System.DateOnly}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDateOnly (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of DateOnly)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDateOnly : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateOnly (obj, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="value" Type="System.Nullable&lt;System.DateOnly&gt;" RefType="out" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.DateOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDateOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateOnly (object? obj, System.Globalization.CultureInfo? culture, string format, out DateOnly? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDateOnly(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.Nullable`1&lt;valuetype System.DateOnly&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateOnly(System.Object,System.Globalization.CultureInfo,System.String,System.Nullable{System.DateOnly}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDateOnly (obj As Object, culture As CultureInfo, format As String, ByRef value As Nullable(Of DateOnly)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDateOnly : obj * System.Globalization.CultureInfo * string * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateOnly (obj, culture, format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateOnlyFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateOnly&gt;" RefType="out" Index="3" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.DateOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDateTime">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableDateTime(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;DateTime&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTime (object obj, System.Globalization.CultureInfo culture, out DateTime? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDateTime(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;valuetype System.DateTime&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTime(System.Object,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDateTime (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of DateTime)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDateTime : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTime (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTime (object? obj, System.Globalization.CultureInfo? culture, out DateTime? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTime&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.DateTime" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDateTime">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableDateTime(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, System::String ^ format, [Runtime::InteropServices::Out] Nullable&lt;DateTime&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTime (object obj, System.Globalization.CultureInfo culture, string format, out DateTime? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDateTime(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.Nullable`1&lt;valuetype System.DateTime&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTime(System.Object,System.Globalization.CultureInfo,System.String,System.Nullable{System.DateTime}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDateTime (obj As Object, culture As CultureInfo, format As String, ByRef value As Nullable(Of DateTime)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDateTime : obj * System.Globalization.CultureInfo * string * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTime (obj, culture, format, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTime (object? obj, System.Globalization.CultureInfo? culture, string format, out DateTime? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("DateTimeFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTime&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.DateTime" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDateTimeOffset">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableDateTimeOffset(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;DateTimeOffset&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTimeOffset (object obj, System.Globalization.CultureInfo culture, out DateTimeOffset? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDateTimeOffset(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTimeOffset(System.Object,System.Globalization.CultureInfo,System.Nullable{System.DateTimeOffset}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDateTimeOffset (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of DateTimeOffset)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDateTimeOffset : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTimeOffset (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTimeOffset (object? obj, System.Globalization.CultureInfo? culture, out DateTimeOffset? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTimeOffset&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.DateTimeOffset" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDateTimeOffset">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableDateTimeOffset(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, System::String ^ format, [Runtime::InteropServices::Out] Nullable&lt;DateTimeOffset&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTimeOffset (object obj, System.Globalization.CultureInfo culture, string format, out DateTimeOffset? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDateTimeOffset(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTimeOffset(System.Object,System.Globalization.CultureInfo,System.String,System.Nullable{System.DateTimeOffset}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDateTimeOffset (obj As Object, culture As CultureInfo, format As String, ByRef value As Nullable(Of DateTimeOffset)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDateTimeOffset : obj * System.Globalization.CultureInfo * string * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDateTimeOffset (obj, culture, format, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDateTimeOffset (object? obj, System.Globalization.CultureInfo? culture, string format, out DateTimeOffset? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Nullable&lt;System.DateTimeOffset&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.DateTimeOffset" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDecimal">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableDecimal(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;System::Decimal&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDecimal (object obj, System.Globalization.CultureInfo culture, out decimal? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDecimal(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDecimal(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Decimal}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDecimal (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Decimal)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDecimal : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDecimal (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDecimal (object? obj, System.Globalization.CultureInfo? culture, out decimal? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Decimal&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Decimal" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableDouble">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableDouble(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;double&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDouble (object obj, System.Globalization.CultureInfo culture, out double? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableDouble(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;float64&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDouble(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Double}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableDouble (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Double)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableDouble : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableDouble (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableDouble (object? obj, System.Globalization.CultureInfo? culture, out double? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Double&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Double" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableFloat">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableFloat(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;float&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableFloat (object obj, System.Globalization.CultureInfo culture, out float? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableFloat(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;float32&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableFloat(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableFloat (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Single)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableFloat : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableFloat (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableFloat (object? obj, System.Globalization.CultureInfo? culture, out float? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Single" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableInt">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableInt(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;int&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableInt (object obj, System.Globalization.CultureInfo culture, out int? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableInt(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;int32&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableInt(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Int32}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableInt (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Integer)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableInt : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableInt (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableInt (object? obj, System.Globalization.CultureInfo? culture, out int? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Int32&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Int32" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableLong">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableLong(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;long&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableLong (object obj, System.Globalization.CultureInfo culture, out long? value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableLong(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;int64&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableLong(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Int64}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableLong (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Long)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableLong : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableLong (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableLong (object? obj, System.Globalization.CultureInfo? culture, out long? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Int64&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Int64" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableShort">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToNullableShort(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] Nullable&lt;short&gt; % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableShort (object? obj, System.Globalization.CultureInfo? culture, out short? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableShort(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;int16&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableShort(System.Object,System.Globalization.CultureInfo,System.Nullable{System.Int16}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableShort (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of Short)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableShort : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableShort (obj, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Int16&gt;" RefType="out" Index="2" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.Int16" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableTimeOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableTimeOnly (object? obj, System.Globalization.CultureInfo? culture, out TimeOnly? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableTimeOnly(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.Nullable`1&lt;valuetype System.TimeOnly&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableTimeOnly(System.Object,System.Globalization.CultureInfo,System.Nullable{System.TimeOnly}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableTimeOnly (obj As Object, culture As CultureInfo, ByRef value As Nullable(Of TimeOnly)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableTimeOnly : obj * System.Globalization.CultureInfo * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableTimeOnly (obj, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="value" Type="System.Nullable&lt;System.TimeOnly&gt;" RefType="out" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.TimeOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToNullableTimeOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToNullableTimeOnly (object? obj, System.Globalization.CultureInfo? culture, string format, out TimeOnly? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToNullableTimeOnly(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.Nullable`1&lt;valuetype System.TimeOnly&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableTimeOnly(System.Object,System.Globalization.CultureInfo,System.String,System.Nullable{System.TimeOnly}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToNullableTimeOnly (obj As Object, culture As CultureInfo, format As String, ByRef value As Nullable(Of TimeOnly)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToNullableTimeOnly : obj * System.Globalization.CultureInfo * string * Nullable -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToNullableTimeOnly (obj, culture, format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Nullable&lt;System.TimeOnly&gt;" RefType="out" Index="3" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a nullable <see cref="T:System.TimeOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToShort">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToShort(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToShort (object? obj, System.Globalization.CultureInfo? culture, out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToShort(object obj, class System.Globalization.CultureInfo culture, [out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToShort(System.Object,System.Globalization.CultureInfo,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToShort (obj As Object, culture As CultureInfo, ByRef value As Short) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToShort : obj * System.Globalization.CultureInfo * int16 -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToShort (obj, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="value" Type="System.Int16" RefType="out" Index="2" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.Int16" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToString">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryConvertToString(System::Object ^ obj, System::Globalization::CultureInfo ^ culture, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToString (object obj, System.Globalization.CultureInfo culture, out string value);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToString(object obj, class System.Globalization.CultureInfo culture, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToString(System.Object,System.Globalization.CultureInfo,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToString (obj As Object, culture As CultureInfo, ByRef value As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToString : obj * System.Globalization.CultureInfo * string -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToString (obj, culture, value)" />
      <MemberSignature Language="C#" Value="public static bool TryConvertToString (object? obj, System.Globalization.CultureInfo? culture, out string? value);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.String" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToTimeOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToTimeOnly (object? obj, System.Globalization.CultureInfo? culture, out TimeOnly value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToTimeOnly(object obj, class System.Globalization.CultureInfo culture, [out] valuetype System.TimeOnly&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToTimeOnly(System.Object,System.Globalization.CultureInfo,System.TimeOnly@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToTimeOnly (obj As Object, culture As CultureInfo, ByRef value As TimeOnly) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToTimeOnly : obj * System.Globalization.CultureInfo * TimeOnly -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToTimeOnly (obj, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="value" Type="System.TimeOnly" RefType="out" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.TimeOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryConvertToTimeOnly">
      <MemberSignature Language="C#" Value="public static bool TryConvertToTimeOnly (object? obj, System.Globalization.CultureInfo? culture, string format, out TimeOnly value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryConvertToTimeOnly(object obj, class System.Globalization.CultureInfo culture, string format, [out] valuetype System.TimeOnly&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindConverter.TryConvertToTimeOnly(System.Object,System.Globalization.CultureInfo,System.String,System.TimeOnly@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryConvertToTimeOnly (obj As Object, culture As CultureInfo, format As String, ByRef value As TimeOnly) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryConvertToTimeOnly : obj * System.Globalization.CultureInfo * string * TimeOnly -&gt; bool" Usage="Microsoft.AspNetCore.Components.BindConverter.TryConvertToTimeOnly (obj, culture, format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="format" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("TimeOnlyFormat")&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.TimeOnly" RefType="out" Index="3" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for conversion.</param>
        <param name="format">The format string to use in conversion.</param>
        <param name="value">The converted value.</param>
        <summary>
            Attempts to convert a value to a <see cref="T:System.TimeOnly" />.
            </summary>
        <returns>
          <c>true</c> if conversion is successful, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
