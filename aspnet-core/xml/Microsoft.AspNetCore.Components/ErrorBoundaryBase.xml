<Type Name="ErrorBoundaryBase" FullName="Microsoft.AspNetCore.Components.ErrorBoundaryBase">
  <TypeSignature Language="C#" Value="public abstract class ErrorBoundaryBase : Microsoft.AspNetCore.Components.ComponentBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ErrorBoundaryBase extends Microsoft.AspNetCore.Components.ComponentBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.ErrorBoundaryBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ErrorBoundaryBase&#xA;Inherits ComponentBase" />
  <TypeSignature Language="F#" Value="type ErrorBoundaryBase = class&#xA;    inherit ComponentBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Components.ComponentBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A base class for error boundary components.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ErrorBoundaryBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment? ChildContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment ChildContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildContent As RenderFragment" />
      <MemberSignature Language="F#" Value="member this.ChildContent : Microsoft.AspNetCore.Components.RenderFragment with get, set" Usage="Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The content to be displayed when there is no error.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentException">
      <MemberSignature Language="C#" Value="protected Exception? CurrentException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception CurrentException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.CurrentException" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentException As Exception" />
      <MemberSignature Language="F#" Value="member this.CurrentException : Exception" Usage="Microsoft.AspNetCore.Components.ErrorBoundaryBase.CurrentException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current exception, or null if there is no exception.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment&lt;Exception&gt;? ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment`1&lt;class System.Exception&gt; ErrorContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As RenderFragment(Of Exception)" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : Microsoft.AspNetCore.Components.RenderFragment&lt;Exception&gt; with get, set" Usage="Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The content to be displayed when there is an error.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumErrorCount">
      <MemberSignature Language="C#" Value="public int MaximumErrorCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumErrorCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumErrorCount As Integer" />
      <MemberSignature Language="F#" Value="member this.MaximumErrorCount : int with get, set" Usage="Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum number of errors that can be handled. If more errors are received,
            they will be treated as fatal. Calling <see cref="M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover" /> resets the count.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnErrorAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task OnErrorAsync (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnErrorAsync(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.OnErrorAsync(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnErrorAsync (exception As Exception) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnErrorAsync : Exception -&gt; System.Threading.Tasks.Task" Usage="errorBoundaryBase.OnErrorAsync exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">The <see cref="T:System.Exception" /> being handled.</param>
        <summary>
            Invoked by the base class when an error is being handled. Typically, derived classes
            should log the exception from this method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recover">
      <MemberSignature Language="C#" Value="public void Recover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recover() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Recover ()" />
      <MemberSignature Language="F#" Value="member this.Recover : unit -&gt; unit" Usage="errorBoundaryBase.Recover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the error boundary to a non-errored state. If the error boundary is not
            already in an errored state, the call has no effect.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
