<Type Name="HandshakeProtocol" FullName="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol">
  <TypeSignature Language="C++ CLI" Value="public ref class HandshakeProtocol abstract sealed" />
  <TypeSignature Language="C#" Value="public static class HandshakeProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed HandshakeProtocol extends System.Object" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HandshakeProtocol" />
  <TypeSignature Language="F#" Value="type HandshakeProtocol = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HandshakeProtocol extends System.Object" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A helper class for working with SignalR handshakes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSuccessfulHandshake">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;System::Byte&gt; GetSuccessfulHandshake(Microsoft::AspNetCore::SignalR::Protocol::IHubProtocol ^ protocol);" />
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; GetSuccessfulHandshake (Microsoft.AspNetCore.SignalR.Protocol.IHubProtocol protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; GetSuccessfulHandshake(class Microsoft.AspNetCore.SignalR.Protocol.IHubProtocol protocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.GetSuccessfulHandshake(Microsoft.AspNetCore.SignalR.Protocol.IHubProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSuccessfulHandshake (protocol As IHubProtocol) As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member GetSuccessfulHandshake : Microsoft.AspNetCore.SignalR.Protocol.IHubProtocol -&gt; ReadOnlySpan&lt;byte&gt;" Usage="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.GetSuccessfulHandshake protocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="Microsoft.AspNetCore.SignalR.Protocol.IHubProtocol" Index="0" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protocol">The protocol being used for the connection.</param>
        <summary>
            Gets the bytes of a successful handshake message.
            </summary>
        <returns>The bytes of a successful handshake message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessHandshakeData">
      <MemberSignature Language="C++ CLI" Value="public: static ReadOnlyMemory&lt;System::Byte&gt; SuccessHandshakeData;" />
      <MemberSignature Language="C#" Value="public static ReadOnlyMemory&lt;byte&gt; SuccessHandshakeData;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; SuccessHandshakeData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.SuccessHandshakeData" />
      <MemberSignature Language="VB.NET" Value="Public Shared SuccessHandshakeData As ReadOnlyMemory(Of Byte) " />
      <MemberSignature Language="F#" Value=" staticval mutable SuccessHandshakeData : ReadOnlyMemory&lt;byte&gt;" Usage="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.SuccessHandshakeData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The serialized representation of a success handshake.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseRequestMessage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseRequestMessage(System::Buffers::ReadOnlySequence&lt;System::Byte&gt; % buffer, [Runtime::InteropServices::Out] Microsoft::AspNetCore::SignalR::Protocol::HandshakeRequestMessage ^ % requestMessage);" />
      <MemberSignature Language="C#" Value="public static bool TryParseRequestMessage (ref System.Buffers.ReadOnlySequence&lt;byte&gt; buffer, out Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage requestMessage);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseRequestMessage(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt;&amp; buffer, [out] class Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage&amp; requestMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.TryParseRequestMessage(System.Buffers.ReadOnlySequence{System.Byte}@,Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseRequestMessage (ByRef buffer As ReadOnlySequence(Of Byte), ByRef requestMessage As HandshakeRequestMessage) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParseRequestMessage : ReadOnlySequence * HandshakeRequestMessage -&gt; bool" Usage="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.TryParseRequestMessage (buffer, requestMessage)" />
      <MemberSignature Language="C#" Value="public static bool TryParseRequestMessage (ref System.Buffers.ReadOnlySequence&lt;byte&gt; buffer, out Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage? requestMessage);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" RefType="ref" />
        <Parameter Name="requestMessage" Type="Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="buffer">The serialized representation of the message.</param>
        <param name="requestMessage">When this method returns, contains the parsed message.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage" /> from the specified serialized representation.
            </summary>
        <returns>A value that is <c>true</c> if the <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage" /> was successfully parsed; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseResponseMessage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseResponseMessage(System::Buffers::ReadOnlySequence&lt;System::Byte&gt; % buffer, [Runtime::InteropServices::Out] Microsoft::AspNetCore::SignalR::Protocol::HandshakeResponseMessage ^ % responseMessage);" />
      <MemberSignature Language="C#" Value="public static bool TryParseResponseMessage (ref System.Buffers.ReadOnlySequence&lt;byte&gt; buffer, out Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage responseMessage);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseResponseMessage(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt;&amp; buffer, [out] class Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage&amp; responseMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.TryParseResponseMessage(System.Buffers.ReadOnlySequence{System.Byte}@,Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseResponseMessage (ByRef buffer As ReadOnlySequence(Of Byte), ByRef responseMessage As HandshakeResponseMessage) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParseResponseMessage : ReadOnlySequence * HandshakeResponseMessage -&gt; bool" Usage="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.TryParseResponseMessage (buffer, responseMessage)" />
      <MemberSignature Language="C#" Value="public static bool TryParseResponseMessage (ref System.Buffers.ReadOnlySequence&lt;byte&gt; buffer, out Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage? responseMessage);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" RefType="ref" />
        <Parameter Name="responseMessage" Type="Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="buffer">The serialized representation of the message.</param>
        <param name="responseMessage">When this method returns, contains the parsed message.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage" /> from the specified serialized representation.
            </summary>
        <returns>A value that is <c>true</c> if the <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage" /> was successfully parsed; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRequestMessage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteRequestMessage(Microsoft::AspNetCore::SignalR::Protocol::HandshakeRequestMessage ^ requestMessage, System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ output);" />
      <MemberSignature Language="C#" Value="public static void WriteRequestMessage (Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage requestMessage, System.Buffers.IBufferWriter&lt;byte&gt; output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteRequestMessage(class Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage requestMessage, class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.WriteRequestMessage(Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage,System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteRequestMessage (requestMessage As HandshakeRequestMessage, output As IBufferWriter(Of Byte))" />
      <MemberSignature Language="F#" Value="static member WriteRequestMessage : Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage * System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.WriteRequestMessage (requestMessage, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage" />
        <Parameter Name="output" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="requestMessage">The message to write.</param>
        <param name="output">The output writer.</param>
        <summary>
            Writes the serialized representation of a <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeRequestMessage" /> to the specified writer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteResponseMessage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteResponseMessage(Microsoft::AspNetCore::SignalR::Protocol::HandshakeResponseMessage ^ responseMessage, System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ output);" />
      <MemberSignature Language="C#" Value="public static void WriteResponseMessage (Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage responseMessage, System.Buffers.IBufferWriter&lt;byte&gt; output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteResponseMessage(class Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage responseMessage, class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.WriteResponseMessage(Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage,System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteResponseMessage (responseMessage As HandshakeResponseMessage, output As IBufferWriter(Of Byte))" />
      <MemberSignature Language="F#" Value="static member WriteResponseMessage : Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage * System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="Microsoft.AspNetCore.SignalR.Protocol.HandshakeProtocol.WriteResponseMessage (responseMessage, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseMessage" Type="Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage" />
        <Parameter Name="output" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="responseMessage">The message to write.</param>
        <param name="output">The output writer.</param>
        <summary>
            Writes the serialized representation of a <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.HandshakeResponseMessage" /> to the specified writer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
