<Type Name="WebViewManager" FullName="Microsoft.AspNetCore.Components.WebView.WebViewManager">
  <TypeSignature Language="C#" Value="public abstract class WebViewManager : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebViewManager extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.WebView.WebViewManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebViewManager&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type WebViewManager = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.5.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Manages activities within a web view that hosts Razor components. Platform authors
            should subclass this to wire up the abstract and protected methods to the APIs of
            the platform's web view.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebViewManager (IServiceProvider provider, Microsoft.AspNetCore.Components.Dispatcher dispatcher, Uri appBaseUri, Microsoft.Extensions.FileProviders.IFileProvider fileProvider, Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore jsComponents, string hostPageRelativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider, class Microsoft.AspNetCore.Components.Dispatcher dispatcher, class System.Uri appBaseUri, class Microsoft.Extensions.FileProviders.IFileProvider fileProvider, class Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore jsComponents, string hostPageRelativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.#ctor(System.IServiceProvider,Microsoft.AspNetCore.Components.Dispatcher,System.Uri,Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider, dispatcher As Dispatcher, appBaseUri As Uri, fileProvider As IFileProvider, jsComponents As JSComponentConfigurationStore, hostPageRelativePath As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.WebView.WebViewManager : IServiceProvider * Microsoft.AspNetCore.Components.Dispatcher * Uri * Microsoft.Extensions.FileProviders.IFileProvider * Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore * string -&gt; Microsoft.AspNetCore.Components.WebView.WebViewManager" Usage="new Microsoft.AspNetCore.Components.WebView.WebViewManager (provider, dispatcher, appBaseUri, fileProvider, jsComponents, hostPageRelativePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="dispatcher" Type="Microsoft.AspNetCore.Components.Dispatcher" />
        <Parameter Name="appBaseUri" Type="System.Uri" />
        <Parameter Name="fileProvider" Type="Microsoft.Extensions.FileProviders.IFileProvider" />
        <Parameter Name="jsComponents" Type="Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore" />
        <Parameter Name="hostPageRelativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IServiceProvider" /> for the application.</param>
        <param name="dispatcher">A <see cref="P:Microsoft.AspNetCore.Components.WebView.WebViewManager.Dispatcher" /> instance that can marshal calls to the required thread or sync context.</param>
        <param name="appBaseUri">The base URI for the application. Since this is a webview, the base URI is typically on a private origin such as http://0.0.0.0/ or app://example/</param>
        <param name="fileProvider">Provides static content to the webview.</param>
        <param name="jsComponents">Describes configuration for adding, removing, and updating root components from JavaScript code.</param>
        <param name="hostPageRelativePath">Path to the host page within the <paramref name="fileProvider" />.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.WebView.WebViewManager" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRootComponentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddRootComponentAsync (Type componentType, string selector, Microsoft.AspNetCore.Components.ParameterView parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddRootComponentAsync(class System.Type componentType, string selector, valuetype Microsoft.AspNetCore.Components.ParameterView parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.AddRootComponentAsync(System.Type,System.String,Microsoft.AspNetCore.Components.ParameterView)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRootComponentAsync (componentType As Type, selector As String, parameters As ParameterView) As Task" />
      <MemberSignature Language="F#" Value="member this.AddRootComponentAsync : Type * string * Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task" Usage="webViewManager.AddRootComponentAsync (componentType, selector, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="selector" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterView" />
      </Parameters>
      <Docs>
        <param name="componentType">The type of the root component. This must implement <see cref="T:Microsoft.AspNetCore.Components.IComponent" />.</param>
        <param name="selector">The CSS selector describing where in the page the component should be placed.</param>
        <param name="parameters">Parameters for the component.</param>
        <summary>
            Adds a root component to the attached page.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.WebView.WebViewManager.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : Microsoft.AspNetCore.Components.Dispatcher" Usage="Microsoft.AspNetCore.Components.WebView.WebViewManager.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Components.WebView.WebViewManager.Dispatcher" /> used by this <see cref="T:Microsoft.AspNetCore.Components.WebView.WebViewManager" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="webViewManager.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DisposeAsyncCore">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask DisposeAsyncCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsyncCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.DisposeAsyncCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DisposeAsyncCore () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsyncCore : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsyncCore : unit -&gt; System.Threading.Tasks.ValueTask" Usage="webViewManager.DisposeAsyncCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes the current <see cref="T:Microsoft.AspNetCore.Components.WebView.WebViewManager" /> instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageReceived">
      <MemberSignature Language="C#" Value="protected void MessageReceived (Uri sourceUri, string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MessageReceived(class System.Uri sourceUri, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.MessageReceived(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MessageReceived (sourceUri As Uri, message As String)" />
      <MemberSignature Language="F#" Value="member this.MessageReceived : Uri * string -&gt; unit" Usage="webViewManager.MessageReceived (sourceUri, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceUri">The source URI for the message.</param>
        <param name="message">The message.</param>
        <summary>
            Notifies the <see cref="T:Microsoft.AspNetCore.Components.WebView.WebViewManager" /> about a message from JavaScript running within the web view.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As String)" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="webViewManager.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="url">The URL, which may be absolute or relative to the application root.</param>
        <summary>
            Instructs the web view to navigate to the specified location, bypassing any
            client-side routing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateCore">
      <MemberSignature Language="C#" Value="protected abstract void NavigateCore (Uri absoluteUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NavigateCore(class System.Uri absoluteUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.NavigateCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub NavigateCore (absoluteUri As Uri)" />
      <MemberSignature Language="F#" Value="abstract member NavigateCore : Uri -&gt; unit" Usage="webViewManager.NavigateCore absoluteUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">The absolute URI.</param>
        <summary>
            Instructs the web view to navigate to the specified location, bypassing any
            client-side routing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRootComponentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveRootComponentAsync (string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveRootComponentAsync(string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.RemoveRootComponentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRootComponentAsync (selector As String) As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveRootComponentAsync : string -&gt; System.Threading.Tasks.Task" Usage="webViewManager.RemoveRootComponentAsync selector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selector">The CSS selector describing where in the page the component was placed. This must exactly match the selector provided on an earlier call to <see cref="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.AddRootComponentAsync(System.Type,System.String,Microsoft.AspNetCore.Components.ParameterView)" />.</param>
        <summary>
            Removes a previously-attached root component from the current page.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="protected abstract void SendMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SendMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.SendMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SendMessage (message As String)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string -&gt; unit" Usage="webViewManager.SendMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <summary>
            Sends a message to JavaScript code running in the attached web view. This must
            be forwarded to the Blazor JavaScript code.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDispatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryDispatchAsync (Action&lt;IServiceProvider&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryDispatchAsync(class System.Action`1&lt;class System.IServiceProvider&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.TryDispatchAsync(System.Action{System.IServiceProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryDispatchAsync (workItem As Action(Of IServiceProvider)) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryDispatchAsync : Action&lt;IServiceProvider&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="webViewManager.TryDispatchAsync workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.IServiceProvider&gt;" Index="0" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="workItem">The action to call.</param>
        <summary>
            Calls the specified <paramref name="workItem" /> asynchronously and passes in the scoped services available to Razor components.
            This method will not throw any exceptions if it is unable to call the specified <paramref name="workItem" />, but if it does call it, then exceptions may still be thrown by the <paramref name="workItem" /> itself.
            </summary>
        <returns>Returns a <see cref="T:System.Threading.Tasks.Task" /> representing <c>true</c> if the <paramref name="workItem" /> was called, or <c>false</c> if it was not called because Blazor is not currently running.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="workItem" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetResponseContent">
      <MemberSignature Language="C#" Value="protected bool TryGetResponseContent (string uri, bool allowFallbackOnHostPage, out int statusCode, out string statusMessage, out System.IO.Stream content, out System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryGetResponseContent(string uri, bool allowFallbackOnHostPage, [out] int32&amp; statusCode, [out] string&amp; statusMessage, [out] class System.IO.Stream&amp; content, [out] class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&amp; headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.WebViewManager.TryGetResponseContent(System.String,System.Boolean,System.Int32@,System.String@,System.IO.Stream@,System.Collections.Generic.IDictionary{System.String,System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function TryGetResponseContent (uri As String, allowFallbackOnHostPage As Boolean, ByRef statusCode As Integer, ByRef statusMessage As String, ByRef content As Stream, ByRef headers As IDictionary(Of String, String)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetResponseContent : string * bool * int * string * Stream * IDictionary -&gt; bool" Usage="webViewManager.TryGetResponseContent (uri, allowFallbackOnHostPage, statusCode, statusMessage, content, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView</AssemblyName>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="allowFallbackOnHostPage" Type="System.Boolean" />
        <Parameter Name="statusCode" Type="System.Int32" RefType="out" />
        <Parameter Name="statusMessage" Type="System.String" RefType="out" />
        <Parameter Name="content" Type="System.IO.Stream" RefType="out" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uri">The uri of the request</param>
        <param name="allowFallbackOnHostPage">Whether or not to fallback to the host page.</param>
        <param name="statusCode">The status code of the response.</param>
        <param name="statusMessage">The response status message.</param>
        <param name="content">The response content</param>
        <param name="headers">The response headers</param>
        <summary>
            Tries to provide the response content for a given network request.
            </summary>
        <returns>
          <c>true</c> if the response can be provided; <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
