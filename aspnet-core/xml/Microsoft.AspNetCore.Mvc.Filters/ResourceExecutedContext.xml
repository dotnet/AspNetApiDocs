<Type Name="ResourceExecutedContext" FullName="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext">
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExecutedContext : Microsoft::AspNetCore::Mvc::Filters::FilterContext" />
  <TypeSignature Language="C#" Value="public class ResourceExecutedContext : Microsoft.AspNetCore.Mvc.Filters.FilterContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExecutedContext extends Microsoft.AspNetCore.Mvc.Filters.FilterContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExecutedContext&#xA;Inherits FilterContext" />
  <TypeSignature Language="F#" Value="type ResourceExecutedContext = class&#xA;    inherit FilterContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.Filters.FilterContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A context for resource filters, specifically <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)" /> calls.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExecutedContext(Microsoft::AspNetCore::Mvc::ActionContext ^ actionContext, System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ filters);" />
      <MemberSignature Language="C#" Value="public ResourceExecutedContext (Microsoft.AspNetCore.Mvc.ActionContext actionContext, System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionContext As ActionContext, filters As IList(Of IFilterMetadata))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext : Microsoft.AspNetCore.Mvc.ActionContext * System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; -&gt; Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" Usage="new Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext (actionContext, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" />.</param>
        <param name="filters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> instances.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Canceled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Canceled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Canceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Canceled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Canceled : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value which indicates whether or not execution was canceled by a resource filter.
            If true, then a resource filter short-circuited execution by setting
            <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Exception Exception { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Exception As Exception" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" />
      <MemberSignature Language="C#" Value="public virtual Exception? Exception { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or set the current <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" /> or <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo" /> to <c>null</c> will treat
            the exception as handled, and it will not be rethrown by the runtime.
            </para>
          <para>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled" /> to <c>true</c> will also mark the exception as handled.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionDispatchInfo">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::ExceptionServices::ExceptionDispatchInfo ^ ExceptionDispatchInfo { System::Runtime::ExceptionServices::ExceptionDispatchInfo ^ get(); void set(System::Runtime::ExceptionServices::ExceptionDispatchInfo ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual System.Runtime.ExceptionServices.ExceptionDispatchInfo ExceptionDispatchInfo { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.ExceptionServices.ExceptionDispatchInfo ExceptionDispatchInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExceptionDispatchInfo As ExceptionDispatchInfo" />
      <MemberSignature Language="F#" Value="member this.ExceptionDispatchInfo : System.Runtime.ExceptionServices.ExceptionDispatchInfo with get, set" Usage="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo" />
      <MemberSignature Language="C#" Value="public virtual System.Runtime.ExceptionServices.ExceptionDispatchInfo? ExceptionDispatchInfo { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ExceptionServices.ExceptionDispatchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or set the current <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" /> or <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo" /> to <c>null</c> will treat
            the exception as handled, and it will not be rethrown by the runtime.
            </para>
          <para>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled" /> to <c>true</c> will also mark the exception as handled.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExceptionHandled As Boolean" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            Gets or sets a value indicating whether or not the current <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" /> has been handled.
            </para>
          <para>
            If <c>false</c> the <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception" /> will be rethrown by the runtime after resource filters
            have executed.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::AspNetCore::Mvc::IActionResult ^ Result { Microsoft::AspNetCore::Mvc::IActionResult ^ get(); void set(Microsoft::AspNetCore::Mvc::IActionResult ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.IActionResult Result { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.IActionResult Result" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Result As IActionResult" />
      <MemberSignature Language="F#" Value="member this.Result : Microsoft.AspNetCore.Mvc.IActionResult with get, set" Usage="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.IActionResult? Result { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.IActionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the result.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result" /> may be provided by execution of the action itself or by another
            filter.
            </para>
          <para>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result" /> has already been written to the response before being made available
            to resource filters.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
