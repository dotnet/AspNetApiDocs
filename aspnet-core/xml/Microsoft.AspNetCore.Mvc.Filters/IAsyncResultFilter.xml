<Type Name="IAsyncResultFilter" FullName="Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter">
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResultFilter : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <TypeSignature Language="C#" Value="public interface IAsyncResultFilter : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResultFilter implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResultFilter&#xA;Implements IFilterMetadata" />
  <TypeSignature Language="F#" Value="type IAsyncResultFilter = interface&#xA;    interface IFilterMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A filter that asynchronously surrounds execution of action results successfully returned from an action.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" /> and <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter" /> implementations are executed around the action
            result only when the action method (or action filters) complete successfully.
            </para>
      <para>
        <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" /> and <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter" /> instances are not executed in cases where
            an authorization filter or resource filter short-circuits the request to prevent execution of the action.
            <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" />. <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" /> and <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter" /> implementations
            are also not executed in cases where an exception filter handles an exception by producing an action result.
            </para>
      <para>
            To create a result filter that surrounds the execution of all action results, implement
            either the <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAlwaysRunResultFilter" /> or the <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncAlwaysRunResultFilter" /> interface.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnResultExecutionAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ OnResultExecutionAsync(Microsoft::AspNetCore::Mvc::Filters::ResultExecutingContext ^ context, Microsoft::AspNetCore::Mvc::Filters::ResultExecutionDelegate ^ next);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnResultExecutionAsync (Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext context, Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnResultExecutionAsync(class Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext context, class Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnResultExecutionAsync (context As ResultExecutingContext, next As ResultExecutionDelegate) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnResultExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext * Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate -&gt; System.Threading.Tasks.Task" Usage="iAsyncResultFilter.OnResultExecutionAsync (context, next)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" />
        <Parameter Name="next" Type="Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" />.</param>
        <param name="next">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate" />. Invoked to execute the next result filter or the result itself.
            </param>
        <summary>
            Called asynchronously before the action result.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion indicates the filter has executed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
