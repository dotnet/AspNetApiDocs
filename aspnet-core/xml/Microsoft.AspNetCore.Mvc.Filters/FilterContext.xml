<Type Name="FilterContext" FullName="Microsoft.AspNetCore.Mvc.Filters.FilterContext">
  <TypeSignature Language="C++ CLI" Value="public ref class FilterContext abstract : Microsoft::AspNetCore::Mvc::ActionContext" />
  <TypeSignature Language="C#" Value="public abstract class FilterContext : Microsoft.AspNetCore.Mvc.ActionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FilterContext extends Microsoft.AspNetCore.Mvc.ActionContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Filters.FilterContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FilterContext&#xA;Inherits ActionContext" />
  <TypeSignature Language="F#" Value="type FilterContext = class&#xA;    inherit ActionContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.ActionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An abstract context for filters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterContext(Microsoft::AspNetCore::Mvc::ActionContext ^ actionContext, System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ filters);" />
      <MemberSignature Language="C#" Value="public FilterContext (Microsoft.AspNetCore.Mvc.ActionContext actionContext, System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Filters.FilterContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionContext As ActionContext, filters As IList(Of IFilterMetadata))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Filters.FilterContext : Microsoft.AspNetCore.Mvc.ActionContext * System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; -&gt; Microsoft.AspNetCore.Mvc.Filters.FilterContext" Usage="new Microsoft.AspNetCore.Mvc.Filters.FilterContext (actionContext, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" />.</param>
        <param name="filters">All applicable <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> implementations.</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.Mvc.Filters.FilterContext" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ Filters { System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt; Filters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Filters As IList(Of IFilterMetadata)" />
      <MemberSignature Language="F#" Value="member this.Filters : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt;" Usage="Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets all applicable <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> implementations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEffectivePolicy&lt;TMetadata&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadata&gt;&#xA; where TMetadata : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata TMetadata FindEffectivePolicy();" />
      <MemberSignature Language="C#" Value="public TMetadata FindEffectivePolicy&lt;TMetadata&gt; () where TMetadata : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TMetadata FindEffectivePolicy&lt;(class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata) TMetadata&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Filters.FilterContext.FindEffectivePolicy``1" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEffectivePolicy(Of TMetadata As IFilterMetadata) () As TMetadata" />
      <MemberSignature Language="F#" Value="member this.FindEffectivePolicy : unit -&gt; 'Metadata (requires 'Metadata :&gt; Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)" Usage="filterContext.FindEffectivePolicy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadata</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadata">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TMetadata">The type of the filter policy.</typeparam>
        <summary>
            Returns the most effective (most specific) policy of type <typeparamref name="TMetadata" /> applied to
            the action associated with the <see cref="T:Microsoft.AspNetCore.Mvc.Filters.FilterContext" />.
            </summary>
        <returns>The implementation of <typeparamref name="TMetadata" /> applied to the action associated with
            the <see cref="T:Microsoft.AspNetCore.Mvc.Filters.FilterContext" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEffectivePolicy&lt;TMetadata&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadata&gt;&#xA; where TMetadata : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata bool IsEffectivePolicy(TMetadata policy);" />
      <MemberSignature Language="C#" Value="public bool IsEffectivePolicy&lt;TMetadata&gt; (TMetadata policy) where TMetadata : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEffectivePolicy&lt;(class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata) TMetadata&gt;(!!TMetadata policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Filters.FilterContext.IsEffectivePolicy``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEffectivePolicy(Of TMetadata As IFilterMetadata) (policy As TMetadata) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEffectivePolicy : 'Metadata -&gt; bool (requires 'Metadata :&gt; Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)" Usage="filterContext.IsEffectivePolicy policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadata">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="policy" Type="TMetadata" Index="0" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TMetadata">The type of the filter policy.</typeparam>
        <param name="policy">The filter policy instance.</param>
        <summary>
            Returns a value indicating whether the provided <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> is the most effective
            policy (most specific) applied to the action associated with the <see cref="T:Microsoft.AspNetCore.Mvc.Filters.FilterContext" />.
            </summary>
        <returns>
          <c>true</c> if the provided <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> is the most effective policy, otherwise <c>false</c>.
            </returns>
        <remarks>
          <para>
            The <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterContext.IsEffectivePolicy``1(``0)" /> method is used to implement a common convention
            for filters that define an overriding behavior. When multiple filters may apply to the same
            cross-cutting concern, define a common interface for the filters (<typeparamref name="TMetadata" />) and
            implement the filters such that all of the implementations call this method to determine if they should
            take action.
            </para>
          <para>
            For instance, a global filter might be overridden by placing a filter attribute on an action method.
            The policy applied directly to the action method could be considered more specific.
            </para>
          <para>
            This mechanism for overriding relies on the rules of order and scope that the filter system
            provides to control ordering of filters. It is up to the implementor of filters to implement this
            protocol cooperatively. The filter system has no innate notion of overrides, this is a recommended
            convention.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
