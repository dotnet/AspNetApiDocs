<Type Name="SocketTransportOptions" FullName="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class SocketTransportOptions" />
  <TypeSignature Language="C#" Value="public class SocketTransportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketTransportOptions extends System.Object" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketTransportOptions" />
  <TypeSignature Language="F#" Value="type SocketTransportOptions = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SocketTransportOptions extends System.Object" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options for socket based transports.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketTransportOptions();" />
      <MemberSignature Language="C#" Value="public SocketTransportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Backlog">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Backlog { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Backlog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Backlog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.Backlog" />
      <MemberSignature Language="VB.NET" Value="Public Property Backlog As Integer" />
      <MemberSignature Language="F#" Value="member this.Backlog : int with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.Backlog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum length of the pending connection queue.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to 512 pending connections.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBoundListenSocket">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.EndPoint,System.Net.Sockets.Socket&gt; CreateBoundListenSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Net.EndPoint, class System.Net.Sockets.Socket&gt; CreateBoundListenSocket" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateBoundListenSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateBoundListenSocket As Func(Of EndPoint, Socket)" />
      <MemberSignature Language="F#" Value="member this.CreateBoundListenSocket : Func&lt;System.Net.EndPoint, System.Net.Sockets.Socket&gt; with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateBoundListenSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.EndPoint,System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A function used to create a new <see cref="T:System.Net.Sockets.Socket" /> to listen with. If
            not set, <see cref="M:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(System.Net.EndPoint)" /> is used.
            </summary>
        <value>To be added.</value>
        <remarks>
            Implementors are expected to call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> on the
            <see cref="T:System.Net.Sockets.Socket" />. Please note that <see cref="M:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(System.Net.EndPoint)" />
            calls <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> as part of its implementation, so implementors
            using this method do not need to call it again.
            </remarks>
        <remarks>
            Defaults to <see cref="M:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(System.Net.EndPoint)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultBoundListenSocket">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.Socket CreateDefaultBoundListenSocket (System.Net.EndPoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.Socket CreateDefaultBoundListenSocket(class System.Net.EndPoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultBoundListenSocket (endpoint As EndPoint) As Socket" />
      <MemberSignature Language="F#" Value="static member CreateDefaultBoundListenSocket : System.Net.EndPoint -&gt; System.Net.Sockets.Socket" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Net.EndPoint" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            An <see cref="T:System.Net.EndPoint" />.
            </param>
        <summary>
            Creates a default instance of <see cref="T:System.Net.Sockets.Socket" /> for the given <see cref="T:System.Net.EndPoint" />
            that can be used by a connection listener to listen for inbound requests. <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
            is called by this method.
            </summary>
        <returns>
            A <see cref="T:System.Net.Sockets.Socket" /> instance.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IOQueueCount">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IOQueueCount { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int IOQueueCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IOQueueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.IOQueueCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IOQueueCount As Integer" />
      <MemberSignature Language="F#" Value="member this.IOQueueCount : int with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.IOQueueCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of I/O queues used to process requests. Set to 0 to directly schedule I/O to the ThreadPool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to a value based on and limited to <see cref="P:System.Environment.ProcessorCount" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReadBufferSize">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; MaxReadBufferSize { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="C#" Value="public long? MaxReadBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxReadBufferSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.MaxReadBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReadBufferSize As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxReadBufferSize : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.MaxReadBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum unconsumed incoming bytes the transport will buffer.
            <para>
            A value of <see langword="null" /> or 0 disables backpressure entirely allowing unlimited buffering.
            Unlimited server buffering is a security risk given untrusted clients.
            </para></summary>
        <value>To be added.</value>
        <remarks>
            Defaults to 1 MiB.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWriteBufferSize">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; MaxWriteBufferSize { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="C#" Value="public long? MaxWriteBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxWriteBufferSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.MaxWriteBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWriteBufferSize As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxWriteBufferSize : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.MaxWriteBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum outgoing bytes the transport will buffer before applying write backpressure.
            <para>
            A value of <see langword="null" /> or 0 disables backpressure entirely allowing unlimited buffering.
            Unlimited server buffering is a security risk given untrusted clients.
            </para></summary>
        <value>To be added.</value>
        <remarks>
            Defaults to 64 KiB.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set to false to enable Nagle's algorithm for all connections.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to true.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafePreferInlineScheduling">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafePreferInlineScheduling { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool UnsafePreferInlineScheduling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafePreferInlineScheduling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.UnsafePreferInlineScheduling" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafePreferInlineScheduling As Boolean" />
      <MemberSignature Language="F#" Value="member this.UnsafePreferInlineScheduling : bool with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.UnsafePreferInlineScheduling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Inline application and transport continuations instead of dispatching to the threadpool.
            </summary>
        <value>To be added.</value>
        <remarks>
            This will run application code on the IO thread which is why this is unsafe.
            It is recommended to set the DOTNET_SYSTEM_NET_SOCKETS_INLINE_COMPLETIONS environment variable to '1' when using this setting to also inline the completions
            at the runtime layer as well.
            This setting can make performance worse if there is expensive work that will end up holding onto the IO thread for longer than needed.
            Test to make sure this setting helps performance.
            </remarks>
        <remarks>
            Defaults to false.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForDataBeforeAllocatingBuffer">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WaitForDataBeforeAllocatingBuffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool WaitForDataBeforeAllocatingBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WaitForDataBeforeAllocatingBuffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.WaitForDataBeforeAllocatingBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitForDataBeforeAllocatingBuffer As Boolean" />
      <MemberSignature Language="F#" Value="member this.WaitForDataBeforeAllocatingBuffer : bool with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.WaitForDataBeforeAllocatingBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Wait until there is data available to allocate a buffer. Setting this to false can increase throughput at the cost of increased memory usage.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to true.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
