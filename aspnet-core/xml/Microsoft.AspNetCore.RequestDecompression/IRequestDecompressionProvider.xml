<Type Name="IRequestDecompressionProvider" FullName="Microsoft.AspNetCore.RequestDecompression.IRequestDecompressionProvider">
  <TypeSignature Language="C#" Value="public interface IRequestDecompressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestDecompressionProvider" FrameworkAlternate="aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.RequestDecompression.IRequestDecompressionProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestDecompressionProvider" />
  <TypeSignature Language="F#" Value="type IRequestDecompressionProvider = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRequestDecompressionProvider" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.RequestDecompression</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Used to examine requests to see if decompression should be used.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDecompressionStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream? GetDecompressionStream (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetDecompressionStream(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.RequestDecompression.IRequestDecompressionProvider.GetDecompressionStream(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecompressionStream (context As HttpContext) As Stream" />
      <MemberSignature Language="F#" Value="abstract member GetDecompressionStream : Microsoft.AspNetCore.Http.HttpContext -&gt; System.IO.Stream" Usage="iRequestDecompressionProvider.GetDecompressionStream context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.RequestDecompression</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.</param>
        <summary>
            Examines the request and selects an acceptable decompression provider, if any.
            </summary>
        <returns>The decompression stream when the provider is capable of decompressing the HTTP request body, otherwise <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
