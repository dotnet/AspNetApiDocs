<Type Name="ILogger" FullName="Microsoft.Owin.Logging.ILogger">
  <TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Owin.Logging.ILogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger" />
  <TypeSignature Language="F#" Value="type ILogger = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin</AssemblyName>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A generic interface for logging.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="public bool WriteCore (System.Diagnostics.TraceEventType eventType, int eventId, object state, Exception exception, Func&lt;object,Exception,string&gt; formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteCore(valuetype System.Diagnostics.TraceEventType eventType, int32 eventId, object state, class System.Exception exception, class System.Func`3&lt;object, class System.Exception, string&gt; formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteCore (eventType As TraceEventType, eventId As Integer, state As Object, exception As Exception, formatter As Func(Of Object, Exception, String)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : System.Diagnostics.TraceEventType * int * obj * Exception * Func&lt;obj, Exception, string&gt; -&gt; bool" Usage="iLogger.WriteCore (eventType, eventId, state, exception, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="formatter" Type="System.Func&lt;System.Object,System.Exception,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventType" />
        <param name="eventId" />
        <param name="state" />
        <param name="exception" />
        <param name="formatter" />
        <summary>
            Aggregates most logging patterns to a single method.  This must be compatible with the Func representation in the OWIN environment.
            
            To check IsEnabled call WriteCore with only TraceEventType and check the return value, no event will be written.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
