<Type Name="EntityTagHeaderValue" FullName="Microsoft.Net.Http.Headers.EntityTagHeaderValue">
  <TypeSignature Language="C++ CLI" Value="public ref class EntityTagHeaderValue" />
  <TypeSignature Language="C#" Value="public class EntityTagHeaderValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityTagHeaderValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityTagHeaderValue" />
  <TypeSignature Language="F#" Value="type EntityTagHeaderValue = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an entity-tag (<c>etag</c>) header value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityTagHeaderValue(Microsoft::Extensions::Primitives::StringSegment tag);" />
      <MemberSignature Language="C#" Value="public EntityTagHeaderValue (Microsoft.Extensions.Primitives.StringSegment tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Primitives.StringSegment tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.#ctor(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As StringSegment)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.EntityTagHeaderValue : Microsoft.Extensions.Primitives.StringSegment -&gt; Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="new Microsoft.Net.Http.Headers.EntityTagHeaderValue tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="tag">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that contains an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityTagHeaderValue(System::String ^ tag);" />
      <MemberSignature Language="C#" Value="public EntityTagHeaderValue (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.EntityTagHeaderValue : string -&gt; Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="new Microsoft.Net.Http.Headers.EntityTagHeaderValue tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityTagHeaderValue(Microsoft::Extensions::Primitives::StringSegment tag, bool isWeak);" />
      <MemberSignature Language="C#" Value="public EntityTagHeaderValue (Microsoft.Extensions.Primitives.StringSegment tag, bool isWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Primitives.StringSegment tag, bool isWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As StringSegment, isWeak As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.EntityTagHeaderValue : Microsoft.Extensions.Primitives.StringSegment * bool -&gt; Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="new Microsoft.Net.Http.Headers.EntityTagHeaderValue (tag, isWeak)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="isWeak" Type="System.Boolean" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="tag">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that contains an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />.</param>
        <param name="isWeak">A value that indicates if this entity-tag header is a weak validator.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityTagHeaderValue(System::String ^ tag, bool isWeak);" />
      <MemberSignature Language="C#" Value="public EntityTagHeaderValue (string tag, bool isWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, bool isWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, isWeak As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.EntityTagHeaderValue : string * bool -&gt; Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="new Microsoft.Net.Http.Headers.EntityTagHeaderValue (tag, isWeak)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="isWeak" Type="System.Boolean" Index="1" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="isWeak">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ Any { Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Microsoft.Net.Http.Headers.EntityTagHeaderValue Any { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Net.Http.Headers.EntityTagHeaderValue Any" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.EntityTagHeaderValue.Any" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Any As EntityTagHeaderValue" />
      <MemberSignature Language="F#" Value="static member Any : Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.Any" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.EntityTagHeaderValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "any" etag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ other, bool useStrongComparison);" />
      <MemberSignature Language="C#" Value="public bool Compare (Microsoft.Net.Http.Headers.EntityTagHeaderValue other, bool useStrongComparison);" FrameworkAlternate="aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Compare(class Microsoft.Net.Http.Headers.EntityTagHeaderValue other, bool useStrongComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.Compare(Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (other As EntityTagHeaderValue, useStrongComparison As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Compare : Microsoft.Net.Http.Headers.EntityTagHeaderValue * bool -&gt; bool" Usage="entityTagHeaderValue.Compare (other, useStrongComparison)" />
      <MemberSignature Language="C#" Value="public bool Compare (Microsoft.Net.Http.Headers.EntityTagHeaderValue? other, bool useStrongComparison);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" Index="0" FrameworkAlternate="aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="useStrongComparison" Type="System.Boolean" Index="1" FrameworkAlternate="aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">The other <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> to compare against.</param>
        <param name="useStrongComparison">
          <c>true</c> to use a strong comparison, <c>false</c> to use a weak comparison</param>
        <summary>
            Compares against another <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> to see if they match under the RFC specifications (<see href="https://tools.ietf.org/html/rfc7232#section-2.3.2" />).
            </summary>
        <returns>
          <c>true</c> if the <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> match for the given comparison type,
            <c>false</c> if the other value is null or the comparison failed.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="entityTagHeaderValue.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The other value to check against for equality.</param>
        <summary>
            Check against another <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> for equality.
            This equality check should not be used to determine if two values match under the RFC specifications (<see href="https://tools.ietf.org/html/rfc7232#section-2.3.2" />).
            </summary>
        <returns>
          <c>true</c> if the strength and tag of the two values match,
            <c>false</c> if the other value is null, is not an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />, or if there is a mismatch of strength or tag between the two values.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="entityTagHeaderValue.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsWeak">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWeak { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsWeak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWeak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.EntityTagHeaderValue.IsWeak" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWeak As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsWeak : bool" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.IsWeak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that determines if the entity-tag header is a weak validator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ Parse(Microsoft::Extensions::Primitives::StringSegment input);" />
      <MemberSignature Language="C#" Value="public static Microsoft.Net.Http.Headers.EntityTagHeaderValue Parse (Microsoft.Extensions.Primitives.StringSegment input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Net.Http.Headers.EntityTagHeaderValue Parse(valuetype Microsoft.Extensions.Primitives.StringSegment input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.Parse(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As StringSegment) As EntityTagHeaderValue" />
      <MemberSignature Language="F#" Value="static member Parse : Microsoft.Extensions.Primitives.StringSegment -&gt; Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.EntityTagHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="input">The values to parse.</param>
        <summary>
            Parses <paramref name="input" /> as a <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> value.
            </summary>
        <returns>The parsed values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ Parse(System::String ^ input);" />
      <MemberSignature Language="C#" Value="public static Microsoft.Net.Http.Headers.EntityTagHeaderValue Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Net.Http.Headers.EntityTagHeaderValue Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As EntityTagHeaderValue" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Microsoft.Net.Http.Headers.EntityTagHeaderValue" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.EntityTagHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::EntityTagHeaderValue ^&gt; ^ ParseList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs);" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; ParseList (System.Collections.Generic.IList&lt;string&gt; inputs);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; ParseList(class System.Collections.Generic.IList`1&lt;string&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.ParseList(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseList (inputs As IList(Of String)) As IList(Of EntityTagHeaderValue)" />
      <MemberSignature Language="F#" Value="static member ParseList : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.ParseList inputs" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; ParseList (System.Collections.Generic.IList&lt;string&gt;? inputs);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">The values to parse.</param>
        <summary>
            Parses a sequence of inputs as a sequence of <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> values.
            </summary>
        <returns>The parsed values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseStrictList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::EntityTagHeaderValue ^&gt; ^ ParseStrictList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs);" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; ParseStrictList (System.Collections.Generic.IList&lt;string&gt; inputs);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; ParseStrictList(class System.Collections.Generic.IList`1&lt;string&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.ParseStrictList(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseStrictList (inputs As IList(Of String)) As IList(Of EntityTagHeaderValue)" />
      <MemberSignature Language="F#" Value="static member ParseStrictList : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.ParseStrictList inputs" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; ParseStrictList (System.Collections.Generic.IList&lt;string&gt;? inputs);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">The values to parse.</param>
        <summary>
            Parses a sequence of inputs as a sequence of <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> values using string parsing rules.
            </summary>
        <returns>The parsed values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Tag { Microsoft::Extensions::Primitives::StringSegment get(); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public string Tag { get; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.EntityTagHeaderValue.Tag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tag As String" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Tag : string" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.Tag" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Tag { get; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Tag" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tag As StringSegment" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Tag : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.Tag" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.String</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the quoted tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="entityTagHeaderValue.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Microsoft::Extensions::Primitives::StringSegment input, [Runtime::InteropServices::Out] Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ % parsedValue);" />
      <MemberSignature Language="C#" Value="public static bool TryParse (Microsoft.Extensions.Primitives.StringSegment input, out Microsoft.Net.Http.Headers.EntityTagHeaderValue parsedValue);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype Microsoft.Extensions.Primitives.StringSegment input, [out] class Microsoft.Net.Http.Headers.EntityTagHeaderValue&amp; parsedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParse(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Net.Http.Headers.EntityTagHeaderValue@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As StringSegment, ByRef parsedValue As EntityTagHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : Microsoft.Extensions.Primitives.StringSegment * EntityTagHeaderValue -&gt; bool" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParse (input, parsedValue)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (Microsoft.Extensions.Primitives.StringSegment input, out Microsoft.Net.Http.Headers.EntityTagHeaderValue? parsedValue);" FrameworkAlternate="aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="parsedValue" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" RefType="out" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="input">The value to parse.</param>
        <param name="parsedValue">The parsed value.</param>
        <summary>
            Attempts to parse the specified <paramref name="input" /> as a <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />.
            </summary>
        <returns>
          <see langword="true" /> if input is a valid <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Microsoft::Net::Http::Headers::EntityTagHeaderValue ^ % parsedValue);" />
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Microsoft.Net.Http.Headers.EntityTagHeaderValue parsedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class Microsoft.Net.Http.Headers.EntityTagHeaderValue&amp; parsedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.EntityTagHeaderValue@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef parsedValue As EntityTagHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : string * EntityTagHeaderValue -&gt; bool" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParse (input, parsedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="parsedValue" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" RefType="out" Index="1" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="parsedValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::EntityTagHeaderValue ^&gt; ^ % parsedValues);" />
      <MemberSignature Language="C#" Value="public static bool TryParseList (System.Collections.Generic.IList&lt;string&gt; inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; parsedValues);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseList(class System.Collections.Generic.IList`1&lt;string&gt; inputs, [out] class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;&amp; parsedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParseList(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Net.Http.Headers.EntityTagHeaderValue}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseList (inputs As IList(Of String), ByRef parsedValues As IList(Of EntityTagHeaderValue)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParseList : System.Collections.Generic.IList&lt;string&gt; * IList -&gt; bool" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParseList (inputs, parsedValues)" />
      <MemberSignature Language="C#" Value="public static bool TryParseList (System.Collections.Generic.IList&lt;string&gt;? inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;? parsedValues);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="parsedValues" Type="System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputs">The values to parse.</param>
        <param name="parsedValues">The parsed values.</param>
        <summary>
            Attempts to parse the sequence of values as a sequence of <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />.
            </summary>
        <returns>
          <see langword="true" /> if all inputs are valid <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseStrictList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseStrictList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::EntityTagHeaderValue ^&gt; ^ % parsedValues);" />
      <MemberSignature Language="C#" Value="public static bool TryParseStrictList (System.Collections.Generic.IList&lt;string&gt; inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt; parsedValues);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseStrictList(class System.Collections.Generic.IList`1&lt;string&gt; inputs, [out] class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;&amp; parsedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParseStrictList(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Net.Http.Headers.EntityTagHeaderValue}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseStrictList (inputs As IList(Of String), ByRef parsedValues As IList(Of EntityTagHeaderValue)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParseStrictList : System.Collections.Generic.IList&lt;string&gt; * IList -&gt; bool" Usage="Microsoft.Net.Http.Headers.EntityTagHeaderValue.TryParseStrictList (inputs, parsedValues)" />
      <MemberSignature Language="C#" Value="public static bool TryParseStrictList (System.Collections.Generic.IList&lt;string&gt;? inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;? parsedValues);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="parsedValues" Type="System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.EntityTagHeaderValue&gt;" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputs">The values to parse.</param>
        <param name="parsedValues">The parsed values.</param>
        <summary>
            Attempts to parse the sequence of values as a sequence of <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> using string parsing rules.
            </summary>
        <returns>
          <see langword="true" /> if all inputs are valid <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" />, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
