<Type Name="MediaTypeHeaderValue" FullName="Microsoft.Net.Http.Headers.MediaTypeHeaderValue">
  <TypeSignature Language="C++ CLI" Value="public ref class MediaTypeHeaderValue" />
  <TypeSignature Language="C#" Value="public class MediaTypeHeaderValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaTypeHeaderValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaTypeHeaderValue" />
  <TypeSignature Language="F#" Value="type MediaTypeHeaderValue = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Representation of the media type header. See <see href="https://tools.ietf.org/html/rfc6838" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaTypeHeaderValue(Microsoft::Extensions::Primitives::StringSegment mediaType);" />
      <MemberSignature Language="C#" Value="public MediaTypeHeaderValue (Microsoft.Extensions.Primitives.StringSegment mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Primitives.StringSegment mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As StringSegment)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue : Microsoft.Extensions.Primitives.StringSegment -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue mediaType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="mediaType">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> representation of a media type.
            The text provided must be a single media type without parameters. </param>
        <summary>
            Initializes a <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaTypeHeaderValue(System::String ^ mediaType);" />
      <MemberSignature Language="C#" Value="public MediaTypeHeaderValue (string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue : string -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue mediaType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaTypeHeaderValue(Microsoft::Extensions::Primitives::StringSegment mediaType, double quality);" />
      <MemberSignature Language="C#" Value="public MediaTypeHeaderValue (Microsoft.Extensions.Primitives.StringSegment mediaType, double quality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Primitives.StringSegment mediaType, float64 quality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As StringSegment, quality As Double)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue : Microsoft.Extensions.Primitives.StringSegment * double -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue (mediaType, quality)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="quality" Type="System.Double" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="mediaType">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> representation of a media type.
            The text provided must be a single media type without parameters. </param>
        <param name="quality">The <see cref="T:System.Double" /> with the quality of the media type.</param>
        <summary>
            Initializes a <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaTypeHeaderValue(System::String ^ mediaType, double quality);" />
      <MemberSignature Language="C#" Value="public MediaTypeHeaderValue (string mediaType, double quality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mediaType, float64 quality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As String, quality As Double)" />
      <MemberSignature Language="F#" Value="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue : string * double -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="new Microsoft.Net.Http.Headers.MediaTypeHeaderValue (mediaType, quality)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="quality" Type="System.Double" Index="1" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <param name="quality">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Boundary">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Boundary { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Boundary { Microsoft::Extensions::Primitives::StringSegment get(); void set(Microsoft::Extensions::Primitives::StringSegment value); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public string Boundary { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Boundary" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary" />
      <MemberSignature Language="VB.NET" Value="Public Property Boundary As String" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Boundary : string with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Boundary { get; set; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Boundary" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Boundary As StringSegment" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Boundary : Microsoft.Extensions.Primitives.StringSegment with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Boundary" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.String</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the boundary parameter. Returns <see cref="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
            if there is no boundary.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Charset { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Charset { Microsoft::Extensions::Primitives::StringSegment get(); void set(Microsoft::Extensions::Primitives::StringSegment value); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As String" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Charset : string with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Charset { get; set; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Charset" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As StringSegment" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Charset : Microsoft.Extensions.Primitives.StringSegment with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.String</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the charset parameter. Returns <see cref="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
            if there is no charset.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ Copy();" />
      <MemberSignature Language="C#" Value="public Microsoft.Net.Http.Headers.MediaTypeHeaderValue Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Net.Http.Headers.MediaTypeHeaderValue Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="mediaTypeHeaderValue.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Performs a deep copy of this object and all of it's NameValueHeaderValue sub components,
            while avoiding the cost of re-validating the components.
            </summary>
        <returns>A deep copy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsReadOnly">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ CopyAsReadOnly();" />
      <MemberSignature Language="C#" Value="public Microsoft.Net.Http.Headers.MediaTypeHeaderValue CopyAsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Net.Http.Headers.MediaTypeHeaderValue CopyAsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.CopyAsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyAsReadOnly () As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="member this.CopyAsReadOnly : unit -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="mediaTypeHeaderValue.CopyAsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Performs a deep copy of this object and all of it's NameValueHeaderValue sub components,
            while avoiding the cost of re-validating the components. This copy is read-only.
            </summary>
        <returns>A deep, read-only, copy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Encoding" />
      <MemberSignature Language="C#" Value="public System.Text.Encoding? Encoding { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the Encoding parameter. Setting the Encoding will set
            the <see cref="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset" /> to <see cref="P:System.Text.Encoding.WebName" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mediaTypeHeaderValue.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Facets">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Primitives::StringSegment&gt; ^ Facets { System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::Primitives::StringSegment&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Primitives.StringSegment&gt; Facets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt; Facets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Facets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Facets As IEnumerable(Of StringSegment)" />
      <MemberSignature Language="F#" Value="member this.Facets : seq&lt;Microsoft.Extensions.Primitives.StringSegment&gt;" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Facets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get a <see cref="T:System.Collections.Generic.IList`1" /> of facets of the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />. Facets are a
            period separated list of StringSegments in the <see cref="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubTypeWithoutSuffix" />.
            See <see href="https://tools.ietf.org/html/rfc6838#section-3">The RFC documentation on facets.</see></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, the property gives the value:
            <c>{"vnd", "example"}</c></example>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mediaTypeHeaderValue.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> is readonly.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ otherMediaType);" />
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (Microsoft.Net.Http.Headers.MediaTypeHeaderValue otherMediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class Microsoft.Net.Http.Headers.MediaTypeHeaderValue otherMediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.IsSubsetOf(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (otherMediaType As MediaTypeHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSubsetOf : Microsoft.Net.Http.Headers.MediaTypeHeaderValue -&gt; bool" Usage="mediaTypeHeaderValue.IsSubsetOf otherMediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherMediaType" Type="Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />
      </Parameters>
      <Docs>
        <param name="otherMediaType">The <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> to compare.</param>
        <summary>
            Gets a value indicating whether this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> is a subset of
            <paramref name="otherMediaType" />. A "subset" is defined as the same or a more specific media type
            according to the precedence described in <see href="https://www.ietf.org/rfc/rfc2068.txt" /> section 14.1, Accept.
            </summary>
        <returns>
            A value indicating whether this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> is a subset of
            <paramref name="otherMediaType" />.
            </returns>
        <remarks>
            For example "multipart/mixed; boundary=1234" is a subset of "multipart/mixed; boundary=1234",
            "multipart/mixed", "multipart/*", and "*/*" but not "multipart/mixed; boundary=2345" or
            "multipart/message; boundary=1234".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesAllSubTypes">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesAllSubTypes { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool MatchesAllSubTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesAllSubTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesAllSubTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesAllSubTypes : bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> matches all subtypes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/*"</c>, this property is <c>true</c>.
            </example>
        <example>
            For the media type <c>"application/json"</c>, this property is <c>false</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="MatchesAllSubTypesWithoutSuffix">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesAllSubTypesWithoutSuffix { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool MatchesAllSubTypesWithoutSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesAllSubTypesWithoutSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypesWithoutSuffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesAllSubTypesWithoutSuffix As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesAllSubTypesWithoutSuffix : bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllSubTypesWithoutSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> matches all subtypes, ignoring any structured syntax suffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/*+json"</c>, this property is <c>true</c>.
            </example>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, this property is <c>false</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="MatchesAllTypes">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesAllTypes { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool MatchesAllTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesAllTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesAllTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesAllTypes : bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesAllTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> matches all types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesMediaType">
      <MemberSignature Language="C#" Value="public bool MatchesMediaType (Microsoft.Extensions.Primitives.StringSegment otherMediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesMediaType(valuetype Microsoft.Extensions.Primitives.StringSegment otherMediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MatchesMediaType(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesMediaType (otherMediaType As StringSegment) As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesMediaType : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="mediaTypeHeaderValue.MatchesMediaType otherMediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherMediaType" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="otherMediaType">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</param>
        <summary>
            Gets a value indicating whether <paramref name="otherMediaType" /> is a subset of
            this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> in terms of type/subType. A "subset" is defined as the same or a more specific media type
            according to the precedence described in <see href="https://www.ietf.org/rfc/rfc2068.txt" /> section 14.1, Accept.
            </summary>
        <returns>
            A value indicating whether <paramref name="otherMediaType" /> is a subset of
            this <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.
            </returns>
        <remarks>
            For example "multipart/mixed" is a subset of "multipart/mixed",
            "multipart/*", and "*/*" but not "multipart/message."
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment MediaType { Microsoft::Extensions::Primitives::StringSegment get(); void set(Microsoft::Extensions::Primitives::StringSegment value); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment MediaType { get; set; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment MediaType" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As StringSegment" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.MediaType : Microsoft.Extensions.Primitives.StringSegment with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.MediaType" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.String</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the media type. Returns <see cref="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
            if there is no media type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/json"</c>, the property gives the value
            <c>"application/json"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::NameValueHeaderValue ^&gt; ^ Parameters { System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::NameValueHeaderValue ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.NameValueHeaderValue&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.NameValueHeaderValue&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IList(Of NameValueHeaderValue)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.NameValueHeaderValue&gt;" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.NameValueHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the media type's parameters. Returns an empty <see cref="T:System.Collections.Generic.IList`1" />
            if there are no parameters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ Parse(Microsoft::Extensions::Primitives::StringSegment input);" />
      <MemberSignature Language="C#" Value="public static Microsoft.Net.Http.Headers.MediaTypeHeaderValue Parse (Microsoft.Extensions.Primitives.StringSegment input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Net.Http.Headers.MediaTypeHeaderValue Parse(valuetype Microsoft.Extensions.Primitives.StringSegment input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As StringSegment) As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="static member Parse : Microsoft.Extensions.Primitives.StringSegment -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="input">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> with the media type.</param>
        <summary>
            Takes a media type and parses it into the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> and its associated parameters.
            </summary>
        <returns>The parsed <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ Parse(System::String ^ input);" />
      <MemberSignature Language="C#" Value="public static Microsoft.Net.Http.Headers.MediaTypeHeaderValue Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Net.Http.Headers.MediaTypeHeaderValue Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Microsoft.Net.Http.Headers.MediaTypeHeaderValue" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^&gt; ^ ParseList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs);" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; ParseList (System.Collections.Generic.IList&lt;string&gt; inputs);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; ParseList(class System.Collections.Generic.IList`1&lt;string&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseList (inputs As IList(Of String)) As IList(Of MediaTypeHeaderValue)" />
      <MemberSignature Language="F#" Value="static member ParseList : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseList inputs" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; ParseList (System.Collections.Generic.IList&lt;string&gt;? inputs);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputs">A list of media types</param>
        <summary>
            Takes an <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.String" /> and parses it into the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> and its associated parameters.
            </summary>
        <returns>The parsed <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseStrictList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^&gt; ^ ParseStrictList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs);" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; ParseStrictList (System.Collections.Generic.IList&lt;string&gt; inputs);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; ParseStrictList(class System.Collections.Generic.IList`1&lt;string&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseStrictList (inputs As IList(Of String)) As IList(Of MediaTypeHeaderValue)" />
      <MemberSignature Language="F#" Value="static member ParseStrictList : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ParseStrictList inputs" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; ParseStrictList (System.Collections.Generic.IList&lt;string&gt;? inputs);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputs">A list of media types</param>
        <summary>
            Takes an <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.String" /> and parses it into the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> and its associated parameters.
            Throws if there is invalid data in a string.
            </summary>
        <returns>The parsed <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quality">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; Quality { Nullable&lt;double&gt; get(); void set(Nullable&lt;double&gt; value); };" />
      <MemberSignature Language="C#" Value="public double? Quality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Quality" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality" />
      <MemberSignature Language="VB.NET" Value="Public Property Quality As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Quality : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Quality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the quality parameter. Returns null
            if there is no quality.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubType { System::String ^ get(); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment SubType { Microsoft::Extensions::Primitives::StringSegment get(); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public string SubType { get; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubType" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubType As String" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.SubType : string" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment SubType { get; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment SubType" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubType As StringSegment" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.SubType : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubType" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.String</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the subtype of the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.
            </summary>
        <value>To be added.</value>
        <remarks>See <see href="https://tools.ietf.org/html/rfc6838#section-4.2" /> for more details on the subtype.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, the property gives the value
            <c>"vnd.example+json"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="SubTypeWithoutSuffix">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment SubTypeWithoutSuffix { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment SubTypeWithoutSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment SubTypeWithoutSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubTypeWithoutSuffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubTypeWithoutSuffix As StringSegment" />
      <MemberSignature Language="F#" Value="member this.SubTypeWithoutSuffix : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.SubTypeWithoutSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets subtype of the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />, excluding any structured syntax suffix. Returns <see cref="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
            if there is no subtype without suffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, the property gives the value
            <c>"vnd.example"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="Suffix">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Suffix { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Suffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Suffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Suffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Suffix As StringSegment" />
      <MemberSignature Language="F#" Value="member this.Suffix : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Suffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the structured syntax suffix of the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> if it has one.
            See <see href="https://tools.ietf.org/html/rfc6838#section-4.8">The RFC documentation on structured syntaxes.</see></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, the property gives the value
            <c>"json"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mediaTypeHeaderValue.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Microsoft::Extensions::Primitives::StringSegment input, [Runtime::InteropServices::Out] Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ % parsedValue);" />
      <MemberSignature Language="C#" Value="public static bool TryParse (Microsoft.Extensions.Primitives.StringSegment input, out Microsoft.Net.Http.Headers.MediaTypeHeaderValue parsedValue);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype Microsoft.Extensions.Primitives.StringSegment input, [out] class Microsoft.Net.Http.Headers.MediaTypeHeaderValue&amp; parsedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Net.Http.Headers.MediaTypeHeaderValue@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As StringSegment, ByRef parsedValue As MediaTypeHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : Microsoft.Extensions.Primitives.StringSegment * MediaTypeHeaderValue -&gt; bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse (input, parsedValue)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (Microsoft.Extensions.Primitives.StringSegment input, out Microsoft.Net.Http.Headers.MediaTypeHeaderValue? parsedValue);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="parsedValue" Type="Microsoft.Net.Http.Headers.MediaTypeHeaderValue" RefType="out" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="input">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> with the media type. The media type constructed here must not have an y</param>
        <param name="parsedValue">The parsed <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /></param>
        <summary>
            Takes a media type, which can include parameters, and parses it into the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> and its associated parameters.
            </summary>
        <returns>True if the value was successfully parsed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ % parsedValue);" />
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Microsoft.Net.Http.Headers.MediaTypeHeaderValue parsedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class Microsoft.Net.Http.Headers.MediaTypeHeaderValue&amp; parsedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef parsedValue As MediaTypeHeaderValue) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : string * MediaTypeHeaderValue -&gt; bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParse (input, parsedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="parsedValue" Type="Microsoft.Net.Http.Headers.MediaTypeHeaderValue" RefType="out" Index="1" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="parsedValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^&gt; ^ % parsedValues);" />
      <MemberSignature Language="C#" Value="public static bool TryParseList (System.Collections.Generic.IList&lt;string&gt; inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; parsedValues);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseList(class System.Collections.Generic.IList`1&lt;string&gt; inputs, [out] class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;&amp; parsedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseList (inputs As IList(Of String), ByRef parsedValues As IList(Of MediaTypeHeaderValue)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParseList : System.Collections.Generic.IList&lt;string&gt; * IList -&gt; bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseList (inputs, parsedValues)" />
      <MemberSignature Language="C#" Value="public static bool TryParseList (System.Collections.Generic.IList&lt;string&gt;? inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;? parsedValues);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="parsedValues" Type="System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputs">A list of media types</param>
        <param name="parsedValues">The parsed <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.</param>
        <summary>
            Takes an <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.String" /> and parses it into the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> and its associated parameters.
            </summary>
        <returns>True if the value was successfully parsed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseStrictList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseStrictList(System::Collections::Generic::IList&lt;System::String ^&gt; ^ inputs, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^&gt; ^ % parsedValues);" />
      <MemberSignature Language="C#" Value="public static bool TryParseStrictList (System.Collections.Generic.IList&lt;string&gt; inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt; parsedValues);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseStrictList(class System.Collections.Generic.IList`1&lt;string&gt; inputs, [out] class System.Collections.Generic.IList`1&lt;class Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;&amp; parsedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseStrictList (inputs As IList(Of String), ByRef parsedValues As IList(Of MediaTypeHeaderValue)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParseStrictList : System.Collections.Generic.IList&lt;string&gt; * IList -&gt; bool" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.TryParseStrictList (inputs, parsedValues)" />
      <MemberSignature Language="C#" Value="public static bool TryParseStrictList (System.Collections.Generic.IList&lt;string&gt;? inputs, out System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;? parsedValues);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="parsedValues" Type="System.Collections.Generic.IList&lt;Microsoft.Net.Http.Headers.MediaTypeHeaderValue&gt;" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputs">A list of media types</param>
        <param name="parsedValues">The parsed <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.</param>
        <summary>
            Takes an <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.String" /> and parses it into the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" /> and its associated parameters.
            </summary>
        <returns>True if the value was successfully parsed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Type { Microsoft::Extensions::Primitives::StringSegment get(); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public string Type { get; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Type { get; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Type" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As StringSegment" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Type" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Net.Http.Headers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.String</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.
            </summary>
        <value>To be added.</value>
        <remarks>See <see href="https://tools.ietf.org/html/rfc6838#section-4.2" /> for more details on the type.</remarks>
        <example>
            For the media type <c>"application/json"</c>, the property gives the value <c>"application"</c>.
            </example>
      </Docs>
    </Member>
  </Members>
</Type>
