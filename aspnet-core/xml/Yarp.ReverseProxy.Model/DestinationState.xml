<Type Name="DestinationState" FullName="Yarp.ReverseProxy.Model.DestinationState">
  <TypeSignature Language="C#" Value="public sealed class DestinationState : System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;, System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DestinationState extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Model.DestinationState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DestinationState&#xA;Implements IEnumerable(Of DestinationState), IReadOnlyCollection(Of DestinationState), IReadOnlyList(Of DestinationState)" />
  <TypeSignature Language="F#" Value="type DestinationState = class&#xA;    interface IReadOnlyList&lt;DestinationState&gt;&#xA;    interface seq&lt;DestinationState&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;DestinationState&gt;" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Representation of a cluster's destination for use at runtime.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DestinationState (string destinationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string destinationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Model.DestinationState.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (destinationId As String)" />
      <MemberSignature Language="F#" Value="new Yarp.ReverseProxy.Model.DestinationState : string -&gt; Yarp.ReverseProxy.Model.DestinationState" Usage="new Yarp.ReverseProxy.Model.DestinationState destinationId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="destinationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destinationId">To be added.</param>
        <summary>
            Creates a new instance. This constructor is for tests and infrastructure, this type is normally constructed by
            the configuration loading infrastructure.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DestinationState (string destinationId, Yarp.ReverseProxy.Model.DestinationModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string destinationId, class Yarp.ReverseProxy.Model.DestinationModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Model.DestinationState.#ctor(System.String,Yarp.ReverseProxy.Model.DestinationModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (destinationId As String, model As DestinationModel)" />
      <MemberSignature Language="F#" Value="new Yarp.ReverseProxy.Model.DestinationState : string * Yarp.ReverseProxy.Model.DestinationModel -&gt; Yarp.ReverseProxy.Model.DestinationState" Usage="new Yarp.ReverseProxy.Model.DestinationState (destinationId, model)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="destinationId" Type="System.String" Index="0" FrameworkAlternate="yarp-2.1;yarp-2.2" />
        <Parameter Name="model" Type="Yarp.ReverseProxy.Model.DestinationModel" Index="1" FrameworkAlternate="yarp-2.1;yarp-2.2" />
      </Parameters>
      <Docs>
        <param name="destinationId">To be added.</param>
        <param name="model">To be added.</param>
        <summary>
            Constructor overload to additionally initialize the <see cref="T:Yarp.ReverseProxy.Model.DestinationModel" /> for tests and infrastructure,
            such as updating the <see cref="T:Yarp.ReverseProxy.Model.ReverseProxyFeature" /> via <see cref="T:Microsoft.AspNetCore.Http.HttpContextFeaturesExtensions" /></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="model" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentRequestCount">
      <MemberSignature Language="C#" Value="public int ConcurrentRequestCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConcurrentRequestCount" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Model.DestinationState.ConcurrentRequestCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ConcurrentRequestCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ConcurrentRequestCount : int with get, set" Usage="Yarp.ReverseProxy.Model.DestinationState.ConcurrentRequestCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Keeps track of the total number of concurrent requests on this endpoint.
            The setter should only be used for testing purposes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationId">
      <MemberSignature Language="C#" Value="public string DestinationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationId" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Model.DestinationState.DestinationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationId As String" />
      <MemberSignature Language="F#" Value="member this.DestinationId : string" Usage="Yarp.ReverseProxy.Model.DestinationState.DestinationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The destination's unique id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Health">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Model.DestinationHealthState Health { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Yarp.ReverseProxy.Model.DestinationHealthState Health" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Model.DestinationState.Health" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Health As DestinationHealthState" />
      <MemberSignature Language="F#" Value="member this.Health : Yarp.ReverseProxy.Model.DestinationHealthState" Usage="Yarp.ReverseProxy.Model.DestinationState.Health" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Model.DestinationHealthState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Mutable health state for this destination.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Model.DestinationModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Yarp.ReverseProxy.Model.DestinationModel Model" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Model.DestinationState.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As DestinationModel" />
      <MemberSignature Language="F#" Value="member this.Model : Yarp.ReverseProxy.Model.DestinationModel" Usage="Yarp.ReverseProxy.Model.DestinationState.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Model.DestinationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A snapshot of the current configuration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Yarp.ReverseProxy.Model.DestinationState&gt; IEnumerable&lt;DestinationState&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt; System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Model.DestinationState.System#Collections#Generic#IEnumerable&lt;Yarp#ReverseProxy#Model#DestinationState&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of DestinationState) Implements IEnumerable(Of DestinationState).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Yarp.ReverseProxy.Model.DestinationState&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Yarp.ReverseProxy.Model.DestinationState&gt;" Usage="destinationState.System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Yarp.ReverseProxy.Model.DestinationState&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Model.DestinationState.System#Collections#Generic#IReadOnlyCollection&lt;Yarp#ReverseProxy#Model#DestinationState&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements IReadOnlyCollection(Of DestinationState).Count" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Count : int" Usage="System.Collections.Generic.IReadOnlyCollection&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Item">
      <MemberSignature Language="C#" Value="Yarp.ReverseProxy.Model.DestinationState System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Yarp.ReverseProxy.Model.DestinationState System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Model.DestinationState.System#Collections#Generic#IReadOnlyList&lt;Yarp#ReverseProxy#Model#DestinationState&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As DestinationState Implements IReadOnlyList(Of DestinationState).Item" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Item(int) : Yarp.ReverseProxy.Model.DestinationState" Usage="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Model.DestinationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Model.DestinationState.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="destinationState.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
