<Type Name="RequestTransformContext" FullName="Yarp.ReverseProxy.Transforms.RequestTransformContext">
  <TypeSignature Language="C#" Value="public class RequestTransformContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestTransformContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.RequestTransformContext" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestTransformContext" />
  <TypeSignature Language="F#" Value="type RequestTransformContext = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Transform state for use with <see cref="T:Yarp.ReverseProxy.Transforms.RequestTransform" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestTransformContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.RequestTransformContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.CancellationToken" /> indicating that the request is being aborted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationPrefix">
      <MemberSignature Language="C#" Value="public string DestinationPrefix { get; init; }" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationPrefix" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.DestinationPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationPrefix As String" />
      <MemberSignature Language="F#" Value="member this.DestinationPrefix : string with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.DestinationPrefix" />
      <MemberSignature Language="C#" Value="public string DestinationPrefix { get; set; }" FrameworkAlternate="yarp-2.1;yarp-2.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The URI prefix for the proxy request. This includes the scheme and host and can optionally include a
            port and path base. The 'Path' and 'Query' properties will be appended to this after the transforms have run.
            Changing this value can have side effects on load balancing and health checks.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersCopied">
      <MemberSignature Language="C#" Value="public bool HeadersCopied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersCopied" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.HeadersCopied" />
      <MemberSignature Language="VB.NET" Value="Public Property HeadersCopied As Boolean" />
      <MemberSignature Language="F#" Value="member this.HeadersCopied : bool with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.HeadersCopied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets if the request headers have been copied from the HttpRequest to the HttpRequestMessage and HttpContent.
            Transforms use this when searching for the current value of a header they should operate on.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpContext">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.HttpContext HttpContext { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.HttpContext HttpContext" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.HttpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpContext As HttpContext" />
      <MemberSignature Language="F#" Value="member this.HttpContext : Microsoft.AspNetCore.Http.HttpContext with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.HttpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The current request context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.PathString Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Http.PathString Path" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PathString" />
      <MemberSignature Language="F#" Value="member this.Path : Microsoft.AspNetCore.Http.PathString with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.PathString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to use for the proxy request.
            </summary>
        <value>To be added.</value>
        <remarks>
            This will be prefixed by any PathBase specified for the destination server.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyRequest">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpRequestMessage ProxyRequest { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpRequestMessage ProxyRequest" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.ProxyRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyRequest As HttpRequestMessage" />
      <MemberSignature Language="F#" Value="member this.ProxyRequest : System.Net.Http.HttpRequestMessage with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.ProxyRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpRequestMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The outgoing proxy request. All field are initialized except for the 'RequestUri' and optionally headers.
            If no value is provided then the 'RequestUri' will be initialized using the updated 'DestinationPrefix',
            'Path', and 'Query' properties after the transforms have run. The headers will be copied later when
            applying header transforms.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Transforms.QueryTransformContext Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Yarp.ReverseProxy.Transforms.QueryTransformContext Query" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Transforms.RequestTransformContext.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As QueryTransformContext" />
      <MemberSignature Language="F#" Value="member this.Query : Yarp.ReverseProxy.Transforms.QueryTransformContext with get, set" Usage="Yarp.ReverseProxy.Transforms.RequestTransformContext.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.QueryTransformContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The query used for the proxy request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
