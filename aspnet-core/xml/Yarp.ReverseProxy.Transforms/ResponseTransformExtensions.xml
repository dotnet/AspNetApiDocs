<Type Name="ResponseTransformExtensions" FullName="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions">
  <TypeSignature Language="C#" Value="public static class ResponseTransformExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResponseTransformExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResponseTransformExtensions" />
  <TypeSignature Language="F#" Value="type ResponseTransformExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions for adding response header and trailer transforms.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddResponseHeader">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseHeader (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, string value, bool append = true, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseHeader(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, string value, bool append, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseHeader(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,System.String,System.Boolean,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseHeader (context As TransformBuilderContext, headerName As String, value As String, Optional append As Boolean = true, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseHeader : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * string * bool * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseHeader (context, headerName, value, append, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="value">To be added.</param>
        <param name="append">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Adds the transform which will append or set the response header.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseHeaderRemove">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseHeaderRemove (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseHeaderRemove(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseHeaderRemove(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseHeaderRemove (context As TransformBuilderContext, headerName As String, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseHeaderRemove : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseHeaderRemove (context, headerName, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Adds the transform which will remove the response header.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseHeadersAllowed">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseHeadersAllowed (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, params string[] allowedHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseHeadersAllowed(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string[] allowedHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseHeadersAllowed(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseHeadersAllowed (context As TransformBuilderContext, ParamArray allowedHeaders As String()) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseHeadersAllowed : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string[] -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseHeadersAllowed (context, allowedHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="allowedHeaders" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="allowedHeaders">To be added.</param>
        <summary>
            Adds the transform which will only copy the allowed response headers. Other transforms
            that modify or append to existing headers may be affected if not included in the allow list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseTrailer">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailer (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, string value, bool append = true, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailer(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, string value, bool append, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseTrailer(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,System.String,System.Boolean,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseTrailer (context As TransformBuilderContext, headerName As String, value As String, Optional append As Boolean = true, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseTrailer : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * string * bool * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseTrailer (context, headerName, value, append, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="value">To be added.</param>
        <param name="append">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Adds the transform which will append or set the response trailer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseTrailerRemove">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailerRemove (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailerRemove(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string headerName, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseTrailerRemove(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseTrailerRemove (context As TransformBuilderContext, headerName As String, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseTrailerRemove : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseTrailerRemove (context, headerName, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Adds the transform which will remove the response trailer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseTrailersAllowed">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailersAllowed (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, params string[] allowedHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailersAllowed(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string[] allowedHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseTrailersAllowed(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseTrailersAllowed (context As TransformBuilderContext, ParamArray allowedHeaders As String()) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseTrailersAllowed : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string[] -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.AddResponseTrailersAllowed (context, allowedHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="allowedHeaders" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="allowedHeaders">To be added.</param>
        <summary>
            Adds the transform which will only copy the allowed response trailers. Other transforms
            that modify or append to existing trailers may be affected if not included in the allow list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformCopyResponseHeaders">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformCopyResponseHeaders (this Yarp.ReverseProxy.Configuration.RouteConfig route, bool copy = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformCopyResponseHeaders(class Yarp.ReverseProxy.Configuration.RouteConfig route, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformCopyResponseHeaders(Yarp.ReverseProxy.Configuration.RouteConfig,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformCopyResponseHeaders (route As RouteConfig, Optional copy As Boolean = true) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformCopyResponseHeaders : Yarp.ReverseProxy.Configuration.RouteConfig * bool -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformCopyResponseHeaders (route, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="copy">To be added.</param>
        <summary>
            Clones the route and adds the transform which will enable or suppress copying response headers to the client response.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformCopyResponseTrailers">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformCopyResponseTrailers (this Yarp.ReverseProxy.Configuration.RouteConfig route, bool copy = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformCopyResponseTrailers(class Yarp.ReverseProxy.Configuration.RouteConfig route, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformCopyResponseTrailers(Yarp.ReverseProxy.Configuration.RouteConfig,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformCopyResponseTrailers (route As RouteConfig, Optional copy As Boolean = true) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformCopyResponseTrailers : Yarp.ReverseProxy.Configuration.RouteConfig * bool -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformCopyResponseTrailers (route, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="copy">To be added.</param>
        <summary>
            Clones the route and adds the transform which will enable or suppress copying response trailers to the client response.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformResponseHeader">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseHeader (this Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, string value, bool append = true, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseHeader(class Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, string value, bool append, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseHeader(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,System.String,System.Boolean,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformResponseHeader (route As RouteConfig, headerName As String, value As String, Optional append As Boolean = true, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformResponseHeader : Yarp.ReverseProxy.Configuration.RouteConfig * string * string * bool * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseHeader (route, headerName, value, append, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="value">To be added.</param>
        <param name="append">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Clones the route and adds the transform which will append or set the response header.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformResponseHeaderRemove">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseHeaderRemove (this Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseHeaderRemove(class Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseHeaderRemove(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformResponseHeaderRemove (route As RouteConfig, headerName As String, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformResponseHeaderRemove : Yarp.ReverseProxy.Configuration.RouteConfig * string * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseHeaderRemove (route, headerName, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Clones the route and adds the transform which will remove the response header.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformResponseHeadersAllowed">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseHeadersAllowed (this Yarp.ReverseProxy.Configuration.RouteConfig route, params string[] allowedHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseHeadersAllowed(class Yarp.ReverseProxy.Configuration.RouteConfig route, string[] allowedHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseHeadersAllowed(Yarp.ReverseProxy.Configuration.RouteConfig,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformResponseHeadersAllowed (route As RouteConfig, ParamArray allowedHeaders As String()) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformResponseHeadersAllowed : Yarp.ReverseProxy.Configuration.RouteConfig * string[] -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseHeadersAllowed (route, allowedHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="allowedHeaders" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="allowedHeaders">To be added.</param>
        <summary>
            Clones the route and adds the transform which will only copy the allowed response headers. Other transforms
            that modify or append to existing headers may be affected if not included in the allow list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformResponseTrailer">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseTrailer (this Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, string value, bool append = true, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseTrailer(class Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, string value, bool append, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseTrailer(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,System.String,System.Boolean,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformResponseTrailer (route As RouteConfig, headerName As String, value As String, Optional append As Boolean = true, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformResponseTrailer : Yarp.ReverseProxy.Configuration.RouteConfig * string * string * bool * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseTrailer (route, headerName, value, append, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="value">To be added.</param>
        <param name="append">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Clones the route and adds the transform which will append or set the response trailer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformResponseTrailerRemove">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseTrailerRemove (this Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, Yarp.ReverseProxy.Transforms.ResponseCondition condition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseTrailerRemove(class Yarp.ReverseProxy.Configuration.RouteConfig route, string headerName, valuetype Yarp.ReverseProxy.Transforms.ResponseCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseTrailerRemove(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,Yarp.ReverseProxy.Transforms.ResponseCondition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformResponseTrailerRemove (route As RouteConfig, headerName As String, Optional condition As ResponseCondition = Yarp.ReverseProxy.Transforms.ResponseCondition.Success) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformResponseTrailerRemove : Yarp.ReverseProxy.Configuration.RouteConfig * string * Yarp.ReverseProxy.Transforms.ResponseCondition -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseTrailerRemove (route, headerName, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="condition" Type="Yarp.ReverseProxy.Transforms.ResponseCondition" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="condition">To be added.</param>
        <summary>
            Clones the route and adds the transform which will remove the response trailer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformResponseTrailersAllowed">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseTrailersAllowed (this Yarp.ReverseProxy.Configuration.RouteConfig route, params string[] allowedHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformResponseTrailersAllowed(class Yarp.ReverseProxy.Configuration.RouteConfig route, string[] allowedHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseTrailersAllowed(Yarp.ReverseProxy.Configuration.RouteConfig,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformResponseTrailersAllowed (route As RouteConfig, ParamArray allowedHeaders As String()) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformResponseTrailersAllowed : Yarp.ReverseProxy.Configuration.RouteConfig * string[] -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.ResponseTransformExtensions.WithTransformResponseTrailersAllowed (route, allowedHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="allowedHeaders" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="allowedHeaders">To be added.</param>
        <summary>
            Clones the route and adds the transform which will only copy the allowed response trailers. Other transforms
            that modify or append to existing trailers may be affected if not included in the allow list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
