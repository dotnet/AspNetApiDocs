<Type Name="HttpMethodTransformExtensions" FullName="Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions">
  <TypeSignature Language="C#" Value="public static class HttpMethodTransformExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpMethodTransformExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpMethodTransformExtensions" />
  <TypeSignature Language="F#" Value="type HttpMethodTransformExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions for modifying the request method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpMethodChange">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddHttpMethodChange (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string fromHttpMethod, string toHttpMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddHttpMethodChange(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string fromHttpMethod, string toHttpMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions.AddHttpMethodChange(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMethodChange (context As TransformBuilderContext, fromHttpMethod As String, toHttpMethod As String) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddHttpMethodChange : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * string -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions.AddHttpMethodChange (context, fromHttpMethod, toHttpMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="fromHttpMethod" Type="System.String" />
        <Parameter Name="toHttpMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="fromHttpMethod">To be added.</param>
        <param name="toHttpMethod">To be added.</param>
        <summary>
            Adds the transform that will replace the HTTP method if it matches.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformHttpMethodChange">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformHttpMethodChange (this Yarp.ReverseProxy.Configuration.RouteConfig route, string fromHttpMethod, string toHttpMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformHttpMethodChange(class Yarp.ReverseProxy.Configuration.RouteConfig route, string fromHttpMethod, string toHttpMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions.WithTransformHttpMethodChange(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformHttpMethodChange (route As RouteConfig, fromHttpMethod As String, toHttpMethod As String) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformHttpMethodChange : Yarp.ReverseProxy.Configuration.RouteConfig * string * string -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions.WithTransformHttpMethodChange (route, fromHttpMethod, toHttpMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="fromHttpMethod" Type="System.String" />
        <Parameter Name="toHttpMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="fromHttpMethod">To be added.</param>
        <param name="toHttpMethod">To be added.</param>
        <summary>
            Clones the route and adds the transform that will replace the HTTP method if it matches.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
