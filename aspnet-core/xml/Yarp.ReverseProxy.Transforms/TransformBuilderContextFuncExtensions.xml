<Type Name="TransformBuilderContextFuncExtensions" FullName="Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions">
  <TypeSignature Language="C#" Value="public static class TransformBuilderContextFuncExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransformBuilderContextFuncExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TransformBuilderContextFuncExtensions" />
  <TypeSignature Language="F#" Value="type TransformBuilderContextFuncExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRequestTransform">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddRequestTransform (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, Func&lt;Yarp.ReverseProxy.Transforms.RequestTransformContext,System.Threading.Tasks.ValueTask&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddRequestTransform(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, class System.Func`2&lt;class Yarp.ReverseProxy.Transforms.RequestTransformContext, valuetype System.Threading.Tasks.ValueTask&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions.AddRequestTransform(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.Func{Yarp.ReverseProxy.Transforms.RequestTransformContext,System.Threading.Tasks.ValueTask})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRequestTransform (context As TransformBuilderContext, func As Func(Of RequestTransformContext, ValueTask)) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddRequestTransform : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * Func&lt;Yarp.ReverseProxy.Transforms.RequestTransformContext, System.Threading.Tasks.ValueTask&gt; -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions.AddRequestTransform (context, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;Yarp.ReverseProxy.Transforms.RequestTransformContext,System.Threading.Tasks.ValueTask&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="func">To be added.</param>
        <summary>
            Adds a transform Func that runs on each request for the given route.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseTrailersTransform">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailersTransform (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, Func&lt;Yarp.ReverseProxy.Transforms.ResponseTrailersTransformContext,System.Threading.Tasks.ValueTask&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTrailersTransform(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, class System.Func`2&lt;class Yarp.ReverseProxy.Transforms.ResponseTrailersTransformContext, valuetype System.Threading.Tasks.ValueTask&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions.AddResponseTrailersTransform(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.Func{Yarp.ReverseProxy.Transforms.ResponseTrailersTransformContext,System.Threading.Tasks.ValueTask})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseTrailersTransform (context As TransformBuilderContext, func As Func(Of ResponseTrailersTransformContext, ValueTask)) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseTrailersTransform : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * Func&lt;Yarp.ReverseProxy.Transforms.ResponseTrailersTransformContext, System.Threading.Tasks.ValueTask&gt; -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions.AddResponseTrailersTransform (context, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;Yarp.ReverseProxy.Transforms.ResponseTrailersTransformContext,System.Threading.Tasks.ValueTask&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="func">To be added.</param>
        <summary>
            Adds a transform Func that runs on each response for the given route.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResponseTransform">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTransform (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, Func&lt;Yarp.ReverseProxy.Transforms.ResponseTransformContext,System.Threading.Tasks.ValueTask&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddResponseTransform(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, class System.Func`2&lt;class Yarp.ReverseProxy.Transforms.ResponseTransformContext, valuetype System.Threading.Tasks.ValueTask&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions.AddResponseTransform(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.Func{Yarp.ReverseProxy.Transforms.ResponseTransformContext,System.Threading.Tasks.ValueTask})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddResponseTransform (context As TransformBuilderContext, func As Func(Of ResponseTransformContext, ValueTask)) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddResponseTransform : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * Func&lt;Yarp.ReverseProxy.Transforms.ResponseTransformContext, System.Threading.Tasks.ValueTask&gt; -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions.AddResponseTransform (context, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;Yarp.ReverseProxy.Transforms.ResponseTransformContext,System.Threading.Tasks.ValueTask&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="func">To be added.</param>
        <summary>
            Adds a transform Func that runs on each response for the given route.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
