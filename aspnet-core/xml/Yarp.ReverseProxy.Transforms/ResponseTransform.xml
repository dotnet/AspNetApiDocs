<Type Name="ResponseTransform" FullName="Yarp.ReverseProxy.Transforms.ResponseTransform">
  <TypeSignature Language="C#" Value="public abstract class ResponseTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResponseTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.ResponseTransform" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResponseTransform" />
  <TypeSignature Language="F#" Value="type ResponseTransform = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Transforms for responses.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResponseTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask ApplyAsync (Yarp.ReverseProxy.Transforms.ResponseTransformContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask ApplyAsync(class Yarp.ReverseProxy.Transforms.ResponseTransformContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransform.ApplyAsync(Yarp.ReverseProxy.Transforms.ResponseTransformContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ApplyAsync (context As ResponseTransformContext) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member ApplyAsync : Yarp.ReverseProxy.Transforms.ResponseTransformContext -&gt; System.Threading.Tasks.ValueTask" Usage="responseTransform.ApplyAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.ResponseTransformContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Transforms the given response. The status and headers will have (optionally) already been
            copied to the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse" /> and any changes should be made there.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="public static void SetHeader (Yarp.ReverseProxy.Transforms.ResponseTransformContext context, string headerName, Microsoft.Extensions.Primitives.StringValues values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHeader(class Yarp.ReverseProxy.Transforms.ResponseTransformContext context, string headerName, valuetype Microsoft.Extensions.Primitives.StringValues values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransform.SetHeader(Yarp.ReverseProxy.Transforms.ResponseTransformContext,System.String,Microsoft.Extensions.Primitives.StringValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetHeader (context As ResponseTransformContext, headerName As String, values As StringValues)" />
      <MemberSignature Language="F#" Value="static member SetHeader : Yarp.ReverseProxy.Transforms.ResponseTransformContext * string * Microsoft.Extensions.Primitives.StringValues -&gt; unit" Usage="Yarp.ReverseProxy.Transforms.ResponseTransform.SetHeader (context, headerName, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.ResponseTransformContext" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="values" Type="Microsoft.Extensions.Primitives.StringValues" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="headerName">To be added.</param>
        <param name="values">To be added.</param>
        <summary>
            Sets the given header on the HttpResponse.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeHeader">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Primitives.StringValues TakeHeader (Yarp.ReverseProxy.Transforms.ResponseTransformContext context, string headerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Extensions.Primitives.StringValues TakeHeader(class Yarp.ReverseProxy.Transforms.ResponseTransformContext context, string headerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.ResponseTransform.TakeHeader(Yarp.ReverseProxy.Transforms.ResponseTransformContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TakeHeader (context As ResponseTransformContext, headerName As String) As StringValues" />
      <MemberSignature Language="F#" Value="static member TakeHeader : Yarp.ReverseProxy.Transforms.ResponseTransformContext * string -&gt; Microsoft.Extensions.Primitives.StringValues" Usage="Yarp.ReverseProxy.Transforms.ResponseTransform.TakeHeader (context, headerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.ResponseTransformContext" />
        <Parameter Name="headerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The transform context.</param>
        <param name="headerName">The name of the header to take.</param>
        <summary>
            Removes and returns the current header value by first checking the HttpResponse
            and falling back to the value from HttpResponseMessage or HttpContent only if
            <see cref="P:Yarp.ReverseProxy.Transforms.ResponseTransformContext.HeadersCopied" /> is not set.
            This ordering allows multiple transforms to mutate the same header.
            </summary>
        <returns>The response header value, or StringValues.Empty if none.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
