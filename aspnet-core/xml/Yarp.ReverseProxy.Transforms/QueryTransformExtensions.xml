<Type Name="QueryTransformExtensions" FullName="Yarp.ReverseProxy.Transforms.QueryTransformExtensions">
  <TypeSignature Language="C#" Value="public static class QueryTransformExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit QueryTransformExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.QueryTransformExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module QueryTransformExtensions" />
  <TypeSignature Language="F#" Value="type QueryTransformExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions for adding query transforms.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddQueryRemoveKey">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddQueryRemoveKey (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string queryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddQueryRemoveKey(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string queryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.QueryTransformExtensions.AddQueryRemoveKey(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddQueryRemoveKey (context As TransformBuilderContext, queryKey As String) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddQueryRemoveKey : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.QueryTransformExtensions.AddQueryRemoveKey (context, queryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="queryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="queryKey">To be added.</param>
        <summary>
            Adds the transform that will remove the given query key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryRouteValue">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddQueryRouteValue (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string queryKey, string routeValueKey, bool append = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddQueryRouteValue(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string queryKey, string routeValueKey, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.QueryTransformExtensions.AddQueryRouteValue(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddQueryRouteValue (context As TransformBuilderContext, queryKey As String, routeValueKey As String, Optional append As Boolean = true) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddQueryRouteValue : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * string * bool -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.QueryTransformExtensions.AddQueryRouteValue (context, queryKey, routeValueKey, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="queryKey" Type="System.String" />
        <Parameter Name="routeValueKey" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="queryKey">To be added.</param>
        <param name="routeValueKey">To be added.</param>
        <param name="append">To be added.</param>
        <summary>
            Adds the transform that will append or set the query parameter from a route value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryValue">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddQueryValue (this Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string queryKey, string value, bool append = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext AddQueryValue(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context, string queryKey, string value, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.QueryTransformExtensions.AddQueryValue(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddQueryValue (context As TransformBuilderContext, queryKey As String, value As String, Optional append As Boolean = true) As TransformBuilderContext" />
      <MemberSignature Language="F#" Value="static member AddQueryValue : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext * string * string * bool -&gt; Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" Usage="Yarp.ReverseProxy.Transforms.QueryTransformExtensions.AddQueryValue (context, queryKey, value, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" RefType="this" />
        <Parameter Name="queryKey" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="queryKey">To be added.</param>
        <param name="value">To be added.</param>
        <param name="append">To be added.</param>
        <summary>
            Adds the transform that will append or set the query parameter from the given value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformQueryRemoveKey">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformQueryRemoveKey (this Yarp.ReverseProxy.Configuration.RouteConfig route, string queryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformQueryRemoveKey(class Yarp.ReverseProxy.Configuration.RouteConfig route, string queryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.QueryTransformExtensions.WithTransformQueryRemoveKey(Yarp.ReverseProxy.Configuration.RouteConfig,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformQueryRemoveKey (route As RouteConfig, queryKey As String) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformQueryRemoveKey : Yarp.ReverseProxy.Configuration.RouteConfig * string -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.QueryTransformExtensions.WithTransformQueryRemoveKey (route, queryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="queryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="queryKey">To be added.</param>
        <summary>
            Clones the route and adds the transform that will remove the given query key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformQueryRouteValue">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformQueryRouteValue (this Yarp.ReverseProxy.Configuration.RouteConfig route, string queryKey, string routeValueKey, bool append = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformQueryRouteValue(class Yarp.ReverseProxy.Configuration.RouteConfig route, string queryKey, string routeValueKey, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.QueryTransformExtensions.WithTransformQueryRouteValue(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformQueryRouteValue (route As RouteConfig, queryKey As String, routeValueKey As String, Optional append As Boolean = true) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformQueryRouteValue : Yarp.ReverseProxy.Configuration.RouteConfig * string * string * bool -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.QueryTransformExtensions.WithTransformQueryRouteValue (route, queryKey, routeValueKey, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="queryKey" Type="System.String" />
        <Parameter Name="routeValueKey" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="queryKey">To be added.</param>
        <param name="routeValueKey">To be added.</param>
        <param name="append">To be added.</param>
        <summary>
            Clones the route and adds the transform that will append or set the query parameter from a route value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTransformQueryValue">
      <MemberSignature Language="C#" Value="public static Yarp.ReverseProxy.Configuration.RouteConfig WithTransformQueryValue (this Yarp.ReverseProxy.Configuration.RouteConfig route, string queryKey, string value, bool append = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Yarp.ReverseProxy.Configuration.RouteConfig WithTransformQueryValue(class Yarp.ReverseProxy.Configuration.RouteConfig route, string queryKey, string value, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.QueryTransformExtensions.WithTransformQueryValue(Yarp.ReverseProxy.Configuration.RouteConfig,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTransformQueryValue (route As RouteConfig, queryKey As String, value As String, Optional append As Boolean = true) As RouteConfig" />
      <MemberSignature Language="F#" Value="static member WithTransformQueryValue : Yarp.ReverseProxy.Configuration.RouteConfig * string * string * bool -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="Yarp.ReverseProxy.Transforms.QueryTransformExtensions.WithTransformQueryValue (route, queryKey, value, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" RefType="this" />
        <Parameter Name="queryKey" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="queryKey">To be added.</param>
        <param name="value">To be added.</param>
        <param name="append">To be added.</param>
        <summary>
            Clones the route and adds the transform that will append or set the query parameter from the given value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
