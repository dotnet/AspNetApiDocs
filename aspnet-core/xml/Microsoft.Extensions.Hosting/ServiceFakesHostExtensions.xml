<Type Name="ServiceFakesHostExtensions" FullName="Microsoft.Extensions.Hosting.ServiceFakesHostExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceFakesHostExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceFakesHostExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Hosting.ServiceFakesHostExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceFakesHostExtensions" />
  <TypeSignature Language="F#" Value="type ServiceFakesHostExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods supporting Kestrel server unit testing scenarios.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateClient">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpClient CreateClient (this Microsoft.Extensions.Hosting.IHost host, System.Net.Http.HttpMessageHandler? handler = default, Func&lt;Uri,bool&gt;? addressFilter = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpClient CreateClient(class Microsoft.Extensions.Hosting.IHost host, class System.Net.Http.HttpMessageHandler handler, class System.Func`2&lt;class System.Uri, bool&gt; addressFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.ServiceFakesHostExtensions.CreateClient(Microsoft.Extensions.Hosting.IHost,System.Net.Http.HttpMessageHandler,System.Func{System.Uri,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateClient (host As IHost, Optional handler As HttpMessageHandler = Nothing, Optional addressFilter As Func(Of Uri, Boolean) = Nothing) As HttpClient" />
      <MemberSignature Language="F#" Value="static member CreateClient : Microsoft.Extensions.Hosting.IHost * System.Net.Http.HttpMessageHandler * Func&lt;Uri, bool&gt; -&gt; System.Net.Http.HttpClient" Usage="Microsoft.Extensions.Hosting.ServiceFakesHostExtensions.CreateClient (host, handler, addressFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.Extensions.Hosting.IHost" RefType="this" />
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="addressFilter" Type="System.Func&lt;System.Uri,System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="host">An <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.</param>
        <param name="handler">The inner <see cref="T:System.Net.Http.HttpClientHandler" />.</param>
        <param name="addressFilter">Selects what address should be used. If null, takes the first available address.</param>
        <summary>
            Creates an <see cref="T:System.Net.Http.HttpClient" /> to call the hosted application.
            </summary>
        <returns>An <see cref="T:System.Net.Http.HttpClient" /> configured to call the hosted application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListenUris">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Uri&gt; GetListenUris (this Microsoft.Extensions.Hosting.IHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; GetListenUris(class Microsoft.Extensions.Hosting.IHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Hosting.ServiceFakesHostExtensions.GetListenUris(Microsoft.Extensions.Hosting.IHost)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetListenUris (host As IHost) As IEnumerable(Of Uri)" />
      <MemberSignature Language="F#" Value="static member GetListenUris : Microsoft.Extensions.Hosting.IHost -&gt; seq&lt;Uri&gt;" Usage="Microsoft.Extensions.Hosting.ServiceFakesHostExtensions.GetListenUris host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.Extensions.Hosting.IHost" RefType="this" />
      </Parameters>
      <Docs>
        <param name="host">An <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.</param>
        <summary>
            Gets the first available URI the server listens to that passes the filter.
            </summary>
        <returns>A <see cref="T:System.Uri" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
