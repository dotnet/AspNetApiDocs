<Type Name="LazyAssemblyLoader" FullName="Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader">
  <TypeSignature Language="C++ CLI" Value="public ref class LazyAssemblyLoader sealed" />
  <TypeSignature Language="C#" Value="public sealed class LazyAssemblyLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LazyAssemblyLoader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LazyAssemblyLoader" />
  <TypeSignature Language="F#" Value="type LazyAssemblyLoader = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.9.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.5.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Provides a service for loading assemblies at runtime in a browser context.
            
             Supports finding pre-loaded assemblies in a server or pre-rendering context.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyAssemblyLoader(Microsoft::JSInterop::IJSRuntime ^ jsRuntime);" />
      <MemberSignature Language="C#" Value="public LazyAssemblyLoader (Microsoft.JSInterop.IJSRuntime jsRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.JSInterop.IJSRuntime jsRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader.#ctor(Microsoft.JSInterop.IJSRuntime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsRuntime As IJSRuntime)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader : Microsoft.JSInterop.IJSRuntime -&gt; Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader" Usage="new Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader jsRuntime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly</AssemblyName>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsRuntime" Type="Microsoft.JSInterop.IJSRuntime" />
      </Parameters>
      <Docs>
        <param name="jsRuntime">The <see cref="T:Microsoft.JSInterop.IJSRuntime" />.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAssembliesAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^&gt; ^ LoadAssembliesAsync(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ assembliesToLoad);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;&gt; LoadAssembliesAsync (System.Collections.Generic.IEnumerable&lt;string&gt; assembliesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt;&gt; LoadAssembliesAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; assembliesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader.LoadAssembliesAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAssembliesAsync (assembliesToLoad As IEnumerable(Of String)) As Task(Of IEnumerable(Of Assembly))" />
      <MemberSignature Language="F#" Value="member this.LoadAssembliesAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;System.Reflection.Assembly&gt;&gt;" Usage="lazyAssemblyLoader.LoadAssembliesAsync assembliesToLoad" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly</AssemblyName>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Types and members the loaded assemblies depend on might be removed")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Types and members the loaded assemblies depend on might be removed")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembliesToLoad" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assembliesToLoad">The names of the assemblies to load (e.g. "MyAssembly.dll")</param>
        <summary>
            In a browser context, calling this method will fetch the assemblies requested
            via a network call and load them into the runtime. In a server or pre-rendered
            context, this method will look for the assemblies already loaded in the runtime
            and return them.
            </summary>
        <returns>A list of the loaded <see cref="T:System.Reflection.Assembly" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
