<Type Name="W3CLoggerOptions" FullName="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions">
  <TypeSignature Language="C#" Value="public sealed class W3CLoggerOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit W3CLoggerOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class W3CLoggerOptions" />
  <TypeSignature Language="F#" Value="type W3CLoggerOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for the <see cref="T:Microsoft.AspNetCore.HttpLogging.W3CLogger" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public W3CLoggerOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; AdditionalRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; AdditionalRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.AdditionalRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalRequestHeaders As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.AdditionalRequestHeaders : System.Collections.Generic.ISet&lt;string&gt;" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.AdditionalRequestHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of additional request header values to log.
            <p>
            Request headers can contain authentication tokens,
            or private information which may have regulatory concerns
            under GDPR and other laws. Arbitrary request headers
            should not be logged unless logs are secure and
            access controlled and the privacy impact assessed.
            </p></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a string representing the prefix of the file name used to store the logging information.
            The current date plus a file number (in the format {YYYYMMDD.X} will be appended to the given value.
            Defaults to <c>w3clog-</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSizeLimit">
      <MemberSignature Language="C#" Value="public int? FileSizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; FileSizeLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.FileSizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property FileSizeLimit As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.FileSizeLimit : Nullable&lt;int&gt; with get, set" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.FileSizeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a strictly positive value representing the maximum log size in bytes or null for no limit.
            Once the log is full, no more messages will be appended.
            Defaults to <c>10MiB</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushInterval">
      <MemberSignature Language="C#" Value="public TimeSpan FlushInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan FlushInterval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.FlushInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property FlushInterval As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.FlushInterval : TimeSpan with get, set" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.FlushInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the period after which logs will be flushed to the store.
            Defaults to 1 second.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDirectory">
      <MemberSignature Language="C#" Value="public string LogDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.LogDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property LogDirectory As String" />
      <MemberSignature Language="F#" Value="member this.LogDirectory : string with get, set" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.LogDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a string representing the directory where the log file will be written to
            Defaults to <c>./logs/</c> relative to the app directory (ContentRoot).
            If a full path is given, that full path will be used. If a relative path is given,
            the full path will be that path relative to ContentRoot.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggingFields">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.HttpLogging.W3CLoggingFields LoggingFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.HttpLogging.W3CLoggingFields LoggingFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.LoggingFields" />
      <MemberSignature Language="VB.NET" Value="Public Property LoggingFields As W3CLoggingFields" />
      <MemberSignature Language="F#" Value="member this.LoggingFields : Microsoft.AspNetCore.HttpLogging.W3CLoggingFields with get, set" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.LoggingFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.HttpLogging.W3CLoggingFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fields to log. Defaults to logging request and response properties and headers,
            plus date/time info and server name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetainedFileCountLimit">
      <MemberSignature Language="C#" Value="public int? RetainedFileCountLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; RetainedFileCountLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.RetainedFileCountLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RetainedFileCountLimit As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.RetainedFileCountLimit : Nullable&lt;int&gt; with get, set" Usage="Microsoft.AspNetCore.HttpLogging.W3CLoggerOptions.RetainedFileCountLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HttpLogging</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a strictly positive value representing the maximum retained file count.
            Defaults to <c>4</c>.
            Must be between 1 and 10,000, inclusive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
