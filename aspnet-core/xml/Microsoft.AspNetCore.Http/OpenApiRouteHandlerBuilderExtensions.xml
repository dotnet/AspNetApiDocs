<Type Name="OpenApiRouteHandlerBuilderExtensions" FullName="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class OpenApiRouteHandlerBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit OpenApiRouteHandlerBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module OpenApiRouteHandlerBuilderExtensions" />
  <TypeSignature Language="F#" Value="type OpenApiRouteHandlerBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for adding <see cref="P:Microsoft.AspNetCore.Http.Endpoint.Metadata" /> that is
            meant to be consumed by OpenAPI libraries.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accepts">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, Type requestType, string contentType, params string[] additionalContentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, class System.Type requestType, string contentType, string[] additionalContentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Type,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Accepts (builder As RouteHandlerBuilder, requestType As Type, contentType As String, ParamArray additionalContentTypes As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member Accepts : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * Type * string * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts (builder, requestType, contentType, additionalContentTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="requestType" Type="System.Type" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="additionalContentTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="requestType">The type of the request body.</param>
        <param name="contentType">The request content type that the endpoint accepts.</param>
        <param name="additionalContentTypes">The list of additional request content types that the endpoint accepts.</param>
        <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Http.Metadata.IAcceptsMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepts">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, Type requestType, bool isOptional, string contentType, params string[] additionalContentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, class System.Type requestType, bool isOptional, string contentType, string[] additionalContentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Type,System.Boolean,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Accepts (builder As RouteHandlerBuilder, requestType As Type, isOptional As Boolean, contentType As String, ParamArray additionalContentTypes As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member Accepts : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * Type * bool * string * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts (builder, requestType, isOptional, contentType, additionalContentTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="requestType" Type="System.Type" />
        <Parameter Name="isOptional" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="additionalContentTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="requestType">The type of the request body.</param>
        <param name="isOptional">Sets a value that determines if the request body is optional.</param>
        <param name="contentType">The request content type that the endpoint accepts.</param>
        <param name="additionalContentTypes">The list of additional request content types that the endpoint accepts.</param>
        <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Http.Metadata.IAcceptsMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepts&lt;TRequest&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts&lt;TRequest&gt; (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, string contentType, params string[] additionalContentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts&lt;TRequest&gt;(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, string contentType, string[] additionalContentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts``1(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Accepts(Of TRequest) (builder As RouteHandlerBuilder, contentType As String, ParamArray additionalContentTypes As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member Accepts : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * string * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts (builder, contentType, additionalContentTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRequest" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="additionalContentTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRequest">The type of the request body.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="contentType">The request content type that the endpoint accepts.</param>
        <param name="additionalContentTypes">The list of additional request content types that the endpoint accepts.</param>
        <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Http.Metadata.IAcceptsMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepts&lt;TRequest&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts&lt;TRequest&gt; (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, bool isOptional, string contentType, params string[] additionalContentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder Accepts&lt;TRequest&gt;(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, bool isOptional, string contentType, string[] additionalContentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts``1(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Boolean,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Accepts(Of TRequest) (builder As RouteHandlerBuilder, isOptional As Boolean, contentType As String, ParamArray additionalContentTypes As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member Accepts : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * bool * string * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Accepts (builder, isOptional, contentType, additionalContentTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRequest" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="isOptional" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="additionalContentTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRequest">The type of the request body.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="isOptional">Sets a value that determines if the request body is optional.</param>
        <param name="contentType">The request content type that the endpoint accepts.</param>
        <param name="additionalContentTypes">The list of additional request content types that the endpoint accepts.</param>
        <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Http.Metadata.IAcceptsMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeFromDescription">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder ExcludeFromDescription (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder ExcludeFromDescription(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ExcludeFromDescription(Microsoft.AspNetCore.Builder.RouteHandlerBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExcludeFromDescription (builder As RouteHandlerBuilder) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member ExcludeFromDescription : Microsoft.AspNetCore.Builder.RouteHandlerBuilder -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ExcludeFromDescription builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Routing.IExcludeFromDescriptionMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeFromDescription&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder ExcludeFromDescription&lt;TBuilder&gt; (this TBuilder builder) where TBuilder : Microsoft.AspNetCore.Builder.IEndpointConventionBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder ExcludeFromDescription&lt;(class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder) TBuilder&gt;(!!TBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ExcludeFromDescription``1(``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExcludeFromDescription(Of TBuilder As IEndpointConventionBuilder) (builder As TBuilder) As TBuilder" />
      <MemberSignature Language="F#" Value="static member ExcludeFromDescription : 'Builder -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ExcludeFromDescription builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" />.</param>
        <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Routing.IExcludeFromDescriptionMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Produces">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder Produces (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int statusCode, Type? responseType = default, string? contentType = default, params string[] additionalContentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder Produces(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int32 statusCode, class System.Type responseType, string contentType, string[] additionalContentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Produces(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Int32,System.Type,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Produces (builder As RouteHandlerBuilder, statusCode As Integer, Optional responseType As Type = Nothing, Optional contentType As String = Nothing, ParamArray additionalContentTypes As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member Produces : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * int * Type * string * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Produces (builder, statusCode, responseType, contentType, additionalContentTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="responseType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContentTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="statusCode">The response status code.</param>
        <param name="responseType">The type of the response. Defaults to null.</param>
        <param name="contentType">The response content type. Defaults to "application/json" if responseType is not null, otherwise defaults to null.</param>
        <param name="additionalContentTypes">Additional response content types the endpoint produces for the supplied status code.</param>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Produces&lt;TResponse&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder Produces&lt;TResponse&gt; (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int statusCode = 200, string? contentType = default, params string[] additionalContentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder Produces&lt;TResponse&gt;(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int32 statusCode, string contentType, string[] additionalContentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Produces``1(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Int32,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Produces(Of TResponse) (builder As RouteHandlerBuilder, Optional statusCode As Integer = 200, Optional contentType As String = Nothing, ParamArray additionalContentTypes As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member Produces : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * int * string * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.Produces (builder, statusCode, contentType, additionalContentTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResponse">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="contentType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="additionalContentTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResponse">The type of the response.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="statusCode">The response status code. Defaults to <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK" />.</param>
        <param name="contentType">The response content type. Defaults to "application/json".</param>
        <param name="additionalContentTypes">Additional response content types the endpoint produces for the supplied status code.</param>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProducesProblem">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder ProducesProblem (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int statusCode, string? contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder ProducesProblem(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int32 statusCode, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesProblem(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ProducesProblem (builder As RouteHandlerBuilder, statusCode As Integer, Optional contentType As String = Nothing) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member ProducesProblem : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * int * string -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesProblem (builder, statusCode, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="contentType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="statusCode">The response status code.</param>
        <param name="contentType">The response content type. Defaults to "application/problem+json".</param>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata" /> with a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> type
            to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProducesProblem&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder ProducesProblem&lt;TBuilder&gt; (this TBuilder builder, int statusCode, string? contentType = default) where TBuilder : Microsoft.AspNetCore.Builder.IEndpointConventionBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder ProducesProblem&lt;(class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder) TBuilder&gt;(!!TBuilder builder, int32 statusCode, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesProblem``1(``0,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ProducesProblem(Of TBuilder As IEndpointConventionBuilder) (builder As TBuilder, statusCode As Integer, Optional contentType As String = Nothing) As TBuilder" />
      <MemberSignature Language="F#" Value="static member ProducesProblem : 'Builder * int * string -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesProblem (builder, statusCode, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-9.0" />
        <Parameter Name="statusCode" Type="System.Int32" Index="1" FrameworkAlternate="aspnetcore-9.0" />
        <Parameter Name="contentType" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" />.</param>
        <param name="statusCode">The response status code.</param>
        <param name="contentType">The response content type. Defaults to "application/problem+json".</param>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata" /> with a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> type
            to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProducesValidationProblem">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder ProducesValidationProblem (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int statusCode = 400, string? contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder ProducesValidationProblem(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, int32 statusCode, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesValidationProblem(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ProducesValidationProblem (builder As RouteHandlerBuilder, Optional statusCode As Integer = 400, Optional contentType As String = Nothing) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member ProducesValidationProblem : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * int * string -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesValidationProblem (builder, statusCode, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="contentType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="statusCode">The response status code. Defaults to <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest" />.</param>
        <param name="contentType">The response content type. Defaults to "application/problem+json".</param>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata" /> with a <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails" /> type
            to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProducesValidationProblem&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder ProducesValidationProblem&lt;TBuilder&gt; (this TBuilder builder, int statusCode = 400, string? contentType = default) where TBuilder : Microsoft.AspNetCore.Builder.IEndpointConventionBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder ProducesValidationProblem&lt;(class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder) TBuilder&gt;(!!TBuilder builder, int32 statusCode, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesValidationProblem``1(``0,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ProducesValidationProblem(Of TBuilder As IEndpointConventionBuilder) (builder As TBuilder, Optional statusCode As Integer = 400, Optional contentType As String = Nothing) As TBuilder" />
      <MemberSignature Language="F#" Value="static member ProducesValidationProblem : 'Builder * int * string -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.ProducesValidationProblem (builder, statusCode, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-9.0" />
        <Parameter Name="statusCode" Type="System.Int32" Index="1" FrameworkAlternate="aspnetcore-9.0" />
        <Parameter Name="contentType" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" />.</param>
        <param name="statusCode">The response status code. Defaults to <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest" />.</param>
        <param name="contentType">The response content type. Defaults to "application/problem+json".</param>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata" /> with a <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails" /> type
            to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDescription&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder WithDescription&lt;TBuilder&gt; (this TBuilder builder, string description) where TBuilder : Microsoft.AspNetCore.Builder.IEndpointConventionBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder WithDescription&lt;(class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder) TBuilder&gt;(!!TBuilder builder, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithDescription``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithDescription(Of TBuilder As IEndpointConventionBuilder) (builder As TBuilder, description As String) As TBuilder" />
      <MemberSignature Language="F#" Value="static member WithDescription : 'Builder * string -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithDescription (builder, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" />.</param>
        <param name="description">A string representing a detailed description of the endpoint.</param>
        <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Http.Metadata.IEndpointDescriptionMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSummary&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder WithSummary&lt;TBuilder&gt; (this TBuilder builder, string summary) where TBuilder : Microsoft.AspNetCore.Builder.IEndpointConventionBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder WithSummary&lt;(class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder) TBuilder&gt;(!!TBuilder builder, string summary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithSummary``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSummary(Of TBuilder As IEndpointConventionBuilder) (builder As TBuilder, summary As String) As TBuilder" />
      <MemberSignature Language="F#" Value="static member WithSummary : 'Builder * string -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithSummary (builder, summary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="summary" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" />.</param>
        <param name="summary">A string representing a brief description of the endpoint.</param>
        <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Http.Metadata.IEndpointSummaryMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTags">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.RouteHandlerBuilder WithTags (this Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, params string[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.RouteHandlerBuilder WithTags(class Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder, string[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithTags(Microsoft.AspNetCore.Builder.RouteHandlerBuilder,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTags (builder As RouteHandlerBuilder, ParamArray tags As String()) As RouteHandlerBuilder" />
      <MemberSignature Language="F#" Value="static member WithTags : Microsoft.AspNetCore.Builder.RouteHandlerBuilder * string[] -&gt; Microsoft.AspNetCore.Builder.RouteHandlerBuilder" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithTags (builder, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.RouteHandlerBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.RouteHandlerBuilder" RefType="this" />
        <Parameter Name="tags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" />.</param>
        <param name="tags">A collection of tags to be associated with the endpoint.</param>
        <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Http.Metadata.ITagsMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>
            The OpenAPI specification supports a tags classification to categorize operations
            into related groups. These tags are typically included in the generated specification
            and are typically used to group operations by tags in the UI.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTags&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder WithTags&lt;TBuilder&gt; (this TBuilder builder, params string[] tags) where TBuilder : Microsoft.AspNetCore.Builder.IEndpointConventionBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder WithTags&lt;(class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder) TBuilder&gt;(!!TBuilder builder, string[] tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithTags``1(``0,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithTags(Of TBuilder As IEndpointConventionBuilder) (builder As TBuilder, ParamArray tags As String()) As TBuilder" />
      <MemberSignature Language="F#" Value="static member WithTags : 'Builder * string[] -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)" Usage="Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions.WithTags (builder, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</InterfaceName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="tags" Type="System.String[]" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" />.</param>
        <param name="tags">A collection of tags to be associated with the endpoint.</param>
        <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Http.Metadata.ITagsMetadata" /> to <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" /> for all endpoints
            produced by <paramref name="builder" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>
            The OpenAPI specification supports a tags classification to categorize operations
            into related groups. These tags are typically included in the generated specification
            and are typically used to group operations by tags in the UI.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
