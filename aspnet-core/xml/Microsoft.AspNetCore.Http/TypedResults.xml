<Type Name="TypedResults" FullName="Microsoft.AspNetCore.Http.TypedResults">
  <TypeSignature Language="C#" Value="public static class TypedResults" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TypedResults extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.TypedResults" />
  <TypeSignature Language="VB.NET" Value="Public Class TypedResults" />
  <TypeSignature Language="F#" Value="type TypedResults = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A typed factory for <see cref="T:Microsoft.AspNetCore.Http.IResult" /> types in <see cref="N:Microsoft.AspNetCore.Http.HttpResults" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Accepted Accepted (string? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Accepted Accepted(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Accepted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Accepted (uri As String) As Accepted" />
      <MemberSignature Language="F#" Value="static member Accepted : string -&gt; Microsoft.AspNetCore.Http.HttpResults.Accepted" Usage="Microsoft.AspNetCore.Http.TypedResults.Accepted uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Accepted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Accepted Accepted (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Accepted Accepted(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Accepted(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Accepted (uri As Uri) As Accepted" />
      <MemberSignature Language="F#" Value="static member Accepted : Uri -&gt; Microsoft.AspNetCore.Http.HttpResults.Accepted" Usage="Microsoft.AspNetCore.Http.TypedResults.Accepted uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Accepted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Accepted&lt;TValue&gt; Accepted&lt;TValue&gt; (string? uri, TValue? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Accepted`1&lt;!!TValue&gt; Accepted&lt;TValue&gt;(string uri, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Accepted``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Accepted(Of TValue) (uri As String, value As TValue) As Accepted(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Accepted : string * 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.Accepted&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Accepted (uri, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Accepted&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Accepted&lt;TValue&gt; Accepted&lt;TValue&gt; (Uri uri, TValue? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Accepted`1&lt;!!TValue&gt; Accepted&lt;TValue&gt;(class System.Uri uri, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Accepted``1(System.Uri,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Accepted(Of TValue) (uri As Uri, value As TValue) As Accepted(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Accepted : Uri * 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.Accepted&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Accepted (uri, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Accepted&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="TValue">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute AcceptedAtRoute (string? routeName, Microsoft.AspNetCore.Routing.RouteValueDictionary? routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute AcceptedAtRoute(string routeName, class Microsoft.AspNetCore.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcceptedAtRoute (routeName As String, routeValues As RouteValueDictionary) As AcceptedAtRoute" />
      <MemberSignature Language="F#" Value="static member AcceptedAtRoute : string * Microsoft.AspNetCore.Routing.RouteValueDictionary -&gt; Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute" Usage="Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeValues" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute AcceptedAtRoute (string? routeName = default, object? routeValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute AcceptedAtRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcceptedAtRoute (Optional routeName As String = Nothing, Optional routeValues As Object = Nothing) As AcceptedAtRoute" />
      <MemberSignature Language="F#" Value="static member AcceptedAtRoute : string * obj -&gt; Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute" Usage="Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute&lt;TValue&gt; AcceptedAtRoute&lt;TValue&gt; (TValue? value, string? routeName, Microsoft.AspNetCore.Routing.RouteValueDictionary? routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1&lt;!!TValue&gt; AcceptedAtRoute&lt;TValue&gt;(!!TValue value, string routeName, class Microsoft.AspNetCore.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute``1(``0,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcceptedAtRoute(Of TValue) (value As TValue, routeName As String, routeValues As RouteValueDictionary) As AcceptedAtRoute(Of TValue)" />
      <MemberSignature Language="F#" Value="static member AcceptedAtRoute : 'Value * string * Microsoft.AspNetCore.Routing.RouteValueDictionary -&gt; Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute (value, routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute&lt;TValue&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeName" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeValues" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" Index="2" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute&lt;TValue&gt; AcceptedAtRoute&lt;TValue&gt; (TValue? value, string? routeName = default, object? routeValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1&lt;!!TValue&gt; AcceptedAtRoute&lt;TValue&gt;(!!TValue value, string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute``1(``0,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcceptedAtRoute(Of TValue) (value As TValue, Optional routeName As String = Nothing, Optional routeValues As Object = Nothing) As AcceptedAtRoute(Of TValue)" />
      <MemberSignature Language="F#" Value="static member AcceptedAtRoute : 'Value * string * obj -&gt; Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute (value, routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadRequest">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.BadRequest BadRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.BadRequest BadRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.BadRequest" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadRequest () As BadRequest" />
      <MemberSignature Language="F#" Value="static member BadRequest : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.BadRequest" Usage="Microsoft.AspNetCore.Http.TypedResults.BadRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.BadRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadRequest&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.BadRequest&lt;TValue&gt; BadRequest&lt;TValue&gt; (TValue? error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.BadRequest`1&lt;!!TValue&gt; BadRequest&lt;TValue&gt;(!!TValue error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.BadRequest``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadRequest(Of TValue) (error As TValue) As BadRequest(Of TValue)" />
      <MemberSignature Language="F#" Value="static member BadRequest : 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.BadRequest&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.BadRequest error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.BadRequest&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="error" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of error object that will be JSON serialized to the response body.</typeparam>
        <param name="error">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bytes">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult Bytes (byte[] contents, string? contentType = default, string? fileDownloadName = default, bool enableRangeProcessing = false, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult Bytes(unsigned int8[] contents, string contentType, string fileDownloadName, bool enableRangeProcessing, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Bytes(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Bytes (contents As Byte(), Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional enableRangeProcessing As Boolean = false, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing) As FileContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Bytes : byte[] * string * string * bool * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue -&gt; Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Bytes (contents, contentType, fileDownloadName, enableRangeProcessing, lastModified, entityTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contents" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
      </Parameters>
      <Docs>
        <param name="contents">The file contents.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> associated with the file.</param>
        <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para><para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.File(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)" />.</para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bytes">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult Bytes (ReadOnlyMemory&lt;byte&gt; contents, string? contentType = default, string? fileDownloadName = default, bool enableRangeProcessing = false, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult Bytes(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; contents, string contentType, string fileDownloadName, bool enableRangeProcessing, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Bytes(System.ReadOnlyMemory{System.Byte},System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Bytes (contents As ReadOnlyMemory(Of Byte), Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional enableRangeProcessing As Boolean = false, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing) As FileContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Bytes : ReadOnlyMemory&lt;byte&gt; * string * string * bool * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue -&gt; Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Bytes (contents, contentType, fileDownloadName, enableRangeProcessing, lastModified, entityTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contents" Type="System.ReadOnlyMemory&lt;System.Byte&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
      </Parameters>
      <Docs>
        <param name="contents">The file contents.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> associated with the file.</param>
        <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult Challenge (Microsoft.AspNetCore.Authentication.AuthenticationProperties? properties = default, System.Collections.Generic.IList&lt;string&gt;? authenticationSchemes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult Challenge(class Microsoft.AspNetCore.Authentication.AuthenticationProperties properties, class System.Collections.Generic.IList`1&lt;string&gt; authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Challenge (Optional properties As AuthenticationProperties = Nothing, Optional authenticationSchemes As IList(Of String) = Nothing) As ChallengeHttpResult" />
      <MemberSignature Language="F#" Value="static member Challenge : Microsoft.AspNetCore.Authentication.AuthenticationProperties * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Challenge (properties, authenticationSchemes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Authentication.AuthenticationProperties">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="authenticationSchemes" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties" /> used to perform the authentication
            challenge.</param>
        <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult" /> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.ChallengeAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            <para>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService" /> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized" /> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden" />
            are among likely status results.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflict">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Conflict Conflict ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Conflict Conflict() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Conflict" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Conflict () As Conflict" />
      <MemberSignature Language="F#" Value="static member Conflict : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.Conflict" Usage="Microsoft.AspNetCore.Http.TypedResults.Conflict " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Conflict" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflict&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Conflict&lt;TValue&gt; Conflict&lt;TValue&gt; (TValue? error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Conflict`1&lt;!!TValue&gt; Conflict&lt;TValue&gt;(!!TValue error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Conflict``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Conflict(Of TValue) (error As TValue) As Conflict(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Conflict : 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.Conflict&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Conflict error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Conflict&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="error" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="error">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Conflict`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Content (string? content, Microsoft.Net.Http.Headers.MediaTypeHeaderValue contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Content(string content, class Microsoft.Net.Http.Headers.MediaTypeHeaderValue contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Content (content As String, contentType As MediaTypeHeaderValue) As ContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Content : string * Microsoft.Net.Http.Headers.MediaTypeHeaderValue -&gt; Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Content (content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <summary>
            Writes the <paramref name="content" /> string to the HTTP response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Content (string? content, string? contentType, System.Text.Encoding? contentEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Content(string content, string contentType, class System.Text.Encoding contentEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Content (content As String, contentType As String, contentEncoding As Encoding) As ContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Content : string * string * System.Text.Encoding -&gt; Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Content (content, contentType, contentEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <param name="contentEncoding">The content encoding.</param>
        <summary>
            Writes the <paramref name="content" /> string to the HTTP response.
            <para>
            This is equivalent to <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding)" />.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" /> object for the response.</returns>
        <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding" /> parameters, then
            the <paramref name="contentEncoding" /> parameter is chosen as the final encoding.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Content (string? content, string? contentType = default, System.Text.Encoding? contentEncoding = default, int? statusCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Content(string content, string contentType, class System.Text.Encoding contentEncoding, valuetype System.Nullable`1&lt;int32&gt; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Content (content As String, Optional contentType As String = Nothing, Optional contentEncoding As Encoding = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing) As ContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Content : string * string * System.Text.Encoding * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Content (content, contentType, contentEncoding, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <param name="contentEncoding">The content encoding.</param>
        <param name="statusCode">The status code to return.</param>
        <summary>
            Writes the <paramref name="content" /> string to the HTTP response.
            <para>
            This is equivalent to <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})" />.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" /> object for the response.</returns>
        <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding" /> parameters, then
            the <paramref name="contentEncoding" /> parameter is chosen as the final encoding.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created Created ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Created Created() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Created" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Created () As Created" />
      <MemberSignature Language="F#" Value="static member Created : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.Created" Usage="Microsoft.AspNetCore.Http.TypedResults.Created " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Created</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created Created (string uri);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Created Created(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Created(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Created (uri As String) As Created" />
      <MemberSignature Language="F#" Value="static member Created : string -&gt; Microsoft.AspNetCore.Http.HttpResults.Created" Usage="Microsoft.AspNetCore.Http.TypedResults.Created uri" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created Created (string? uri);" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Created</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The URI at which the content has been created.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created Created (Uri uri);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Created Created(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Created(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Created (uri As Uri) As Created" />
      <MemberSignature Language="F#" Value="static member Created : Uri -&gt; Microsoft.AspNetCore.Http.HttpResults.Created" Usage="Microsoft.AspNetCore.Http.TypedResults.Created uri" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created Created (Uri? uri);" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Created</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The URI at which the content has been created.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Created&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created&lt;TValue&gt; Created&lt;TValue&gt; (string uri, TValue? value);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Created`1&lt;!!TValue&gt; Created&lt;TValue&gt;(string uri, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Created``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Created(Of TValue) (uri As String, value As TValue) As Created(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Created : string * 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.Created&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Created (uri, value)" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created&lt;TValue&gt; Created&lt;TValue&gt; (string? uri, TValue? value);" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Created&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="uri">The URI at which the content has been created.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Created&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created&lt;TValue&gt; Created&lt;TValue&gt; (Uri uri, TValue? value);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Created`1&lt;!!TValue&gt; Created&lt;TValue&gt;(class System.Uri uri, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Created``1(System.Uri,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Created(Of TValue) (uri As Uri, value As TValue) As Created(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Created : Uri * 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.Created&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Created (uri, value)" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Created&lt;TValue&gt; Created&lt;TValue&gt; (Uri? uri, TValue? value);" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Created&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="uri">The URI at which the content has been created.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute CreatedAtRoute (string? routeName, Microsoft.AspNetCore.Routing.RouteValueDictionary? routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute CreatedAtRoute(string routeName, class Microsoft.AspNetCore.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatedAtRoute (routeName As String, routeValues As RouteValueDictionary) As CreatedAtRoute" />
      <MemberSignature Language="F#" Value="static member CreatedAtRoute : string * Microsoft.AspNetCore.Routing.RouteValueDictionary -&gt; Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute" Usage="Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeValues" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute CreatedAtRoute (string? routeName = default, object? routeValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute CreatedAtRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatedAtRoute (Optional routeName As String = Nothing, Optional routeValues As Object = Nothing) As CreatedAtRoute" />
      <MemberSignature Language="F#" Value="static member CreatedAtRoute : string * obj -&gt; Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute" Usage="Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute&lt;TValue&gt; CreatedAtRoute&lt;TValue&gt; (TValue? value, string? routeName, Microsoft.AspNetCore.Routing.RouteValueDictionary? routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1&lt;!!TValue&gt; CreatedAtRoute&lt;TValue&gt;(!!TValue value, string routeName, class Microsoft.AspNetCore.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute``1(``0,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatedAtRoute(Of TValue) (value As TValue, routeName As String, routeValues As RouteValueDictionary) As CreatedAtRoute(Of TValue)" />
      <MemberSignature Language="F#" Value="static member CreatedAtRoute : 'Value * string * Microsoft.AspNetCore.Routing.RouteValueDictionary -&gt; Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute (value, routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute&lt;TValue&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeName" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeValues" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" Index="2" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute&lt;TValue&gt; CreatedAtRoute&lt;TValue&gt; (TValue? value, string? routeName = default, object? routeValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1&lt;!!TValue&gt; CreatedAtRoute&lt;TValue&gt;(!!TValue value, string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute``1(``0,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatedAtRoute(Of TValue) (value As TValue, Optional routeName As String = Nothing, Optional routeValues As Object = Nothing) As CreatedAtRoute(Of TValue)" />
      <MemberSignature Language="F#" Value="static member CreatedAtRoute : 'Value * string * obj -&gt; Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute (value, routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.EmptyHttpResult Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.AspNetCore.Http.HttpResults.EmptyHttpResult Empty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.TypedResults.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As EmptyHttpResult" />
      <MemberSignature Language="F#" Value="static member Empty : Microsoft.AspNetCore.Http.HttpResults.EmptyHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.EmptyHttpResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Produces an empty result response, that when executed will do nothing.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.IResultExtensions Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.AspNetCore.Http.IResultExtensions Extensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.TypedResults.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Extensions As IResultExtensions" />
      <MemberSignature Language="F#" Value="static member Extensions : Microsoft.AspNetCore.Http.IResultExtensions" Usage="Microsoft.AspNetCore.Http.TypedResults.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.IResultExtensions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides a container for external libraries to extend
            the default `TypedResults` set with their own samples.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult File (byte[] fileContents, string? contentType = default, string? fileDownloadName = default, bool enableRangeProcessing = false, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult File(unsigned int8[] fileContents, string contentType, string fileDownloadName, bool enableRangeProcessing, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.File(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function File (fileContents As Byte(), Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional enableRangeProcessing As Boolean = false, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing) As FileContentHttpResult" />
      <MemberSignature Language="F#" Value="static member File : byte[] * string * string * bool * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue -&gt; Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.File (fileContents, contentType, fileDownloadName, enableRangeProcessing, lastModified, entityTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
      </Parameters>
      <Docs>
        <param name="fileContents">The file contents.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> associated with the file.</param>
        <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para><para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Bytes(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)" />.</para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult File (System.IO.Stream fileStream, string? contentType = default, string? fileDownloadName = default, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default, bool enableRangeProcessing = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult File(class System.IO.Stream fileStream, string contentType, string fileDownloadName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag, bool enableRangeProcessing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function File (fileStream As Stream, Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing, Optional enableRangeProcessing As Boolean = false) As FileStreamHttpResult" />
      <MemberSignature Language="F#" Value="static member File : System.IO.Stream * string * string * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.File (fileStream, contentType, fileDownloadName, lastModified, entityTag, enableRangeProcessing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.Stream">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">The <see cref="T:System.IO.Stream" /> with the contents of the file.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The file name to be used in the <c>Content-Disposition</c> header.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <summary>
            Writes the specified <see cref="T:System.IO.Stream" /> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para><para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult" /> for the response.</returns>
        <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forbid">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult Forbid (Microsoft.AspNetCore.Authentication.AuthenticationProperties? properties = default, System.Collections.Generic.IList&lt;string&gt;? authenticationSchemes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult Forbid(class Microsoft.AspNetCore.Authentication.AuthenticationProperties properties, class System.Collections.Generic.IList`1&lt;string&gt; authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Forbid (Optional properties As AuthenticationProperties = Nothing, Optional authenticationSchemes As IList(Of String) = Nothing) As ForbidHttpResult" />
      <MemberSignature Language="F#" Value="static member Forbid : Microsoft.AspNetCore.Authentication.AuthenticationProperties * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Forbid (properties, authenticationSchemes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Authentication.AuthenticationProperties">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="authenticationSchemes" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties" /> used to perform the authentication
            challenge.</param>
        <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult" /> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.ForbidAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            <para>
            By default, executing this result returns a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden" />. Some authentication schemes, such as cookies,
            will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden" /> to a redirect to show a login page.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult" /> for the response.</returns>
        <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden" /> to
            a redirect to show a login page.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalServerError">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.InternalServerError InternalServerError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.InternalServerError InternalServerError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.InternalServerError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InternalServerError () As InternalServerError" />
      <MemberSignature Language="F#" Value="static member InternalServerError : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.InternalServerError" Usage="Microsoft.AspNetCore.Http.TypedResults.InternalServerError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.InternalServerError</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status500InternalServerError" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.InternalServerError" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalServerError&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.InternalServerError&lt;TValue&gt; InternalServerError&lt;TValue&gt; (TValue? error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.InternalServerError`1&lt;!!TValue&gt; InternalServerError&lt;TValue&gt;(!!TValue error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.InternalServerError``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InternalServerError(Of TValue) (error As TValue) As InternalServerError(Of TValue)" />
      <MemberSignature Language="F#" Value="static member InternalServerError : 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.InternalServerError&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.InternalServerError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.InternalServerError&lt;TValue&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="error" Type="TValue" Index="0" FrameworkAlternate="aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of error object that will be JSON serialized to the response body.</typeparam>
        <param name="error">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status500InternalServerError" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.InternalServerError`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Json&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;TValue&gt; Json&lt;TValue&gt; (TValue? data, System.Text.Json.JsonSerializerOptions? options = default, string? contentType = default, int? statusCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1&lt;!!TValue&gt; Json&lt;TValue&gt;(!!TValue data, class System.Text.Json.JsonSerializerOptions options, string contentType, valuetype System.Nullable`1&lt;int32&gt; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Json``1(``0,System.Text.Json.JsonSerializerOptions,System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Json(Of TValue) (data As TValue, Optional options As JsonSerializerOptions = Nothing, Optional contentType As String = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing) As JsonHttpResult(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Json : 'Value * System.Text.Json.JsonSerializerOptions * string * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Json (data, options, contentType, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="data">The object to write as JSON.</param>
        <param name="options">The serializer options to use when serializing the value.</param>
        <param name="contentType">The content-type to set on the response.</param>
        <param name="statusCode">The status code to set on the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1" /> that serializes the specified <paramref name="data" /> object to JSON.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1" /> that serializes the specified <paramref name="data" />
            as JSON format for the response.</returns>
        <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Json&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;TValue&gt; Json&lt;TValue&gt; (TValue? data, System.Text.Json.Serialization.JsonSerializerContext context, string? contentType = default, int? statusCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1&lt;!!TValue&gt; Json&lt;TValue&gt;(!!TValue data, class System.Text.Json.Serialization.JsonSerializerContext context, string contentType, valuetype System.Nullable`1&lt;int32&gt; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Json``1(``0,System.Text.Json.Serialization.JsonSerializerContext,System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Json(Of TValue) (data As TValue, context As JsonSerializerContext, Optional contentType As String = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing) As JsonHttpResult(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Json : 'Value * System.Text.Json.Serialization.JsonSerializerContext * string * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Json (data, context, contentType, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;TValue&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="TValue" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="context" Type="System.Text.Json.Serialization.JsonSerializerContext" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" Index="3" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="data">The object to write as JSON.</param>
        <param name="context">A metadata provider for serializable types.</param>
        <param name="contentType">The content-type to set on the response.</param>
        <param name="statusCode">The status code to set on the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1" /> that serializes the specified <paramref name="data" /> object to JSON.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1" /> that serializes the specified <paramref name="data" />
            as JSON format for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Json&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;TValue&gt; Json&lt;TValue&gt; (TValue? data, System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;TValue&gt; jsonTypeInfo, string? contentType = default, int? statusCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1&lt;!!TValue&gt; Json&lt;TValue&gt;(!!TValue data, class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!TValue&gt; jsonTypeInfo, string contentType, valuetype System.Nullable`1&lt;int32&gt; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Json``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Json(Of TValue) (data As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue), Optional contentType As String = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing) As JsonHttpResult(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Json : 'Value * System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'Value&gt; * string * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Json (data, jsonTypeInfo, contentType, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult&lt;TValue&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="TValue" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="jsonTypeInfo" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;TValue&gt;" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" Index="3" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="data">The object to write as JSON.</param>
        <param name="jsonTypeInfo">Metadata about the type to convert.</param>
        <param name="contentType">The content-type to set on the response.</param>
        <param name="statusCode">The status code to set on the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1" /> that serializes the specified <paramref name="data" /> object to JSON.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1" /> that serializes the specified <paramref name="data" />
            as JSON format for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalRedirect">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult LocalRedirect (string localUrl, bool permanent = false, bool preserveMethod = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult LocalRedirect(string localUrl, bool permanent, bool preserveMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.LocalRedirect(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LocalRedirect (localUrl As String, Optional permanent As Boolean = false, Optional preserveMethod As Boolean = false) As RedirectHttpResult" />
      <MemberSignature Language="F#" Value="static member LocalRedirect : string * bool * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.LocalRedirect (localUrl, permanent, preserveMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localUrl" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri", new System.Object[] { Mono.Cecil.CustomAttributeArgument })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri", new System.Object[] { Mono.Cecil.CustomAttributeArgument })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="permanent" Type="System.Boolean" />
        <Parameter Name="preserveMethod" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="localUrl">The local URL to redirect to.</param>
        <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        <summary>
            Redirects to the specified <paramref name="localUrl" />.
            <list type="bullet"><item><description>When <paramref name="permanent" /> and <paramref name="preserveMethod" /> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect" /> status code.</description></item><item><description>When <paramref name="preserveMethod" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect" /> status code.</description></item><item><description>When <paramref name="permanent" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently" /> status code.</description></item><item>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found" />.</item></list></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoContent">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.NoContent NoContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.NoContent NoContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.NoContent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoContent () As NoContent" />
      <MemberSignature Language="F#" Value="static member NoContent : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.NoContent" Usage="Microsoft.AspNetCore.Http.TypedResults.NoContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.NoContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status204NoContent" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NoContent" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFound">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.NotFound NotFound ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.NotFound NotFound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.NotFound" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotFound () As NotFound" />
      <MemberSignature Language="F#" Value="static member NotFound : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.NotFound" Usage="Microsoft.AspNetCore.Http.TypedResults.NotFound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.NotFound</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NotFound" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFound&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.NotFound&lt;TValue&gt; NotFound&lt;TValue&gt; (TValue? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.NotFound`1&lt;!!TValue&gt; NotFound&lt;TValue&gt;(!!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.NotFound``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotFound(Of TValue) (value As TValue) As NotFound(Of TValue)" />
      <MemberSignature Language="F#" Value="static member NotFound : 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.NotFound&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.NotFound value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.NotFound&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NotFound`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ok">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Ok Ok ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Ok Ok() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Ok" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ok () As Ok" />
      <MemberSignature Language="F#" Value="static member Ok : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.Ok" Usage="Microsoft.AspNetCore.Http.TypedResults.Ok " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Ok</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Ok" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ok&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Ok&lt;TValue&gt; Ok&lt;TValue&gt; (TValue? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Ok`1&lt;!!TValue&gt; Ok&lt;TValue&gt;(!!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Ok``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ok(Of TValue) (value As TValue) As Ok(Of TValue)" />
      <MemberSignature Language="F#" Value="static member Ok : 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.Ok&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.Ok value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Ok&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="value">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Ok`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalFile">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult PhysicalFile (string path, string? contentType = default, string? fileDownloadName = default, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default, bool enableRangeProcessing = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult PhysicalFile(string path, string contentType, string fileDownloadName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag, bool enableRangeProcessing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PhysicalFile (path As String, Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing, Optional enableRangeProcessing As Boolean = false) As PhysicalFileHttpResult" />
      <MemberSignature Language="F#" Value="static member PhysicalFile : string * string * string * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.PhysicalFile (path, contentType, fileDownloadName, lastModified, entityTag, enableRangeProcessing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path to the file. When not rooted, resolves the path relative to <see cref="P:Microsoft.AspNetCore.Hosting.IWebHostEnvironment.WebRootFileProvider" />.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> associated with the file.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <summary>
            Writes the file at the specified <paramref name="path" /> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Problem">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult Problem (Microsoft.AspNetCore.Mvc.ProblemDetails problemDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult Problem(class Microsoft.AspNetCore.Mvc.ProblemDetails problemDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Problem(Microsoft.AspNetCore.Mvc.ProblemDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Problem (problemDetails As ProblemDetails) As ProblemHttpResult" />
      <MemberSignature Language="F#" Value="static member Problem : Microsoft.AspNetCore.Mvc.ProblemDetails -&gt; Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Problem problemDetails" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="problemDetails" Type="Microsoft.AspNetCore.Mvc.ProblemDetails" />
      </Parameters>
      <Docs>
        <param name="problemDetails">The <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" />  object to produce a response from.</param>
        <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Problem">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult Problem (string? detail = default, string? instance = default, int? statusCode = default, string? title = default, string? type = default, System.Collections.Generic.IDictionary&lt;string,object?&gt;? extensions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult Problem(string detail, string instance, valuetype System.Nullable`1&lt;int32&gt; statusCode, string title, string type, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Problem (Optional detail As String = Nothing, Optional instance As String = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing, Optional title As String = Nothing, Optional type As String = Nothing, Optional extensions As IDictionary(Of String, Object) = Nothing) As ProblemHttpResult" />
      <MemberSignature Language="F#" Value="static member Problem : string * string * Nullable&lt;int&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Problem (detail, instance, statusCode, title, type, extensions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detail" Type="System.String" />
        <Parameter Name="instance" Type="System.String" />
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="extensions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="statusCode">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Status" />.</param>
        <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
        <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
        <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
        <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
        <param name="extensions">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Extensions" />.</param>
        <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult Redirect (string url, bool permanent = false, bool preserveMethod = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult Redirect(string url, bool permanent, bool preserveMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Redirect(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Redirect (url As String, Optional permanent As Boolean = false, Optional preserveMethod As Boolean = false) As RedirectHttpResult" />
      <MemberSignature Language="F#" Value="static member Redirect : string * bool * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Redirect (url, permanent, preserveMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Uri")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Uri")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="permanent" Type="System.Boolean" />
        <Parameter Name="preserveMethod" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">The URL to redirect to.</param>
        <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        <summary>
            Redirects to the specified <paramref name="url" />.
            <list type="bullet"><item><description>When <paramref name="permanent" /> and <paramref name="preserveMethod" /> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect" /> status code.</description></item><item><description>When <paramref name="preserveMethod" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect" /> status code.</description></item><item><description>When <paramref name="permanent" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently" /> status code.</description></item><item>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found" />.</item></list></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult RedirectToRoute (string? routeName, Microsoft.AspNetCore.Routing.RouteValueDictionary? routeValues, bool permanent = false, bool preserveMethod = false, string? fragment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult RedirectToRoute(string routeName, class Microsoft.AspNetCore.Routing.RouteValueDictionary routeValues, bool permanent, bool preserveMethod, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.RedirectToRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedirectToRoute (routeName As String, routeValues As RouteValueDictionary, Optional permanent As Boolean = false, Optional preserveMethod As Boolean = false, Optional fragment As String = Nothing) As RedirectToRouteHttpResult" />
      <MemberSignature Language="F#" Value="static member RedirectToRoute : string * Microsoft.AspNetCore.Routing.RouteValueDictionary * bool * bool * string -&gt; Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.RedirectToRoute (routeName, routeValues, permanent, preserveMethod, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="aspnetcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="routeValues" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="permanent" Type="System.Boolean" Index="2" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="preserveMethod" Type="System.Boolean" Index="3" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="fragment" Type="System.String" Index="4" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeValues">The parameters for a route.</param>
        <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        <param name="fragment">The fragment to add to the URL.</param>
        <summary>
            Redirects to the specified route.
            <list type="bullet"><item><description>When <paramref name="permanent" /> and <paramref name="preserveMethod" /> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect" /> status code.</description></item><item><description>When <paramref name="preserveMethod" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect" /> status code.</description></item><item><description>When <paramref name="permanent" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently" /> status code.</description></item><item><description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found" />.</description></item></list></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult RedirectToRoute (string? routeName = default, object? routeValues = default, bool permanent = false, bool preserveMethod = false, string? fragment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult RedirectToRoute(string routeName, object routeValues, bool permanent, bool preserveMethod, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.RedirectToRoute(System.String,System.Object,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedirectToRoute (Optional routeName As String = Nothing, Optional routeValues As Object = Nothing, Optional permanent As Boolean = false, Optional preserveMethod As Boolean = false, Optional fragment As String = Nothing) As RedirectToRouteHttpResult" />
      <MemberSignature Language="F#" Value="static member RedirectToRoute : string * obj * bool * bool * string -&gt; Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.RedirectToRoute (routeName, routeValues, permanent, preserveMethod, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("This API may perform reflection on supplied parameters which may be trimmed if not referenced directly. Initialize a RouteValueDictionary with route values to avoid this issue.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="permanent" Type="System.Boolean" />
        <Parameter Name="preserveMethod" Type="System.Boolean" />
        <Parameter Name="fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeValues">The parameters for a route.</param>
        <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        <param name="fragment">The fragment to add to the URL.</param>
        <summary>
            Redirects to the specified route.
            <list type="bullet"><item><description>When <paramref name="permanent" /> and <paramref name="preserveMethod" /> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect" /> status code.</description></item><item><description>When <paramref name="preserveMethod" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect" /> status code.</description></item><item><description>When <paramref name="permanent" /> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently" /> status code.</description></item><item><description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found" />.</description></item></list></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult SignIn (System.Security.Claims.ClaimsPrincipal principal, Microsoft.AspNetCore.Authentication.AuthenticationProperties? properties = default, string? authenticationScheme = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult SignIn(class System.Security.Claims.ClaimsPrincipal principal, class Microsoft.AspNetCore.Authentication.AuthenticationProperties properties, string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignIn (principal As ClaimsPrincipal, Optional properties As AuthenticationProperties = Nothing, Optional authenticationScheme As String = Nothing) As SignInHttpResult" />
      <MemberSignature Language="F#" Value="static member SignIn : System.Security.Claims.ClaimsPrincipal * Microsoft.AspNetCore.Authentication.AuthenticationProperties * string -&gt; Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.SignIn (principal, properties, authenticationScheme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Authentication.AuthenticationProperties">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="authenticationScheme" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal" /> containing the user claims.</param>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties" /> used to perform the sign-in operation.</param>
        <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult" /> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.SignInAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult SignOut (Microsoft.AspNetCore.Authentication.AuthenticationProperties? properties = default, System.Collections.Generic.IList&lt;string&gt;? authenticationSchemes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult SignOut(class Microsoft.AspNetCore.Authentication.AuthenticationProperties properties, class System.Collections.Generic.IList`1&lt;string&gt; authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignOut (Optional properties As AuthenticationProperties = Nothing, Optional authenticationSchemes As IList(Of String) = Nothing) As SignOutHttpResult" />
      <MemberSignature Language="F#" Value="static member SignOut : Microsoft.AspNetCore.Authentication.AuthenticationProperties * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.SignOut (properties, authenticationSchemes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Authentication.AuthenticationProperties">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="authenticationSchemes" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties" /> used to perform the sign-out operation.</param>
        <param name="authenticationSchemes">The authentication scheme to use for the sign-out operation.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult" /> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.SignOutAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult StatusCode (int statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult StatusCode(int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.StatusCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StatusCode (statusCode As Integer) As StatusCodeHttpResult" />
      <MemberSignature Language="F#" Value="static member StatusCode : int -&gt; Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.StatusCode statusCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="statusCode">The status code to set on the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult" /> object by specifying a <paramref name="statusCode" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult Stream (Func&lt;System.IO.Stream,System.Threading.Tasks.Task&gt; streamWriterCallback, string? contentType = default, string? fileDownloadName = default, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult Stream(class System.Func`2&lt;class System.IO.Stream, class System.Threading.Tasks.Task&gt; streamWriterCallback, string contentType, string fileDownloadName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.Func{System.IO.Stream,System.Threading.Tasks.Task},System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stream (streamWriterCallback As Func(Of Stream, Task), Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing) As PushStreamHttpResult" />
      <MemberSignature Language="F#" Value="static member Stream : Func&lt;System.IO.Stream, System.Threading.Tasks.Task&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue -&gt; Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Stream (streamWriterCallback, contentType, fileDownloadName, lastModified, entityTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamWriterCallback" Type="System.Func&lt;System.IO.Stream,System.Threading.Tasks.Task&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
      </Parameters>
      <Docs>
        <param name="streamWriterCallback">The callback that allows users to write directly to the response body.</param>
        <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
        <param name="fileDownloadName">The file name to be used in the <c>Content-Disposition</c> header.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
        <summary>
            Allows writing directly to the response body.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult Stream (System.IO.Pipelines.PipeReader pipeReader, string? contentType = default, string? fileDownloadName = default, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default, bool enableRangeProcessing = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult Stream(class System.IO.Pipelines.PipeReader pipeReader, string contentType, string fileDownloadName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag, bool enableRangeProcessing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.IO.Pipelines.PipeReader,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stream (pipeReader As PipeReader, Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing, Optional enableRangeProcessing As Boolean = false) As FileStreamHttpResult" />
      <MemberSignature Language="F#" Value="static member Stream : System.IO.Pipelines.PipeReader * string * string * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Stream (pipeReader, contentType, fileDownloadName, lastModified, entityTag, enableRangeProcessing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeReader" Type="System.IO.Pipelines.PipeReader">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pipeReader">The <see cref="T:System.IO.Pipelines.PipeReader" /> to write to the response.</param>
        <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
        <param name="fileDownloadName">The file name to be used in the <c>Content-Disposition</c> header.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <summary>
            Writes the contents of the specified <see cref="T:System.IO.Pipelines.PipeReader" /> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult" /> for the response.</returns>
        <remarks>
            The <paramref name="pipeReader" /> parameter is completed after the response is sent.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult Stream (System.IO.Stream stream, string? contentType = default, string? fileDownloadName = default, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default, bool enableRangeProcessing = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult Stream(class System.IO.Stream stream, string contentType, string fileDownloadName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag, bool enableRangeProcessing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stream (stream As Stream, Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing, Optional enableRangeProcessing As Boolean = false) As FileStreamHttpResult" />
      <MemberSignature Language="F#" Value="static member Stream : System.IO.Stream * string * string * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Stream (stream, contentType, fileDownloadName, lastModified, entityTag, enableRangeProcessing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">The <see cref="T:System.IO.Stream" /> to write to the response.</param>
        <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
        <param name="fileDownloadName">The file name to be used in the <c>Content-Disposition</c> header.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <summary>
            Writes the specified <see cref="T:System.IO.Stream" /> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para><para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult" /> for the response.</returns>
        <remarks>
            The <paramref name="stream" /> parameter is disposed after the response is sent.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult Text (ReadOnlySpan&lt;byte&gt; utf8Content, string? contentType = default, int? statusCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult Text(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Content, string contentType, valuetype System.Nullable`1&lt;int32&gt; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.ReadOnlySpan{System.Byte},System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Text (utf8Content As ReadOnlySpan(Of Byte), Optional contentType As String = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing) As Utf8ContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Text : ReadOnlySpan&lt;byte&gt; * string * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Text (utf8Content, contentType, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Content" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="contentType" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <param name="statusCode">The status code to return.</param>
        <summary>
            Writes the <paramref name="utf8Content" /> UTF8 text content to the HTTP response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Text (string? content, string? contentType, System.Text.Encoding? contentEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Text(string content, string contentType, class System.Text.Encoding contentEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Text (content As String, contentType As String, contentEncoding As Encoding) As ContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Text : string * string * System.Text.Encoding -&gt; Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Text (content, contentType, contentEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <param name="contentEncoding">The content encoding.</param>
        <summary>
            Writes the <paramref name="content" /> string to the HTTP response.
            <para>
            This is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding)" />.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" /> object for the response.</returns>
        <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding" /> parameters, then
            the <paramref name="contentEncoding" /> parameter is chosen as the final encoding.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Text (string? content, string? contentType = default, System.Text.Encoding? contentEncoding = default, int? statusCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult Text(string content, string contentType, class System.Text.Encoding contentEncoding, valuetype System.Nullable`1&lt;int32&gt; statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Text (content As String, Optional contentType As String = Nothing, Optional contentEncoding As Encoding = Nothing, Optional statusCode As Nullable(Of Integer) = Nothing) As ContentHttpResult" />
      <MemberSignature Language="F#" Value="static member Text : string * string * System.Text.Encoding * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Text (content, contentType, contentEncoding, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
        <Parameter Name="statusCode" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <param name="contentEncoding">The content encoding.</param>
        <param name="statusCode">The status code to return.</param>
        <summary>
            Writes the <paramref name="content" /> string to the HTTP response.
            <para>
            This is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})" />.
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult" /> object for the response.</returns>
        <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding" /> parameters, then
            the <paramref name="contentEncoding" /> parameter is chosen as the final encoding.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unauthorized">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult Unauthorized ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult Unauthorized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.Unauthorized" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unauthorized () As UnauthorizedHttpResult" />
      <MemberSignature Language="F#" Value="static member Unauthorized : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.Unauthorized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprocessableEntity">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity UnprocessableEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity UnprocessableEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.UnprocessableEntity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnprocessableEntity () As UnprocessableEntity" />
      <MemberSignature Language="F#" Value="static member UnprocessableEntity : unit -&gt; Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity" Usage="Microsoft.AspNetCore.Http.TypedResults.UnprocessableEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprocessableEntity&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity&lt;TValue&gt; UnprocessableEntity&lt;TValue&gt; (TValue? error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1&lt;!!TValue&gt; UnprocessableEntity&lt;TValue&gt;(!!TValue error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.UnprocessableEntity``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnprocessableEntity(Of TValue) (error As TValue) As UnprocessableEntity(Of TValue)" />
      <MemberSignature Language="F#" Value="static member UnprocessableEntity : 'Value -&gt; Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.TypedResults.UnprocessableEntity error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="error" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        <param name="error">The value to be included in the HTTP response body.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity" /> response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationProblem">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.ValidationProblem ValidationProblem (System.Collections.Generic.IDictionary&lt;string,string[]&gt; errors, string? detail = default, string? instance = default, string? title = default, string? type = default, System.Collections.Generic.IDictionary&lt;string,object?&gt;? extensions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.ValidationProblem ValidationProblem(class System.Collections.Generic.IDictionary`2&lt;string, string[]&gt; errors, string detail, string instance, string title, string type, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.ValidationProblem(System.Collections.Generic.IDictionary{System.String,System.String[]},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidationProblem (errors As IDictionary(Of String, String()), Optional detail As String = Nothing, Optional instance As String = Nothing, Optional title As String = Nothing, Optional type As String = Nothing, Optional extensions As IDictionary(Of String, Object) = Nothing) As ValidationProblem" />
      <MemberSignature Language="F#" Value="static member ValidationProblem : System.Collections.Generic.IDictionary&lt;string, string[]&gt; * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Microsoft.AspNetCore.Http.HttpResults.ValidationProblem" Usage="Microsoft.AspNetCore.Http.TypedResults.ValidationProblem (errors, detail, instance, title, type, extensions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.ValidationProblem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String[]&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="detail" Type="System.String" />
        <Parameter Name="instance" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="extensions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 2 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="errors">One or more validation errors.</param>
        <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
        <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
        <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />. Defaults to "One or more validation errors occurred."</param>
        <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
        <param name="extensions">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Extensions" />.</param>
        <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest" /> response with an <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails" /> value.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualFile">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult VirtualFile (string path, string? contentType = default, string? fileDownloadName = default, DateTimeOffset? lastModified = default, Microsoft.Net.Http.Headers.EntityTagHeaderValue? entityTag = default, bool enableRangeProcessing = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult VirtualFile(string path, string contentType, string fileDownloadName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class Microsoft.Net.Http.Headers.EntityTagHeaderValue entityTag, bool enableRangeProcessing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.TypedResults.VirtualFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualFile (path As String, Optional contentType As String = Nothing, Optional fileDownloadName As String = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional entityTag As EntityTagHeaderValue = Nothing, Optional enableRangeProcessing As Boolean = false) As VirtualFileHttpResult" />
      <MemberSignature Language="F#" Value="static member VirtualFile : string * string * string * Nullable&lt;DateTimeOffset&gt; * Microsoft.Net.Http.Headers.EntityTagHeaderValue * bool -&gt; Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult" Usage="Microsoft.AspNetCore.Http.TypedResults.VirtualFile (path, contentType, fileDownloadName, lastModified, entityTag, enableRangeProcessing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Results</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="entityTag" Type="Microsoft.Net.Http.Headers.EntityTagHeaderValue" />
        <Parameter Name="enableRangeProcessing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">The path to the file. When not rooted, resolves the path relative to <see cref="P:Microsoft.AspNetCore.Hosting.IWebHostEnvironment.WebRootFileProvider" />.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <param name="lastModified">The <see cref="T:System.DateTimeOffset" /> of when the file was last modified.</param>
        <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue" /> associated with the file.</param>
        <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
        <summary>
            Writes the file at the specified <paramref name="path" /> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent" /> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable" /> if the range is not satisfiable).
            </para></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
