<Type Name="IProblemDetailsService" FullName="Microsoft.AspNetCore.Http.IProblemDetailsService">
  <TypeSignature Language="C#" Value="public interface IProblemDetailsService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProblemDetailsService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.IProblemDetailsService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProblemDetailsService" />
  <TypeSignature Language="F#" Value="type IProblemDetailsService = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Defines a type that provide functionality to
            create a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> response.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;bool&gt; TryWriteAsync (Microsoft.AspNetCore.Http.ProblemDetailsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt; TryWriteAsync(class Microsoft.AspNetCore.Http.ProblemDetailsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.IProblemDetailsService.TryWriteAsync(Microsoft.AspNetCore.Http.ProblemDetailsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryWriteAsync (context As ProblemDetailsContext) As ValueTask(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryWriteAsync : Microsoft.AspNetCore.Http.ProblemDetailsContext -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;&#xA;override this.TryWriteAsync : Microsoft.AspNetCore.Http.ProblemDetailsContext -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;" Usage="iProblemDetailsService.TryWriteAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.ProblemDetailsContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.ProblemDetailsContext" /> associated with the current request/response.</param>
        <summary>
            Try to write a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> response to the current context,
            using the registered <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> services.
            </summary>
        <returns>To be added.</returns>
        <remarks>The <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> registered services
            are processed in sequence and the processing is completed when:
            <list type="bullet"><item><description>One of them reports that the response was written successfully, or.</description></item><item><description>All <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> were executed and none of them was able to write the response successfully.</description></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask WriteAsync (Microsoft.AspNetCore.Http.ProblemDetailsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(class Microsoft.AspNetCore.Http.ProblemDetailsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.IProblemDetailsService.WriteAsync(Microsoft.AspNetCore.Http.ProblemDetailsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (context As ProblemDetailsContext) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : Microsoft.AspNetCore.Http.ProblemDetailsContext -&gt; System.Threading.Tasks.ValueTask" Usage="iProblemDetailsService.WriteAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.ProblemDetailsContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.ProblemDetailsContext" /> associated with the current request/response.</param>
        <summary>
            Write a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> response to the current context,
            using the registered <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> services.
            </summary>
        <returns>To be added.</returns>
        <remarks>The <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> registered services
            are processed in sequence and the processing is completed when:
            <list type="bullet"><item><description>One of them reports that the response was written successfully, or.</description></item><item><description>All <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> were executed and none of them was able to write the response successfully.</description></item></list></remarks>
        <exception cref="T:System.InvalidOperationException">If no <see cref="T:Microsoft.AspNetCore.Http.IProblemDetailsWriter" /> can write to the given context.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
