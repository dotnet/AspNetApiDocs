<Type Name="RequestDelegateFactoryOptions" FullName="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions">
  <TypeSignature Language="C#" Value="public sealed class RequestDelegateFactoryOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RequestDelegateFactoryOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RequestDelegateFactoryOptions" />
  <TypeSignature Language="F#" Value="type RequestDelegateFactoryOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for controlling the behavior of the <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate" /> when created using <see cref="T:Microsoft.AspNetCore.Http.RequestDelegateFactory" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestDelegateFactoryOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableInferBodyFromParameters">
      <MemberSignature Language="C#" Value="public bool DisableInferBodyFromParameters { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableInferBodyFromParameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.DisableInferBodyFromParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableInferBodyFromParameters As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisableInferBodyFromParameters : bool with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.DisableInferBodyFromParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Prevent the <see cref="T:Microsoft.AspNetCore.Http.RequestDelegateFactory" /> from inferring a parameter should be bound from the request body without an attribute that implements <see cref="T:Microsoft.AspNetCore.Http.Metadata.IFromBodyMetadata" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointFilterFactories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Func&lt;Microsoft.AspNetCore.Http.EndpointFilterFactoryContext,Microsoft.AspNetCore.Http.EndpointFilterDelegate,Microsoft.AspNetCore.Http.EndpointFilterDelegate&gt;&gt;? EndpointFilterFactories { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Func`3&lt;class Microsoft.AspNetCore.Http.EndpointFilterFactoryContext, class Microsoft.AspNetCore.Http.EndpointFilterDelegate, class Microsoft.AspNetCore.Http.EndpointFilterDelegate&gt;&gt; EndpointFilterFactories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.EndpointFilterFactories" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointFilterFactories As IReadOnlyList(Of Func(Of EndpointFilterFactoryContext, EndpointFilterDelegate, EndpointFilterDelegate))" />
      <MemberSignature Language="F#" Value="member this.EndpointFilterFactories : System.Collections.Generic.IReadOnlyList&lt;Func&lt;Microsoft.AspNetCore.Http.EndpointFilterFactoryContext, Microsoft.AspNetCore.Http.EndpointFilterDelegate, Microsoft.AspNetCore.Http.EndpointFilterDelegate&gt;&gt; with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.EndpointFilterFactories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Func&lt;Microsoft.AspNetCore.Http.EndpointFilterFactoryContext,Microsoft.AspNetCore.Http.EndpointFilterDelegate,Microsoft.AspNetCore.Http.EndpointFilterDelegate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of filters that must run in the pipeline for a given route handler.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt;? EndpointMetadata { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;object&gt; EndpointMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.EndpointMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointMetadata As IList(Of Object)" />
      <MemberSignature Language="F#" Value="member this.EndpointMetadata : System.Collections.Generic.IList&lt;obj&gt; with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.EndpointMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The mutable initial endpoint metadata to add as part of the creation of the <see cref="P:Microsoft.AspNetCore.Http.RequestDelegateResult.RequestDelegate" />. In most cases,
            this should come from <see cref="P:Microsoft.AspNetCore.Builder.EndpointBuilder.Metadata" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            This metadata will be included in <see cref="P:Microsoft.AspNetCore.Http.RequestDelegateResult.EndpointMetadata" /><b>before</b> most metadata inferred during creation of the
            <see cref="P:Microsoft.AspNetCore.Http.RequestDelegateResult.RequestDelegate" /> and <b>before</b> any metadata provided by types in the delegate signature that implement
            <see cref="T:Microsoft.AspNetCore.Http.Metadata.IEndpointMetadataProvider" /> or <see cref="T:Microsoft.AspNetCore.Http.Metadata.IEndpointParameterMetadataProvider" />. The exception to this general rule is the
            <see cref="T:Microsoft.AspNetCore.Http.Metadata.IAcceptsMetadata" /> that <see cref="M:Microsoft.AspNetCore.Http.RequestDelegateFactory.Create(System.Delegate,Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions)" /> infers automatically
            without any custom metadata providers which instead is inserted at the start to give it lower precedence. Custom metadata providers can choose to
            insert their metadata at the start to give lower precedence, but this is unusual.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteParameterNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt;? RouteParameterNames { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; RouteParameterNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.RouteParameterNames" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteParameterNames As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.RouteParameterNames : seq&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.RouteParameterNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of route parameter names that are specified for this handler.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider? ServiceProvider { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.IServiceProvider" /> instance used to access application services.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnBadRequest">
      <MemberSignature Language="C#" Value="public bool ThrowOnBadRequest { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnBadRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ThrowOnBadRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowOnBadRequest As Boolean" />
      <MemberSignature Language="F#" Value="member this.ThrowOnBadRequest : bool with get, set" Usage="Microsoft.AspNetCore.Http.RequestDelegateFactoryOptions.ThrowOnBadRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls whether the <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate" /> should throw a <see cref="T:Microsoft.AspNetCore.Http.BadHttpRequestException" /> in addition to
            writing a <see cref="F:Microsoft.Extensions.Logging.LogLevel.Debug" /> log when handling invalid requests.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
