<Type Name="EndpointFilterInvocationContext" FullName="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext">
  <TypeSignature Language="C#" Value="public abstract class EndpointFilterInvocationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EndpointFilterInvocationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EndpointFilterInvocationContext" />
  <TypeSignature Language="F#" Value="type EndpointFilterInvocationContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for wrapping the <see cref="P:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.HttpContext" /> and arguments
            provided to a route handler.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EndpointFilterInvocationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;object?&gt; Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;object&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Arguments As IList(Of Object)" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IList&lt;obj&gt;" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of arguments provided in the current request to the filter.
            <remarks>
            This list is not read-only to permit modifying of existing arguments by filters.
            </remarks></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (httpContext As HttpContext) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``1(Microsoft.AspNetCore.Http.HttpContext,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (httpContext As HttpContext, arg As T) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg" Type="T" Index="1" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``2(Microsoft.AspNetCore.Http.HttpContext,``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (httpContext As HttpContext, arg1 As T1, arg2 As T2) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2,T3&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2, T3&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2, !!T3 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``3(Microsoft.AspNetCore.Http.HttpContext,``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (httpContext As HttpContext, arg1 As T1, arg2 As T2, arg3 As T3) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 * 'T3 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg3" Type="T3" Index="3" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2,T3,T4&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2, T3, T4&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2, !!T3 arg3, !!T4 arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``4(Microsoft.AspNetCore.Http.HttpContext,``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (httpContext As HttpContext, arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 * 'T3 * 'T4 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2, arg3, arg4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg3" Type="T3" Index="3" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg4" Type="T4" Index="4" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="arg4">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2,T3,T4,T5&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2, T3, T4, T5&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2, !!T3 arg3, !!T4 arg4, !!T5 arg5) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``5(Microsoft.AspNetCore.Http.HttpContext,``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (httpContext As HttpContext, arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2, arg3, arg4, arg5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg3" Type="T3" Index="3" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg4" Type="T4" Index="4" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg5" Type="T5" Index="5" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="arg4">To be added.</param>
        <param name="arg5">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2,T3,T4,T5,T6&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2, T3, T4, T5, T6&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2, !!T3 arg3, !!T4 arg4, !!T5 arg5, !!T6 arg6) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``6(Microsoft.AspNetCore.Http.HttpContext,``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (httpContext As HttpContext, arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2, arg3, arg4, arg5, arg6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg3" Type="T3" Index="3" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg4" Type="T4" Index="4" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg5" Type="T5" Index="5" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg6" Type="T6" Index="6" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="arg4">To be added.</param>
        <param name="arg5">To be added.</param>
        <param name="arg6">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2, !!T3 arg3, !!T4 arg4, !!T5 arg5, !!T6 arg6, !!T7 arg7) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``7(Microsoft.AspNetCore.Http.HttpContext,``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (httpContext As HttpContext, arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2, arg3, arg4, arg5, arg6, arg7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg3" Type="T3" Index="3" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg4" Type="T4" Index="4" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg5" Type="T5" Index="5" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg6" Type="T6" Index="6" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg7" Type="T7" Index="7" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="arg4">To be added.</param>
        <param name="arg5">To be added.</param>
        <param name="arg6">To be added.</param>
        <param name="arg7">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (Microsoft.AspNetCore.Http.HttpContext httpContext, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Http.EndpointFilterInvocationContext Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class Microsoft.AspNetCore.Http.HttpContext httpContext, !!T1 arg1, !!T2 arg2, !!T3 arg3, !!T4 arg4, !!T5 arg5, !!T6 arg6, !!T7 arg7, !!T8 arg8) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create``8(Microsoft.AspNetCore.Http.HttpContext,``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (httpContext As HttpContext, arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8) As EndpointFilterInvocationContext" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.AspNetCore.Http.HttpContext * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.Create (httpContext, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.EndpointFilterInvocationContext</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg1" Type="T1" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg2" Type="T2" Index="2" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg3" Type="T3" Index="3" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg4" Type="T4" Index="4" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg5" Type="T5" Index="5" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg6" Type="T6" Index="6" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg7" Type="T7" Index="7" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="arg8" Type="T8" Index="8" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <typeparam name="T8">To be added.</typeparam>
        <param name="httpContext">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="arg4">To be added.</param>
        <param name="arg5">To be added.</param>
        <param name="arg6">To be added.</param>
        <param name="arg7">To be added.</param>
        <param name="arg8">To be added.</param>
        <summary>
            Creates a strongly-typed implementation of a <see cref="T:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext" />
            given the provided type parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetArgument&lt;T&gt; (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetArgument&lt;T&gt;(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.GetArgument``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetArgument(Of T) (index As Integer) As T" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; 'T" Usage="endpointFilterInvocationContext.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The <see cref="T:System.Type" /> of the resolved argument.</typeparam>
        <param name="index">An integer representing the position of the argument in the argument list.</param>
        <summary>
            Retrieve the argument given its position in the argument list.
            </summary>
        <returns>The argument at a given <paramref name="index" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpContext">
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Http.HttpContext HttpContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.HttpContext HttpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.HttpContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HttpContext As HttpContext" />
      <MemberSignature Language="F#" Value="member this.HttpContext : Microsoft.AspNetCore.Http.HttpContext" Usage="Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.HttpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Microsoft.AspNetCore.Http.EndpointFilterInvocationContext.HttpContext" /> associated with the current request being processed by the filter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
