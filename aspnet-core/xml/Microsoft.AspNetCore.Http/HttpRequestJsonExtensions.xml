<Type Name="HttpRequestJsonExtensions" FullName="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions">
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestJsonExtensions abstract sealed" />
  <TypeSignature Language="C#" Value="public static class HttpRequestJsonExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpRequestJsonExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpRequestJsonExtensions" />
  <TypeSignature Language="F#" Value="type HttpRequestJsonExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods to read the request body as JSON.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasJsonContentType">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasJsonContentType(Microsoft::AspNetCore::Http::HttpRequest ^ request);" />
      <MemberSignature Language="C#" Value="public static bool HasJsonContentType (this Microsoft.AspNetCore.Http.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasJsonContentType(class Microsoft.AspNetCore.Http.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.HasJsonContentType(Microsoft.AspNetCore.Http.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasJsonContentType (request As HttpRequest) As Boolean" />
      <MemberSignature Language="F#" Value="static member HasJsonContentType : Microsoft.AspNetCore.Http.HttpRequest -&gt; bool" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.HasJsonContentType request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>
            Checks the Content-Type header for JSON types.
            </summary>
        <returns>true if the Content-Type header represents a JSON content type; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object?&gt; ReadFromJsonAsync (this Microsoft.AspNetCore.Http.HttpRequest request, System.Text.Json.Serialization.Metadata.JsonTypeInfo jsonTypeInfo, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; ReadFromJsonAsync(class Microsoft.AspNetCore.Http.HttpRequest request, class System.Text.Json.Serialization.Metadata.JsonTypeInfo jsonTypeInfo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Json.Serialization.Metadata.JsonTypeInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync (request As HttpRequest, jsonTypeInfo As JsonTypeInfo, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * System.Text.Json.Serialization.Metadata.JsonTypeInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, jsonTypeInfo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="jsonTypeInfo" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo" Index="1" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="request">The request to read from.</param>
        <param name="jsonTypeInfo">Metadata about the type to convert.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to object type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The deserialized value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object?&gt; ReadFromJsonAsync (this Microsoft.AspNetCore.Http.HttpRequest request, Type type, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; ReadFromJsonAsync(class Microsoft.AspNetCore.Http.HttpRequest request, class System.Type type, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync(Microsoft.AspNetCore.Http.HttpRequest,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync (request As HttpRequest, type As Type, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * Type * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, type, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The request to read from.</param>
        <param name="type">The type of object to read.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to the specified type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object?&gt; ReadFromJsonAsync (this Microsoft.AspNetCore.Http.HttpRequest request, Type type, System.Text.Json.JsonSerializerOptions? options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; ReadFromJsonAsync(class Microsoft.AspNetCore.Http.HttpRequest request, class System.Type type, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync(Microsoft.AspNetCore.Http.HttpRequest,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync (request As HttpRequest, type As Type, options As JsonSerializerOptions, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * Type * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, type, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and need runtime code generation. Use the overload that takes a JsonTypeInfo or JsonSerializerContext for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and need runtime code generation. Use the overload that takes a JsonTypeInfo or JsonSerializerContext for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The request to read from.</param>
        <param name="type">The type of object to read.</param>
        <param name="options">The serializer options use when deserializing the content.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to the specified type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object?&gt; ReadFromJsonAsync (this Microsoft.AspNetCore.Http.HttpRequest request, Type type, System.Text.Json.Serialization.JsonSerializerContext context, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; ReadFromJsonAsync(class Microsoft.AspNetCore.Http.HttpRequest request, class System.Type type, class System.Text.Json.Serialization.JsonSerializerContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync(Microsoft.AspNetCore.Http.HttpRequest,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync (request As HttpRequest, type As Type, context As JsonSerializerContext, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * Type * System.Text.Json.Serialization.JsonSerializerContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, type, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="context" Type="System.Text.Json.Serialization.JsonSerializerContext" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="request">The request to read from.</param>
        <param name="type">The type of object to read.</param>
        <param name="context">A metadata provider for serializable types.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to the specified type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The deserialized value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TValue?&gt; ReadFromJsonAsync&lt;TValue&gt; (this Microsoft.AspNetCore.Http.HttpRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; ReadFromJsonAsync&lt;TValue&gt;(class Microsoft.AspNetCore.Http.HttpRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync(Of TValue) (request As HttpRequest, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of TValue)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object to read.</typeparam>
        <param name="request">The request to read from.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to the specified type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TValue?&gt; ReadFromJsonAsync&lt;TValue&gt; (this Microsoft.AspNetCore.Http.HttpRequest request, System.Text.Json.JsonSerializerOptions? options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; ReadFromJsonAsync&lt;TValue&gt;(class Microsoft.AspNetCore.Http.HttpRequest request, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync(Of TValue) (request As HttpRequest, options As JsonSerializerOptions, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of TValue)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and need runtime code generation. Use the overload that takes a JsonTypeInfo or JsonSerializerContext for native AOT applications.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresDynamicCode("JSON serialization and deserialization might require types that cannot be statically analyzed and need runtime code generation. Use the overload that takes a JsonTypeInfo or JsonSerializerContext for native AOT applications.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of object to read.</typeparam>
        <param name="request">The request to read from.</param>
        <param name="options">The serializer options to use when deserializing the content.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to the specified type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromJsonAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TValue?&gt; ReadFromJsonAsync&lt;TValue&gt; (this Microsoft.AspNetCore.Http.HttpRequest request, System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;TValue&gt; jsonTypeInfo, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; ReadFromJsonAsync&lt;TValue&gt;(class Microsoft.AspNetCore.Http.HttpRequest request, class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!TValue&gt; jsonTypeInfo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadFromJsonAsync(Of TValue) (request As HttpRequest, jsonTypeInfo As JsonTypeInfo(Of TValue), Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of TValue)" />
      <MemberSignature Language="F#" Value="static member ReadFromJsonAsync : Microsoft.AspNetCore.Http.HttpRequest * System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'Value&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="Microsoft.AspNetCore.Http.HttpRequestJsonExtensions.ReadFromJsonAsync (request, jsonTypeInfo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Extensions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" RefType="this" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="jsonTypeInfo" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;TValue&gt;" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="request">The request to read from.</param>
        <param name="jsonTypeInfo">Metadata about the type to convert.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the operation.</param>
        <summary>
            Read JSON from the request and deserialize to the specified type.
            If the request's content-type is not a known JSON type then an error will be thrown.
            </summary>
        <returns>The deserialized value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
