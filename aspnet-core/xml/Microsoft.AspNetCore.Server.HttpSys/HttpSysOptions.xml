<Type Name="HttpSysOptions" FullName="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSysOptions" />
  <TypeSignature Language="C#" Value="public class HttpSysOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpSysOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpSysOptions" />
  <TypeSignature Language="F#" Value="type HttpSysOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains the options used by HttpSys.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpSysOptions();" />
      <MemberSignature Language="C#" Value="public HttpSysOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSynchronousIO">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSynchronousIO { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool AllowSynchronousIO { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSynchronousIO" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.AllowSynchronousIO" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSynchronousIO As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowSynchronousIO : bool with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.AllowSynchronousIO" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Control whether synchronous input/output is allowed for the HttpContext.Request.Body and HttpContext.Response.Body.
            The default is `false`.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::HttpSys::AuthenticationManager ^ Authentication { Microsoft::AspNetCore::Server::HttpSys::AuthenticationManager ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager Authentication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As AuthenticationManager" />
      <MemberSignature Language="F#" Value="member this.Authentication : Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Http.Sys authentication settings. These may be modified at any time prior to disposing
            the listener.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateMethod">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::HttpSys::ClientCertificateMethod ClientCertificateMethod { Microsoft::AspNetCore::Server::HttpSys::ClientCertificateMethod get(); void set(Microsoft::AspNetCore::Server::HttpSys::ClientCertificateMethod value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.HttpSys.ClientCertificateMethod ClientCertificateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Server.HttpSys.ClientCertificateMethod ClientCertificateMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.ClientCertificateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateMethod As ClientCertificateMethod" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateMethod : Microsoft.AspNetCore.Server.HttpSys.ClientCertificateMethod with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.ClientCertificateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.HttpSys.ClientCertificateMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates how client certificates should be populated. The default is to allow a certificate without renegotiation.
            This does not change the netsh 'clientcertnegotiation' binding option which will need to be enabled for
            ClientCertificateMethod.AllowCertificate to resolve a certificate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableKernelResponseBuffering">
      <MemberSignature Language="C#" Value="public bool EnableKernelResponseBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableKernelResponseBuffering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.EnableKernelResponseBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableKernelResponseBuffering As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableKernelResponseBuffering : bool with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.EnableKernelResponseBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enable buffering of response data in the Kernel. The default value is <code>false</code>.
            It should be used by an application doing synchronous I/O or by an application doing asynchronous I/O with
            no more than one outstanding write at a time, and can significantly improve throughput over high-latency connections.
            Applications that use asynchronous I/O and that may have more than one send outstanding at a time should not use this flag.
            Enabling this can results in higher CPU and memory usage by Http.Sys.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResponseCaching">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResponseCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool EnableResponseCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResponseCaching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.EnableResponseCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResponseCaching As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableResponseCaching : bool with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.EnableResponseCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Attempt kernel-mode caching for responses with eligible headers.
            The response may not include Set-Cookie, Vary, or Pragma headers.
            It must include a Cache-Control header that's public and either a shared-max-age or max-age value, or an Expires header.
            The default is `true`.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Http503Verbosity">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::HttpSys::Http503VerbosityLevel Http503Verbosity { Microsoft::AspNetCore::Server::HttpSys::Http503VerbosityLevel get(); void set(Microsoft::AspNetCore::Server::HttpSys::Http503VerbosityLevel value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.HttpSys.Http503VerbosityLevel Http503Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Server.HttpSys.Http503VerbosityLevel Http503Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Http503Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Http503Verbosity As Http503VerbosityLevel" />
      <MemberSignature Language="F#" Value="member this.Http503Verbosity : Microsoft.AspNetCore.Server.HttpSys.Http503VerbosityLevel with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Http503Verbosity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.HttpSys.Http503VerbosityLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that controls how http.sys reacts when rejecting requests due to throttling conditions - like when the request
            queue limit is reached. The default in http.sys is "Basic" which means http.sys is just resetting the TCP connection. IIS uses Limited
            as its default behavior which will result in sending back a 503 - Service Unavailable back to the client.
            This settings does not apply when attaching to an existing queue.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAccepts">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAccepts { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int MaxAccepts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAccepts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxAccepts" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAccepts As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxAccepts : int with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxAccepts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum number of concurrent accepts.
            The default is 5 times the number of processors as returned by <see cref="P:System.Environment.ProcessorCount" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to 5 times the number of processors as returned by <see cref="P:System.Environment.ProcessorCount" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnections">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; MaxConnections { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="C#" Value="public long? MaxConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxConnections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnections As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxConnections : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of concurrent connections to accept. Set `-1` for infinite.
            Set to `null` to use the registry's machine-wide setting.
            The default value is `null` (machine-wide setting).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestBodySize">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; MaxRequestBodySize { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="C#" Value="public long? MaxRequestBodySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxRequestBodySize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxRequestBodySize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestBodySize As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxRequestBodySize : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxRequestBodySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum allowed size of any request body in bytes.
            When set to null, the maximum request body size is unlimited.
            This limit has no effect on upgraded connections which are always unlimited.
            This can be overridden per-request via <see cref="T:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature" />.
            The default is set to 30,000,000 bytes, which is approximately 28.6MB.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to 30,000,000 bytes, which is approximately 28.6MB.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueueLimit">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RequestQueueLimit { long get(); void set(long value); };" />
      <MemberSignature Language="C#" Value="public long RequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestQueueLimit As Long" />
      <MemberSignature Language="F#" Value="member this.RequestQueueLimit : int64 with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of requests that will be queued up in Http.Sys.
            This settings does not apply when attaching to an existing queue.
            The default is 1000.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueueMode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::HttpSys::RequestQueueMode RequestQueueMode { Microsoft::AspNetCore::Server::HttpSys::RequestQueueMode get(); void set(Microsoft::AspNetCore::Server::HttpSys::RequestQueueMode value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.HttpSys.RequestQueueMode RequestQueueMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Server.HttpSys.RequestQueueMode RequestQueueMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestQueueMode As RequestQueueMode" />
      <MemberSignature Language="F#" Value="member this.RequestQueueMode : Microsoft.AspNetCore.Server.HttpSys.RequestQueueMode with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.HttpSys.RequestQueueMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This indicates whether the server is responsible for creating and configuring the request queue, or if it should attach to an existing queue.
            Most existing configuration options do not apply when attaching to an existing queue.
            The default is `RequestQueueMode.Create`.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueueName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestQueueName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string RequestQueueName { get; set; }" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestQueueName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestQueueName As String" />
      <MemberSignature Language="F#" Value="member this.RequestQueueName : string with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueName" />
      <MemberSignature Language="C#" Value="public string? RequestQueueName { get; set; }" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the Http.Sys request queue
            The default is `null` (Anonymous queue).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowWriteExceptions">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool ThrowWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.ThrowWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowWriteExceptions As Boolean" />
      <MemberSignature Language="F#" Value="member this.ThrowWriteExceptions : bool with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.ThrowWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or Sets if response body writes that fail due to client disconnects should throw exceptions or
            complete normally.
            The default is `false` (complete normally).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeouts">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::HttpSys::TimeoutManager ^ Timeouts { Microsoft::AspNetCore::Server::HttpSys::TimeoutManager ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.HttpSys.TimeoutManager Timeouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Server.HttpSys.TimeoutManager Timeouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Timeouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeouts As TimeoutManager" />
      <MemberSignature Language="F#" Value="member this.Timeouts : Microsoft.AspNetCore.Server.HttpSys.TimeoutManager" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Timeouts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.HttpSys.TimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Exposes the Http.Sys timeout configurations.  These may also be configured in the registry.
            These may be modified at any time prior to disposing the listener.
            These settings do not apply when attaching to an existing queue.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafePreferInlineScheduling">
      <MemberSignature Language="C#" Value="public bool UnsafePreferInlineScheduling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafePreferInlineScheduling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UnsafePreferInlineScheduling" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafePreferInlineScheduling As Boolean" />
      <MemberSignature Language="F#" Value="member this.UnsafePreferInlineScheduling : bool with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UnsafePreferInlineScheduling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Inline request processing instead of dispatching to the threadpool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Enabling this setting will run application code on the IO thread to reduce request processing latency.
            However, this will limit parallel request processing to <see cref="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.MaxAccepts" />. This setting can make
            overall throughput worse if requests take long to process.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPrefixes">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::HttpSys::UrlPrefixCollection ^ UrlPrefixes { Microsoft::AspNetCore::Server::HttpSys::UrlPrefixCollection ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection UrlPrefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection UrlPrefixes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UrlPrefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlPrefixes As UrlPrefixCollection" />
      <MemberSignature Language="F#" Value="member this.UrlPrefixes : Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UrlPrefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The url prefixes to register with Http.Sys. These may be modified at any time prior to disposing
            the listener.
            When attached to an existing queue the prefixes are only used to compute PathBase for requests.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLatin1RequestHeaders">
      <MemberSignature Language="C#" Value="public bool UseLatin1RequestHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLatin1RequestHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UseLatin1RequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLatin1RequestHeaders As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseLatin1RequestHeaders : bool with get, set" Usage="Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UseLatin1RequestHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Configures request headers to use <see cref="P:System.Text.Encoding.Latin1" /> encoding.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to `false`, in which case <see cref="P:System.Text.Encoding.UTF8" /> will be used. /&gt;.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
