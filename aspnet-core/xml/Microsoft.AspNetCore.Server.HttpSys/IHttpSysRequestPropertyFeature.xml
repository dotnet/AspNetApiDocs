<Type Name="IHttpSysRequestPropertyFeature" FullName="Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestPropertyFeature">
  <TypeSignature Language="C#" Value="public interface IHttpSysRequestPropertyFeature" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHttpSysRequestPropertyFeature" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestPropertyFeature" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpSysRequestPropertyFeature" />
  <TypeSignature Language="F#" Value="type IHttpSysRequestPropertyFeature = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides API to read HTTP_REQUEST_PROPERTY value from the HTTP.SYS request.
            <see href="https://learn.microsoft.com/windows/win32/api/http/ne-http-http_request_property" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetTlsClientHello">
      <MemberSignature Language="C#" Value="public bool TryGetTlsClientHello (Span&lt;byte&gt; tlsClientHelloBytesDestination, out int bytesReturned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetTlsClientHello(valuetype System.Span`1&lt;unsigned int8&gt; tlsClientHelloBytesDestination, [out] int32&amp; bytesReturned) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestPropertyFeature.TryGetTlsClientHello(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTlsClientHello (tlsClientHelloBytesDestination As Span(Of Byte), ByRef bytesReturned As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetTlsClientHello : Span&lt;byte&gt; * int -&gt; bool" Usage="iHttpSysRequestPropertyFeature.TryGetTlsClientHello (tlsClientHelloBytesDestination, bytesReturned)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.HttpSys</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tlsClientHelloBytesDestination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesReturned" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tlsClientHelloBytesDestination">Where the raw bytes of the TLS Client Hello message are written.</param>
        <param name="bytesReturned">
            Returns the number of bytes written to <paramref name="tlsClientHelloBytesDestination" />.
            Or can return the size of the buffer needed if <paramref name="tlsClientHelloBytesDestination" /> wasn't large enough.
            </param>
        <summary>
            Reads the TLS client hello from HTTP.SYS
            </summary>
        <returns>
            True, if fetching TLS client hello was successful, false if <paramref name="tlsClientHelloBytesDestination" /> size is not large enough.
            If unsuccessful for other reason throws an exception.
            </returns>
        <remarks>
            Works only if <c>HTTP_SERVICE_CONFIG_SSL_FLAG_ENABLE_CACHE_CLIENT_HELLO</c> flag is set on http.sys service configuration.
            See <see href="https://learn.microsoft.com/windows/win32/api/http/nf-http-httpsetserviceconfiguration" />
            and <see href="https://learn.microsoft.com/windows/win32/api/http/ne-http-http_service_config_id" /><br /><br />
            If you don't want to guess the required <paramref name="tlsClientHelloBytesDestination" /> size before first invocation,
            you should first call with <paramref name="tlsClientHelloBytesDestination" /> set to empty size, so that you can retrieve the required buffer size from <paramref name="bytesReturned" />,
            then allocate that amount of memory and retry the query.
            </remarks>
        <exception cref="T:Microsoft.AspNetCore.Server.HttpSys.HttpSysException">Any HttpSys error except for ERROR_INSUFFICIENT_BUFFER or ERROR_MORE_DATA.</exception>
        <exception cref="T:System.InvalidOperationException">If HttpSys does not support querying the TLS Client Hello.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
