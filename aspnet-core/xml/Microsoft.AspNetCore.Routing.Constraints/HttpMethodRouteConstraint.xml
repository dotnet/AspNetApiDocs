<Type Name="HttpMethodRouteConstraint" FullName="Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint">
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMethodRouteConstraint : Microsoft::AspNetCore::Routing::IRouteConstraint" />
  <TypeSignature Language="C#" Value="public class HttpMethodRouteConstraint : Microsoft.AspNetCore.Routing.IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpMethodRouteConstraint extends System.Object implements class Microsoft.AspNetCore.Routing.IRouteConstraint" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpMethodRouteConstraint&#xA;Implements IRouteConstraint" />
  <TypeSignature Language="F#" Value="type HttpMethodRouteConstraint = class&#xA;    interface IRouteConstraint" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpMethodRouteConstraint extends System.Object implements class Microsoft.AspNetCore.Routing.IParameterPolicy, class Microsoft.AspNetCore.Routing.IRouteConstraint" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type HttpMethodRouteConstraint = class&#xA;    interface IRouteConstraint&#xA;    interface IParameterPolicy" FrameworkAlternate="aspnetcore-2.2;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type HttpMethodRouteConstraint = class&#xA;    interface IParameterPolicy&#xA;    interface IRouteConstraint" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Routing.IRouteConstraint</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
      <InterfaceName>Microsoft.AspNetCore.Routing.IParameterPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Constrains the HTTP method of request or a route.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMethodRouteConstraint(... cli::array &lt;System::String ^&gt; ^ allowedMethods);" />
      <MemberSignature Language="C#" Value="public HttpMethodRouteConstraint (params string[] allowedMethods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] allowedMethods) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray allowedMethods As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint : string[] -&gt; Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint" Usage="new Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint allowedMethods" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedMethods" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="allowedMethods">The allowed HTTP methods.</param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint" /> that accepts the HTTP methods specified
            by <paramref name="allowedMethods" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedMethods">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AllowedMethods { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AllowedMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllowedMethods" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.AllowedMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedMethods As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AllowedMethods : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.AllowedMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HTTP methods allowed by the constraint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(Microsoft::AspNetCore::Http::HttpContext ^ httpContext, Microsoft::AspNetCore::Routing::IRouter ^ route, System::String ^ routeKey, Microsoft::AspNetCore::Routing::RouteValueDictionary ^ values, Microsoft::AspNetCore::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="C#" Value="public virtual bool Match (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Routing.IRouter route, string routeKey, Microsoft.AspNetCore.Routing.RouteValueDictionary values, Microsoft.AspNetCore.Routing.RouteDirection routeDirection);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Routing.IRouter route, string routeKey, class Microsoft.AspNetCore.Routing.RouteValueDictionary values, valuetype Microsoft.AspNetCore.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (httpContext As HttpContext, route As IRouter, routeKey As String, values As RouteValueDictionary, routeDirection As RouteDirection) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Match : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Routing.IRouter * string * Microsoft.AspNetCore.Routing.RouteValueDictionary * Microsoft.AspNetCore.Routing.RouteDirection -&gt; bool&#xA;override this.Match : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Routing.IRouter * string * Microsoft.AspNetCore.Routing.RouteValueDictionary * Microsoft.AspNetCore.Routing.RouteDirection -&gt; bool" Usage="httpMethodRouteConstraint.Match (httpContext, route, routeKey, values, routeDirection)" />
      <MemberSignature Language="C#" Value="public virtual bool Match (Microsoft.AspNetCore.Http.HttpContext? httpContext, Microsoft.AspNetCore.Routing.IRouter? route, string routeKey, Microsoft.AspNetCore.Routing.RouteValueDictionary values, Microsoft.AspNetCore.Routing.RouteDirection routeDirection);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="route" Type="Microsoft.AspNetCore.Routing.IRouter" />
        <Parameter Name="routeKey" Type="System.String" />
        <Parameter Name="values" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="Microsoft.AspNetCore.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <param name="route">To be added.</param>
        <param name="routeKey">To be added.</param>
        <param name="values">To be added.</param>
        <param name="routeDirection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
