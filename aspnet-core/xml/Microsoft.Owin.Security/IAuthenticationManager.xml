<Type Name="IAuthenticationManager" FullName="Microsoft.Owin.Security.IAuthenticationManager">
  <TypeSignature Language="C#" Value="public interface IAuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthenticationManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Owin.Security.IAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthenticationManager" />
  <TypeSignature Language="F#" Value="type IAuthenticationManager = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin</AssemblyName>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Used to interact with authentication middleware that have been chained in the pipeline
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Owin.Security.AuthenticateResult&gt; AuthenticateAsync (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Owin.Security.AuthenticateResult&gt; AuthenticateAsync(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateAsync (authenticationType As String) As Task(Of AuthenticateResult)" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Owin.Security.AuthenticateResult&gt;" Usage="iAuthenticationManager.AuthenticateAsync authenticationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Owin.Security.AuthenticateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Identifies which middleware should respond to the request
            for authentication. This value is compared to the middleware's Options.AuthenticationType property.</param>
        <summary>
            Call back through the middleware to ask for a specific form of authentication to be performed
            on the current request
            </summary>
        <returns>Returns an object with the results of the authentication. The AuthenticationResult.Identity
            may be null if authentication failed. Even if the Identity property is null, there may still be 
            AuthenticationResult.properties and AuthenticationResult.Description information returned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Owin.Security.AuthenticateResult&gt;&gt; AuthenticateAsync (string[] authenticationTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Owin.Security.AuthenticateResult&gt;&gt; AuthenticateAsync(string[] authenticationTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateAsync (authenticationTypes As String()) As Task(Of IEnumerable(Of AuthenticateResult))" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsync : string[] -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Owin.Security.AuthenticateResult&gt;&gt;" Usage="iAuthenticationManager.AuthenticateAsync authenticationTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Owin.Security.AuthenticateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationTypes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="authenticationTypes">Identifies one or more middleware which should attempt to respond</param>
        <summary>
            Called to perform any number of authentication mechanisms on the current request.
            </summary>
        <returns>Returns the AuthenticationResult information from the middleware which responded. The 
            order is determined by the order the middleware are in the pipeline. Latest added is first in the list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationResponseChallenge">
      <MemberSignature Language="C#" Value="public Microsoft.Owin.Security.AuthenticationResponseChallenge AuthenticationResponseChallenge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Owin.Security.AuthenticationResponseChallenge AuthenticationResponseChallenge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationResponseChallenge As AuthenticationResponseChallenge" />
      <MemberSignature Language="F#" Value="member this.AuthenticationResponseChallenge : Microsoft.Owin.Security.AuthenticationResponseChallenge with get, set" Usage="Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Owin.Security.AuthenticationResponseChallenge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Exposes the security.Challenge environment value as a strong type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationResponseGrant">
      <MemberSignature Language="C#" Value="public Microsoft.Owin.Security.AuthenticationResponseGrant AuthenticationResponseGrant { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Owin.Security.AuthenticationResponseGrant AuthenticationResponseGrant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationResponseGrant As AuthenticationResponseGrant" />
      <MemberSignature Language="F#" Value="member this.AuthenticationResponseGrant : Microsoft.Owin.Security.AuthenticationResponseGrant with get, set" Usage="Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Owin.Security.AuthenticationResponseGrant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Exposes the security.SignIn environment value as a strong type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationResponseRevoke">
      <MemberSignature Language="C#" Value="public Microsoft.Owin.Security.AuthenticationResponseRevoke AuthenticationResponseRevoke { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Owin.Security.AuthenticationResponseRevoke AuthenticationResponseRevoke" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationResponseRevoke As AuthenticationResponseRevoke" />
      <MemberSignature Language="F#" Value="member this.AuthenticationResponseRevoke : Microsoft.Owin.Security.AuthenticationResponseRevoke with get, set" Usage="Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Owin.Security.AuthenticationResponseRevoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Exposes the security.SignOut environment value as a strong type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public void Challenge (params string[] authenticationTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Challenge(string[] authenticationTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.Challenge(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Challenge (ParamArray authenticationTypes As String())" />
      <MemberSignature Language="F#" Value="abstract member Challenge : string[] -&gt; unit" Usage="iAuthenticationManager.Challenge authenticationTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="authenticationTypes">Identify which middleware should perform their alterations on the
            response. If the authenticationTypes is null or empty, that means the 
            AuthenticationMode.Active middleware should perform their alterations on the response.</param>
        <summary>
            Add information into the response environment that will cause the authentication middleware to challenge
            the caller to authenticate. This also changes the status code of the response to 401. The nature of that 
            challenge varies greatly, and ranges from adding a response header or changing the 401 status code to 
            a 302 redirect.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public void Challenge (Microsoft.Owin.Security.AuthenticationProperties properties, params string[] authenticationTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Challenge(class Microsoft.Owin.Security.AuthenticationProperties properties, string[] authenticationTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.Challenge(Microsoft.Owin.Security.AuthenticationProperties,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Challenge (properties As AuthenticationProperties, ParamArray authenticationTypes As String())" />
      <MemberSignature Language="F#" Value="abstract member Challenge : Microsoft.Owin.Security.AuthenticationProperties * string[] -&gt; unit" Usage="iAuthenticationManager.Challenge (properties, authenticationTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.Owin.Security.AuthenticationProperties" />
        <Parameter Name="authenticationTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">Additional arbitrary values which may be used by particular authentication types.</param>
        <param name="authenticationTypes">Identify which middleware should perform their alterations on the
            response. If the authenticationTypes is null or empty, that means the 
            AuthenticationMode.Active middleware should perform their alterations on the response.</param>
        <summary>
            Add information into the response environment that will cause the authentication middleware to challenge
            the caller to authenticate. This also changes the status code of the response to 401. The nature of that 
            challenge varies greatly, and ranges from adding a response header or changing the 401 status code to 
            a 302 redirect.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthenticationTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Owin.Security.AuthenticationDescription&gt; GetAuthenticationTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Owin.Security.AuthenticationDescription&gt; GetAuthenticationTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAuthenticationTypes () As IEnumerable(Of AuthenticationDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetAuthenticationTypes : unit -&gt; seq&lt;Microsoft.Owin.Security.AuthenticationDescription&gt;" Usage="iAuthenticationManager.GetAuthenticationTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Owin.Security.AuthenticationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Lists all of the description data provided by authentication middleware that have been chained
            </summary>
        <returns>The authentication descriptions</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthenticationTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Owin.Security.AuthenticationDescription&gt; GetAuthenticationTypes (Func&lt;Microsoft.Owin.Security.AuthenticationDescription,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Owin.Security.AuthenticationDescription&gt; GetAuthenticationTypes(class System.Func`2&lt;class Microsoft.Owin.Security.AuthenticationDescription, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes(System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAuthenticationTypes (predicate As Func(Of AuthenticationDescription, Boolean)) As IEnumerable(Of AuthenticationDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetAuthenticationTypes : Func&lt;Microsoft.Owin.Security.AuthenticationDescription, bool&gt; -&gt; seq&lt;Microsoft.Owin.Security.AuthenticationDescription&gt;" Usage="iAuthenticationManager.GetAuthenticationTypes predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Owin.Security.AuthenticationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;Microsoft.Owin.Security.AuthenticationDescription,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">A function provided by the caller which returns true for descriptions that should be in the returned list</param>
        <summary>
            Lists the description data of all of the authentication middleware which are true for a given predicate
            </summary>
        <returns>The authentication descriptions</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public void SignIn (params System.Security.Claims.ClaimsIdentity[] identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(class System.Security.Claims.ClaimsIdentity[] identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.SignIn(System.Security.Claims.ClaimsIdentity[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignIn (ParamArray identities As ClaimsIdentity())" />
      <MemberSignature Language="F#" Value="abstract member SignIn : System.Security.Claims.ClaimsIdentity[] -&gt; unit" Usage="iAuthenticationManager.SignIn identities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identities" Type="System.Security.Claims.ClaimsIdentity[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="identities">Determines which claims are granted to the signed in user. The 
            ClaimsIdentity.AuthenticationType property is compared to the middleware's Options.AuthenticationType 
            value to determine which claims are granted by which middleware. The recommended use is to have a single
            ClaimsIdentity which has the AuthenticationType matching a specific middleware.</param>
        <summary>
            Add information to the response environment that will cause the appropriate authentication middleware
            to grant a claims-based identity to the recipient of the response. The exact mechanism of this may vary.
            Examples include setting a cookie, to adding a fragment on the redirect url, or producing an OAuth2
            access code or token response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public void SignIn (Microsoft.Owin.Security.AuthenticationProperties properties, params System.Security.Claims.ClaimsIdentity[] identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(class Microsoft.Owin.Security.AuthenticationProperties properties, class System.Security.Claims.ClaimsIdentity[] identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.SignIn(Microsoft.Owin.Security.AuthenticationProperties,System.Security.Claims.ClaimsIdentity[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignIn (properties As AuthenticationProperties, ParamArray identities As ClaimsIdentity())" />
      <MemberSignature Language="F#" Value="abstract member SignIn : Microsoft.Owin.Security.AuthenticationProperties * System.Security.Claims.ClaimsIdentity[] -&gt; unit" Usage="iAuthenticationManager.SignIn (properties, identities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.Owin.Security.AuthenticationProperties" />
        <Parameter Name="identities" Type="System.Security.Claims.ClaimsIdentity[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">Contains additional properties the middleware are expected to persist along with
            the claims. These values will be returned as the AuthenticateResult.properties collection when AuthenticateAsync
            is called on subsequent requests.</param>
        <param name="identities">Determines which claims are granted to the signed in user. The 
            ClaimsIdentity.AuthenticationType property is compared to the middleware's Options.AuthenticationType 
            value to determine which claims are granted by which middleware. The recommended use is to have a single
            ClaimsIdentity which has the AuthenticationType matching a specific middleware.</param>
        <summary>
            Add information to the response environment that will cause the appropriate authentication middleware
            to grant a claims-based identity to the recipient of the response. The exact mechanism of this may vary.
            Examples include setting a cookie, to adding a fragment on the redirect url, or producing an OAuth2
            access code or token response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public void SignOut (params string[] authenticationTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string[] authenticationTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.SignOut(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignOut (ParamArray authenticationTypes As String())" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string[] -&gt; unit" Usage="iAuthenticationManager.SignOut authenticationTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="authenticationTypes">Identifies which middleware should perform the work to sign out.
            Multiple authentication types may be provided to clear out more than one cookie at a time, or to clear
            cookies and redirect to an external single-sign out url.</param>
        <summary>
            Add information to the response environment that will cause the appropriate authentication middleware
            to revoke any claims identity associated the the caller. The exact method varies.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public void SignOut (Microsoft.Owin.Security.AuthenticationProperties properties, params string[] authenticationTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(class Microsoft.Owin.Security.AuthenticationProperties properties, string[] authenticationTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Owin.Security.IAuthenticationManager.SignOut(Microsoft.Owin.Security.AuthenticationProperties,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignOut (properties As AuthenticationProperties, ParamArray authenticationTypes As String())" />
      <MemberSignature Language="F#" Value="abstract member SignOut : Microsoft.Owin.Security.AuthenticationProperties * string[] -&gt; unit" Usage="iAuthenticationManager.SignOut (properties, authenticationTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.Owin.Security.AuthenticationProperties" />
        <Parameter Name="authenticationTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">Additional arbitrary values which may be used by particular authentication types.</param>
        <param name="authenticationTypes">Identifies which middleware should perform the work to sign out.
            Multiple authentication types may be provided to clear out more than one cookie at a time, or to clear
            cookies and redirect to an external single-sign out url.</param>
        <summary>
            Add information to the response environment that will cause the appropriate authentication middleware
            to revoke any claims identity associated the the caller. The exact method varies.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal User" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Owin.Security.IAuthenticationManager.User" />
      <MemberSignature Language="VB.NET" Value="Public Property User As ClaimsPrincipal" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Claims.ClaimsPrincipal with get, set" Usage="Microsoft.Owin.Security.IAuthenticationManager.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the current user for the request
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
