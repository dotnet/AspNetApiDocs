<Type Name="CorsMessageHandler" FullName="System.Web.Http.Cors.CorsMessageHandler">
  <TypeSignature Language="C#" Value="public class CorsMessageHandler : System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CorsMessageHandler extends System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Cors.CorsMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class CorsMessageHandler&#xA;Inherits DelegatingHandler" />
  <TypeSignature Language="F#" Value="type CorsMessageHandler = class&#xA;    inherit DelegatingHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http.Cors</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Custom <see cref="T:System.Net.Http.DelegatingHandler" /> for handling CORS requests.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CorsMessageHandler (System.Web.Http.HttpConfiguration httpConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Http.HttpConfiguration httpConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Cors.CorsMessageHandler.#ctor(System.Web.Http.HttpConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpConfiguration As HttpConfiguration)" />
      <MemberSignature Language="F#" Value="new System.Web.Http.Cors.CorsMessageHandler : System.Web.Http.HttpConfiguration -&gt; System.Web.Http.Cors.CorsMessageHandler" Usage="new System.Web.Http.Cors.CorsMessageHandler httpConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Cors</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpConfiguration" Type="System.Web.Http.HttpConfiguration" />
      </Parameters>
      <Docs>
        <param name="httpConfiguration">The <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Cors.CorsMessageHandler" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">httpConfiguration</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CorsMessageHandler (System.Web.Http.HttpConfiguration httpConfiguration, bool rethrowExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Http.HttpConfiguration httpConfiguration, bool rethrowExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Cors.CorsMessageHandler.#ctor(System.Web.Http.HttpConfiguration,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpConfiguration As HttpConfiguration, rethrowExceptions As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Web.Http.Cors.CorsMessageHandler : System.Web.Http.HttpConfiguration * bool -&gt; System.Web.Http.Cors.CorsMessageHandler" Usage="new System.Web.Http.Cors.CorsMessageHandler (httpConfiguration, rethrowExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Cors</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpConfiguration" Type="System.Web.Http.HttpConfiguration" />
        <Parameter Name="rethrowExceptions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="httpConfiguration">To be added.</param>
        <param name="rethrowExceptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleCorsPreflightRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; HandleCorsPreflightRequestAsync (System.Net.Http.HttpRequestMessage request, System.Web.Cors.CorsRequestContext corsRequestContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; HandleCorsPreflightRequestAsync(class System.Net.Http.HttpRequestMessage request, class System.Web.Cors.CorsRequestContext corsRequestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Cors.CorsMessageHandler.HandleCorsPreflightRequestAsync(System.Net.Http.HttpRequestMessage,System.Web.Cors.CorsRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HandleCorsPreflightRequestAsync (request As HttpRequestMessage, corsRequestContext As CorsRequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="abstract member HandleCorsPreflightRequestAsync : System.Net.Http.HttpRequestMessage * System.Web.Cors.CorsRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.HandleCorsPreflightRequestAsync : System.Net.Http.HttpRequestMessage * System.Web.Cors.CorsRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="corsMessageHandler.HandleCorsPreflightRequestAsync (request, corsRequestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Cors</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="corsRequestContext" Type="System.Web.Cors.CorsRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The request.</param>
        <param name="corsRequestContext">The cors request context.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>Handles the preflight request specified by CORS.</summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task`1" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">request or corsRequestContext</exception>
      </Docs>
    </Member>
    <Member MemberName="HandleCorsRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; HandleCorsRequestAsync (System.Net.Http.HttpRequestMessage request, System.Web.Cors.CorsRequestContext corsRequestContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; HandleCorsRequestAsync(class System.Net.Http.HttpRequestMessage request, class System.Web.Cors.CorsRequestContext corsRequestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Cors.CorsMessageHandler.HandleCorsRequestAsync(System.Net.Http.HttpRequestMessage,System.Web.Cors.CorsRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HandleCorsRequestAsync (request As HttpRequestMessage, corsRequestContext As CorsRequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="abstract member HandleCorsRequestAsync : System.Net.Http.HttpRequestMessage * System.Web.Cors.CorsRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.HandleCorsRequestAsync : System.Net.Http.HttpRequestMessage * System.Web.Cors.CorsRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="corsMessageHandler.HandleCorsRequestAsync (request, corsRequestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Cors</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="corsRequestContext" Type="System.Web.Cors.CorsRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
        <param name="corsRequestContext">The <see cref="T:System.Web.Cors.CorsRequestContext" />.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>Handles the actual CORS request.</summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">request or corsRequestContext</exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Cors.CorsMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SendAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="corsMessageHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Cors</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The HTTP request message to send to the server.</param>
        <param name="cancellationToken">A cancellation token to cancel operation.</param>
        <summary>Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</summary>
        <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />. The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
