<Type Name="IAntiforgery" FullName="Microsoft.AspNetCore.Antiforgery.IAntiforgery">
  <TypeSignature Language="C++ CLI" Value="public interface class IAntiforgery" />
  <TypeSignature Language="C#" Value="public interface IAntiforgery" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAntiforgery" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Antiforgery.IAntiforgery" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAntiforgery" />
  <TypeSignature Language="F#" Value="type IAntiforgery = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAntiforgery" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides access to the antiforgery system, which provides protection against
            Cross-site Request Forgery (XSRF, also called CSRF) attacks.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAndStoreTokens">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Antiforgery::AntiforgeryTokenSet ^ GetAndStoreTokens(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetAndStoreTokens (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetAndStoreTokens(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAndStoreTokens (httpContext As HttpContext) As AntiforgeryTokenSet" />
      <MemberSignature Language="F#" Value="abstract member GetAndStoreTokens : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" Usage="iAntiforgery.GetAndStoreTokens httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <summary>
            Generates an <see cref="T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" /> for this request and stores the cookie token
            in the response. This operation also sets the "Cache-control" and "Pragma" headers to "no-cache" and
            the "X-Frame-Options" header to "SAMEORIGIN".
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" /> with tokens for the response.</returns>
        <remarks>
            This method has a side effect:
            A response cookie is set if there is no valid cookie associated with the request.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokens">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Antiforgery::AntiforgeryTokenSet ^ GetTokens(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetTokens (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetTokens(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokens (httpContext As HttpContext) As AntiforgeryTokenSet" />
      <MemberSignature Language="F#" Value="abstract member GetTokens : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" Usage="iAntiforgery.GetTokens httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <summary>
            Generates an <see cref="T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" /> for this request.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" /> for this request.</returns>
        <remarks>
            Unlike <see cref="M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)" />, this method has no side effect. The caller
            is responsible for setting the response cookie and injecting the returned
            form token as appropriate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestValidAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ IsRequestValidAsync(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsRequestValidAsync (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsRequestValidAsync(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRequestValidAsync (httpContext As HttpContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsRequestValidAsync : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iAntiforgery.IsRequestValidAsync httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <summary>
            Asynchronously returns a value indicating whether the request passes antiforgery validation. If the
            request uses a safe HTTP method (GET, HEAD, OPTIONS, TRACE), the antiforgery token is not validated.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> that, when completed, returns <c>true</c> if the request uses a safe HTTP
            method or contains a valid antiforgery token, otherwise returns <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCookieTokenAndHeader">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCookieTokenAndHeader(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C#" Value="public void SetCookieTokenAndHeader (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCookieTokenAndHeader(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCookieTokenAndHeader (httpContext As HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member SetCookieTokenAndHeader : Microsoft.AspNetCore.Http.HttpContext -&gt; unit" Usage="iAntiforgery.SetCookieTokenAndHeader httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <summary>
            Generates and stores an antiforgery cookie token if one is not available or not valid.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ValidateRequestAsync(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateRequestAsync (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateRequestAsync(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateRequestAsync (httpContext As HttpContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member ValidateRequestAsync : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task" Usage="iAntiforgery.ValidateRequestAsync httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <summary>
            Validates an antiforgery token that was supplied as part of the request.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when validation has completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException">
            Thrown when the request does not include a valid antiforgery token.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
