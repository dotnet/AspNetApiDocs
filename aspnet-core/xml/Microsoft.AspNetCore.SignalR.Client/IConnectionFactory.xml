<Type Name="IConnectionFactory" FullName="Microsoft.AspNetCore.SignalR.Client.IConnectionFactory">
  <TypeSignature Language="C++ CLI" Value="public interface class IConnectionFactory" />
  <TypeSignature Language="C#" Value="public interface IConnectionFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConnectionFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Client.IConnectionFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConnectionFactory" />
  <TypeSignature Language="F#" Value="type IConnectionFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A factory abstraction for creating connections to a SignalR server.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt; ConnectAsync (Microsoft.AspNetCore.Connections.TransferFormat transferFormat, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Connections.ConnectionContext&gt; ConnectAsync(valuetype Microsoft.AspNetCore.Connections.TransferFormat transferFormat, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.IConnectionFactory.ConnectAsync(Microsoft.AspNetCore.Connections.TransferFormat,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (transferFormat As TransferFormat, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ConnectionContext)" />
      <MemberSignature Language="F#" Value="abstract member ConnectAsync : Microsoft.AspNetCore.Connections.TransferFormat * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt;" Usage="iConnectionFactory.ConnectAsync (transferFormat, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferFormat" Type="Microsoft.AspNetCore.Connections.TransferFormat" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="transferFormat">The transfer format the connection should use.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Creates a new connection to a SignalR server using the specified <see cref="T:Microsoft.AspNetCore.Connections.TransferFormat" />.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous connect.
            The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property returns a <see cref="T:Microsoft.AspNetCore.Connections.ConnectionContext" /> for the new connection.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DisposeAsync(Microsoft::AspNetCore::Connections::ConnectionContext ^ connection);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DisposeAsync (Microsoft.AspNetCore.Connections.ConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DisposeAsync(class Microsoft.AspNetCore.Connections.ConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.IConnectionFactory.DisposeAsync(Microsoft.AspNetCore.Connections.ConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync (connection As ConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : Microsoft.AspNetCore.Connections.ConnectionContext -&gt; System.Threading.Tasks.Task" Usage="iConnectionFactory.DisposeAsync connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.Connections.ConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to dispose.</param>
        <summary>
            Disposes the specified <see cref="T:Microsoft.AspNetCore.Connections.ConnectionContext" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous dispose.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
