<Type Name="HttpConnectionFactory" FullName="Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory">
  <TypeSignature Language="C++ CLI" Value="public ref class HttpConnectionFactory : Microsoft::AspNetCore::SignalR::Client::IConnectionFactory" />
  <TypeSignature Language="C#" Value="public class HttpConnectionFactory : Microsoft.AspNetCore.SignalR.Client.IConnectionFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpConnectionFactory extends System.Object implements class Microsoft.AspNetCore.SignalR.Client.IConnectionFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpConnectionFactory&#xA;Implements IConnectionFactory" />
  <TypeSignature Language="F#" Value="type HttpConnectionFactory = class&#xA;    interface IConnectionFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Client</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.SignalR.Client.IConnectionFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A factory for creating <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpConnectionFactory(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Http::Connections::Client::HttpConnectionOptions ^&gt; ^ options, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberSignature Language="C#" Value="public HttpConnectionFactory (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions&gt; options, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions&gt; options, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of HttpConnectionOptions), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory" Usage="new Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory (options, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions&gt;" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="options">The connection options.</param>
        <param name="loggerFactory">The logger factory.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt; ConnectAsync (Microsoft.AspNetCore.Connections.TransferFormat transferFormat, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Connections.ConnectionContext&gt; ConnectAsync(valuetype Microsoft.AspNetCore.Connections.TransferFormat transferFormat, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.ConnectAsync(Microsoft.AspNetCore.Connections.TransferFormat,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (transferFormat As TransferFormat, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ConnectionContext)" />
      <MemberSignature Language="F#" Value="abstract member ConnectAsync : Microsoft.AspNetCore.Connections.TransferFormat * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt;&#xA;override this.ConnectAsync : Microsoft.AspNetCore.Connections.TransferFormat * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt;" Usage="httpConnectionFactory.ConnectAsync (transferFormat, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.Client.IConnectionFactory.ConnectAsync(Microsoft.AspNetCore.Connections.TransferFormat,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Connections.ConnectionContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferFormat" Type="Microsoft.AspNetCore.Connections.TransferFormat" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="transferFormat">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ DisposeAsync(Microsoft::AspNetCore::Connections::ConnectionContext ^ connection);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DisposeAsync (Microsoft.AspNetCore.Connections.ConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DisposeAsync(class Microsoft.AspNetCore.Connections.ConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.DisposeAsync(Microsoft.AspNetCore.Connections.ConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync (connection As ConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : Microsoft.AspNetCore.Connections.ConnectionContext -&gt; System.Threading.Tasks.Task&#xA;override this.DisposeAsync : Microsoft.AspNetCore.Connections.ConnectionContext -&gt; System.Threading.Tasks.Task" Usage="httpConnectionFactory.DisposeAsync connection" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.Client.IConnectionFactory.DisposeAsync(Microsoft.AspNetCore.Connections.ConnectionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.Connections.ConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
