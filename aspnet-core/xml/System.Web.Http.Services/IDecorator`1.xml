<Type Name="IDecorator&lt;T&gt;" FullName="System.Web.Http.Services.IDecorator&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IDecorator&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDecorator`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Services.IDecorator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDecorator(Of Out T)" />
  <TypeSignature Language="F#" Value="type IDecorator&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see .</typeparam>
    <summary> Defines a decorator that exposes the inner decorated object. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Inner">
      <MemberSignature Language="C#" Value="public T Inner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Inner" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Services.IDecorator`1.Inner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inner As T" />
      <MemberSignature Language="F#" Value="member this.Inner : 'T" Usage="System.Web.Http.Services.IDecorator&lt;'T&gt;.Inner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the inner object. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
