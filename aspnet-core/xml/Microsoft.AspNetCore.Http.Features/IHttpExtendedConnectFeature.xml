<Type Name="IHttpExtendedConnectFeature" FullName="Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature">
  <TypeSignature Language="C#" Value="public interface IHttpExtendedConnectFeature" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpExtendedConnectFeature" FrameworkAlternate="aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpExtendedConnectFeature" />
  <TypeSignature Language="F#" Value="type IHttpExtendedConnectFeature = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHttpExtendedConnectFeature" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Used with protocols that require the Extended CONNECT handshake such as HTTP/2 WebSockets and WebTransport.
            https://www.rfc-editor.org/rfc/rfc8441#section-4
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;System.IO.Stream&gt; AcceptAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.IO.Stream&gt; AcceptAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature.AcceptAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptAsync () As ValueTask(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member AcceptAsync : unit -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Stream&gt;" Usage="iHttpExtendedConnectFeature.AcceptAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Send the response headers with a 200 status code and transition to opaque streaming.
            </summary>
        <returns>An opaque bidirectional stream.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtendedConnect">
      <MemberSignature Language="C#" Value="public bool IsExtendedConnect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExtendedConnect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature.IsExtendedConnect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExtendedConnect As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsExtendedConnect : bool" Usage="Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature.IsExtendedConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MemberNotNullWhen(true, "Protocol")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MemberNotNullWhen(true, "Protocol")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.CodeAnalysis.MemberNotNullWhen(true, "Protocol")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.CodeAnalysis.MemberNotNullWhen(true, "Protocol")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if the current request is a Extended CONNECT request that can be transitioned to an opaque connection via AcceptAsync.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="public string? Protocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Protocol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature.Protocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protocol As String" />
      <MemberSignature Language="F#" Value="member this.Protocol : string" Usage="Microsoft.AspNetCore.Http.Features.IHttpExtendedConnectFeature.Protocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <c>:protocol</c> header included in the request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
