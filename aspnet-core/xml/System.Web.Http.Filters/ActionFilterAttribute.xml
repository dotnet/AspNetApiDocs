<Type Name="ActionFilterAttribute" FullName="System.Web.Http.Filters.ActionFilterAttribute">
  <TypeSignature Language="C#" Value="public abstract class ActionFilterAttribute : System.Web.Http.Filters.FilterAttribute, System.Web.Http.Filters.IActionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ActionFilterAttribute extends System.Web.Http.Filters.FilterAttribute implements class System.Web.Http.Filters.IActionFilter, class System.Web.Http.Filters.IFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Filters.ActionFilterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ActionFilterAttribute&#xA;Inherits FilterAttribute&#xA;Implements IActionFilter" />
  <TypeSignature Language="F#" Value="type ActionFilterAttribute = class&#xA;    inherit FilterAttribute&#xA;    interface IActionFilter&#xA;    interface IFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Http.Filters.FilterAttribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.Filters.IActionFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Http.Filters.IFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the base class for all action-filter attributes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ActionFilterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuted">
      <MemberSignature Language="C#" Value="public virtual void OnActionExecuted (System.Web.Http.Filters.HttpActionExecutedContext actionExecutedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionExecuted(class System.Web.Http.Filters.HttpActionExecutedContext actionExecutedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnActionExecuted (actionExecutedContext As HttpActionExecutedContext)" />
      <MemberSignature Language="F#" Value="abstract member OnActionExecuted : System.Web.Http.Filters.HttpActionExecutedContext -&gt; unit&#xA;override this.OnActionExecuted : System.Web.Http.Filters.HttpActionExecutedContext -&gt; unit" Usage="actionFilterAttribute.OnActionExecuted actionExecutedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionExecutedContext" Type="System.Web.Http.Filters.HttpActionExecutedContext" />
      </Parameters>
      <Docs>
        <param name="actionExecutedContext">The action executed context.</param>
        <summary>Occurs after the action method is invoked.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecutedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnActionExecutedAsync (System.Web.Http.Filters.HttpActionExecutedContext actionExecutedContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnActionExecutedAsync(class System.Web.Http.Filters.HttpActionExecutedContext actionExecutedContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnActionExecutedAsync (actionExecutedContext As HttpActionExecutedContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnActionExecutedAsync : System.Web.Http.Filters.HttpActionExecutedContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnActionExecutedAsync : System.Web.Http.Filters.HttpActionExecutedContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="actionFilterAttribute.OnActionExecutedAsync (actionExecutedContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionExecutedContext" Type="System.Web.Http.Filters.HttpActionExecutedContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="actionExecutedContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuting">
      <MemberSignature Language="C#" Value="public virtual void OnActionExecuting (System.Web.Http.Controllers.HttpActionContext actionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionExecuting(class System.Web.Http.Controllers.HttpActionContext actionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnActionExecuting (actionContext As HttpActionContext)" />
      <MemberSignature Language="F#" Value="abstract member OnActionExecuting : System.Web.Http.Controllers.HttpActionContext -&gt; unit&#xA;override this.OnActionExecuting : System.Web.Http.Controllers.HttpActionContext -&gt; unit" Usage="actionFilterAttribute.OnActionExecuting actionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="System.Web.Http.Controllers.HttpActionContext" />
      </Parameters>
      <Docs>
        <param name="actionContext">The action context.</param>
        <summary>Occurs before the action method is invoked.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecutingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnActionExecutingAsync (System.Web.Http.Controllers.HttpActionContext actionContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnActionExecutingAsync(class System.Web.Http.Controllers.HttpActionContext actionContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnActionExecutingAsync (actionContext As HttpActionContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnActionExecutingAsync : System.Web.Http.Controllers.HttpActionContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnActionExecutingAsync : System.Web.Http.Controllers.HttpActionContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="actionFilterAttribute.OnActionExecutingAsync (actionContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="System.Web.Http.Controllers.HttpActionContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="actionContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; IActionFilter.ExecuteActionFilterAsync (System.Web.Http.Controllers.HttpActionContext actionContext, System.Threading.CancellationToken cancellationToken, Func&lt;System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(class System.Web.Http.Controllers.HttpActionContext actionContext, valuetype System.Threading.CancellationToken cancellationToken, class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteActionFilterAsync (actionContext As HttpActionContext, cancellationToken As CancellationToken, continuation As Func(Of Task(Of HttpResponseMessage))) As Task(Of HttpResponseMessage) Implements IActionFilter.ExecuteActionFilterAsync" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync : System.Web.Http.Controllers.HttpActionContext * System.Threading.CancellationToken * Func&lt;System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync : System.Web.Http.Controllers.HttpActionContext * System.Threading.CancellationToken * Func&lt;System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="actionFilterAttribute.System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync (actionContext, cancellationToken, continuation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="System.Web.Http.Controllers.HttpActionContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuation" Type="System.Func&lt;System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="actionContext">The action context.</param>
        <param name="cancellationToken">The cancellation token assigned for this task.</param>
        <param name="continuation">The delegate function to continue after the action method is invoked.</param>
        <summary>Executes the filter action asynchronously.</summary>
        <returns>The newly created task for this operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
