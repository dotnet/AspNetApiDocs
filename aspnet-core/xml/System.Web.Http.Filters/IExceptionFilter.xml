<Type Name="IExceptionFilter" FullName="System.Web.Http.Filters.IExceptionFilter">
  <TypeSignature Language="C#" Value="public interface IExceptionFilter : System.Web.Http.Filters.IFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExceptionFilter implements class System.Web.Http.Filters.IFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Filters.IExceptionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExceptionFilter&#xA;Implements IFilter" />
  <TypeSignature Language="F#" Value="type IExceptionFilter = interface&#xA;    interface IFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.Filters.IFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Defines the methods that are required for an exception filter.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteExceptionFilterAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExecuteExceptionFilterAsync (System.Web.Http.Filters.HttpActionExecutedContext actionExecutedContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecuteExceptionFilterAsync(class System.Web.Http.Filters.HttpActionExecutedContext actionExecutedContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteExceptionFilterAsync (actionExecutedContext As HttpActionExecutedContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ExecuteExceptionFilterAsync : System.Web.Http.Filters.HttpActionExecutedContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iExceptionFilter.ExecuteExceptionFilterAsync (actionExecutedContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionExecutedContext" Type="System.Web.Http.Filters.HttpActionExecutedContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="actionExecutedContext">The action executed context.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>Executes an asynchronous exception filter.</summary>
        <returns>An asynchronous exception filter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
