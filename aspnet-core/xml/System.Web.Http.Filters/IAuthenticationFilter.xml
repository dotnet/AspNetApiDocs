<Type Name="IAuthenticationFilter" FullName="System.Web.Http.Filters.IAuthenticationFilter">
  <TypeSignature Language="C#" Value="public interface IAuthenticationFilter : System.Web.Http.Filters.IFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthenticationFilter implements class System.Web.Http.Filters.IFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Filters.IAuthenticationFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthenticationFilter&#xA;Implements IFilter" />
  <TypeSignature Language="F#" Value="type IAuthenticationFilter = interface&#xA;    interface IFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.Filters.IFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Defines a filter that performs authentication.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsync (System.Web.Http.Filters.HttpAuthenticationContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsync(class System.Web.Http.Filters.HttpAuthenticationContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateAsync (context As HttpAuthenticationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsync : System.Web.Http.Filters.HttpAuthenticationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iAuthenticationFilter.AuthenticateAsync (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.Filters.HttpAuthenticationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The authentication context.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>Authenticates the request.</summary>
        <returns>A Task that will perform authentication.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChallengeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChallengeAsync (System.Web.Http.Filters.HttpAuthenticationChallengeContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ChallengeAsync(class System.Web.Http.Filters.HttpAuthenticationChallengeContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChallengeAsync (context As HttpAuthenticationChallengeContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ChallengeAsync : System.Web.Http.Filters.HttpAuthenticationChallengeContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iAuthenticationFilter.ChallengeAsync (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.Filters.HttpAuthenticationChallengeContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
