<Type Name="IConnectionListenerFactory" FullName="Microsoft.AspNetCore.Connections.IConnectionListenerFactory">
  <TypeSignature Language="C++ CLI" Value="public interface class IConnectionListenerFactory" />
  <TypeSignature Language="C#" Value="public interface IConnectionListenerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConnectionListenerFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Connections.IConnectionListenerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConnectionListenerFactory" />
  <TypeSignature Language="F#" Value="type IConnectionListenerFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Connections.Abstractions</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Defines an interface that provides the mechanisms for binding to various types of <see cref="T:System.Net.EndPoint" />s.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BindAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.AspNetCore.Connections.IConnectionListener&gt; BindAsync (System.Net.EndPoint endpoint, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Microsoft.AspNetCore.Connections.IConnectionListener&gt; BindAsync(class System.Net.EndPoint endpoint, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Connections.IConnectionListenerFactory.BindAsync(System.Net.EndPoint,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindAsync (endpoint As EndPoint, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of IConnectionListener)" />
      <MemberSignature Language="F#" Value="abstract member BindAsync : System.Net.EndPoint * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.AspNetCore.Connections.IConnectionListener&gt;" Usage="iConnectionListenerFactory.BindAsync (endpoint, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Connections.Abstractions</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.AspNetCore.Connections.IConnectionListener&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Net.EndPoint" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpoint">The <see cref="T:System.Net.EndPoint" /> to bind to.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Connections.IConnectionListener" /> bound to the specified <see cref="T:System.Net.EndPoint" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1" /> that completes when the listener has been bound, yielding a <see cref="T:Microsoft.AspNetCore.Connections.IConnectionListener" /> representing the new listener.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
