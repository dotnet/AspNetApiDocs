<Type Name="IExceptionHandler" FullName="Microsoft.AspNetCore.Diagnostics.IExceptionHandler">
  <TypeSignature Language="C#" Value="public interface IExceptionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExceptionHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Diagnostics.IExceptionHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExceptionHandler" />
  <TypeSignature Language="F#" Value="type IExceptionHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryHandleAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;bool&gt; TryHandleAsync (Microsoft.AspNetCore.Http.HttpContext httpContext, Exception exception, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt; TryHandleAsync(class Microsoft.AspNetCore.Http.HttpContext httpContext, class System.Exception exception, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.IExceptionHandler.TryHandleAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryHandleAsync (httpContext As HttpContext, exception As Exception, cancellationToken As CancellationToken) As ValueTask(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryHandleAsync : Microsoft.AspNetCore.Http.HttpContext * Exception * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;" Usage="iExceptionHandler.TryHandleAsync (httpContext, exception, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpContext" />
        <param name="exception" />
        <param name="cancellationToken" />
        <summary />
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
