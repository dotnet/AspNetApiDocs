<Type Name="IDeveloperPageExceptionFilter" FullName="Microsoft.AspNetCore.Diagnostics.IDeveloperPageExceptionFilter">
  <TypeSignature Language="C++ CLI" Value="public interface class IDeveloperPageExceptionFilter" />
  <TypeSignature Language="C#" Value="public interface IDeveloperPageExceptionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDeveloperPageExceptionFilter" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Diagnostics.IDeveloperPageExceptionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDeveloperPageExceptionFilter" />
  <TypeSignature Language="F#" Value="type IDeveloperPageExceptionFilter = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDeveloperPageExceptionFilter" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics.Abstractions</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides an extensibility point for changing the behavior of the DeveloperExceptionPageMiddleware.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleExceptionAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ HandleExceptionAsync(Microsoft::AspNetCore::Diagnostics::ErrorContext ^ errorContext, Func&lt;Microsoft::AspNetCore::Diagnostics::ErrorContext ^, System::Threading::Tasks::Task ^&gt; ^ next);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task HandleExceptionAsync (Microsoft.AspNetCore.Diagnostics.ErrorContext errorContext, Func&lt;Microsoft.AspNetCore.Diagnostics.ErrorContext,System.Threading.Tasks.Task&gt; next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task HandleExceptionAsync(class Microsoft.AspNetCore.Diagnostics.ErrorContext errorContext, class System.Func`2&lt;class Microsoft.AspNetCore.Diagnostics.ErrorContext, class System.Threading.Tasks.Task&gt; next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.IDeveloperPageExceptionFilter.HandleExceptionAsync(Microsoft.AspNetCore.Diagnostics.ErrorContext,System.Func{Microsoft.AspNetCore.Diagnostics.ErrorContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleExceptionAsync (errorContext As ErrorContext, next As Func(Of ErrorContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="abstract member HandleExceptionAsync : Microsoft.AspNetCore.Diagnostics.ErrorContext * Func&lt;Microsoft.AspNetCore.Diagnostics.ErrorContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="iDeveloperPageExceptionFilter.HandleExceptionAsync (errorContext, next)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorContext" Type="Microsoft.AspNetCore.Diagnostics.ErrorContext" />
        <Parameter Name="next" Type="System.Func&lt;Microsoft.AspNetCore.Diagnostics.ErrorContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="errorContext">The error context.</param>
        <param name="next">The next filter in the pipeline.</param>
        <summary>
            An exception handling method that is used to either format the exception or delegate to the next handler in the chain.
            </summary>
        <returns>A task the completes when the handler is done executing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
