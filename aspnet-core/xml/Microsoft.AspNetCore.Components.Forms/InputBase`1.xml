<Type Name="InputBase&lt;TValue&gt;" FullName="Microsoft.AspNetCore.Components.Forms.InputBase&lt;TValue&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class InputBase abstract : Microsoft::AspNetCore::Components::ComponentBase" FrameworkAlternate="aspnetcore-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class InputBase abstract : Microsoft::AspNetCore::Components::ComponentBase, IDisposable" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0" />
  <TypeSignature Language="C#" Value="public abstract class InputBase&lt;TValue&gt; : Microsoft.AspNetCore.Components.ComponentBase" FrameworkAlternate="aspnetcore-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InputBase`1&lt;TValue&gt; extends Microsoft.AspNetCore.Components.ComponentBase" FrameworkAlternate="aspnetcore-3.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Forms.InputBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InputBase(Of TValue)&#xA;Inherits ComponentBase" FrameworkAlternate="aspnetcore-3.0" />
  <TypeSignature Language="F#" Value="type InputBase&lt;'Value&gt; = class&#xA;    inherit ComponentBase" FrameworkAlternate="aspnetcore-3.0" />
  <TypeSignature Language="C#" Value="public abstract class InputBase&lt;TValue&gt; : Microsoft.AspNetCore.Components.ComponentBase, IDisposable" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InputBase`1&lt;TValue&gt; extends Microsoft.AspNetCore.Components.ComponentBase implements class System.IDisposable" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InputBase(Of TValue)&#xA;Inherits ComponentBase&#xA;Implements IDisposable" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type InputBase&lt;'Value&gt; = class&#xA;    inherit ComponentBase&#xA;    interface IDisposable" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Components.ComponentBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">To be added.</typeparam>
    <summary>
            A base class for form input components. This base class automatically
            integrates with an <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext" />, which must be supplied
            as a cascading parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBase();" />
      <MemberSignature Language="C#" Value="protected InputBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.Forms.InputBase`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalAttributes">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ AdditionalAttributes { System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); void set(System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; AdditionalAttributes { get; set; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; AdditionalAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalAttributes As IReadOnlyDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.AdditionalAttributes : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.AdditionalAttributes" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt;? AdditionalAttributes { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter(CaptureUnmatchedValues=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter(CaptureUnmatchedValues=true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CssClass { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="protected string CssClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CssClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CssClass As String" />
      <MemberSignature Language="F#" Value="member this.CssClass : string" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a CSS class string that combines the <c>class</c> attribute and and a string indicating
            the status of the field being edited (a combination of "modified", "valid", and "invalid").
            Derived components should typically use this value for the primary HTML element's 'class' attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TValue CurrentValue { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="C#" Value="protected TValue CurrentValue { get; set; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue CurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property CurrentValue As TValue" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : 'Value with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.CurrentValue" />
      <MemberSignature Language="C#" Value="protected TValue? CurrentValue { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current value of the input.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValueAsString">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CurrentValueAsString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="protected string CurrentValueAsString { get; set; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentValueAsString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValueAsString" />
      <MemberSignature Language="VB.NET" Value="Protected Property CurrentValueAsString As String" />
      <MemberSignature Language="F#" Value="member this.CurrentValueAsString : string with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.CurrentValueAsString" />
      <MemberSignature Language="C#" Value="protected string? CurrentValueAsString { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current value of the input, represented as a string.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string? DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the display name for this field.
            <para>This value is used when generating error messages when the input value fails to parse correctly.</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="inputBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EditContext">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::AspNetCore::Components::Forms::EditContext ^ EditContext { Microsoft::AspNetCore::Components::Forms::EditContext ^ get(); void set(Microsoft::AspNetCore::Components::Forms::EditContext ^ value); };" />
      <MemberSignature Language="C#" Value="protected Microsoft.AspNetCore.Components.Forms.EditContext EditContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.Forms.EditContext EditContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.EditContext" />
      <MemberSignature Language="VB.NET" Value="Protected Property EditContext As EditContext" />
      <MemberSignature Language="F#" Value="member this.EditContext : Microsoft.AspNetCore.Components.Forms.EditContext with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.EditContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Forms.EditContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the associated <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext" />.
            This property is uninitialized if the input does not have a parent <see cref="T:Microsoft.AspNetCore.Components.Forms.EditForm" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldIdentifier">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::AspNetCore::Components::Forms::FieldIdentifier FieldIdentifier { Microsoft::AspNetCore::Components::Forms::FieldIdentifier get(); void set(Microsoft::AspNetCore::Components::Forms::FieldIdentifier value); };" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::AspNetCore::Components::Forms::FieldIdentifier FieldIdentifier { Microsoft::AspNetCore::Components::Forms::FieldIdentifier get(); void set(Microsoft::AspNetCore::Components::Forms::FieldIdentifier value); };" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="protected Microsoft.AspNetCore.Components.Forms.FieldIdentifier FieldIdentifier { get; set; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Components.Forms.FieldIdentifier FieldIdentifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.FieldIdentifier" />
      <MemberSignature Language="VB.NET" Value="Protected Property FieldIdentifier As FieldIdentifier" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="F#" Value="member this.FieldIdentifier : Microsoft.AspNetCore.Components.Forms.FieldIdentifier with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.FieldIdentifier" />
      <MemberSignature Language="C#" Value="protected internal Microsoft.AspNetCore.Components.Forms.FieldIdentifier FieldIdentifier { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FieldIdentifier As FieldIdentifier" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Forms.FieldIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.FieldIdentifier" /> for the bound value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValueAsString">
      <MemberSignature Language="C#" Value="protected virtual string FormatValueAsString (T value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatValueAsString(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.FormatValueAsString(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatValueAsString (value As T) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatValueAsString(T value);" />
      <MemberSignature Language="F#" Value="abstract member FormatValueAsString : 'T -&gt; string&#xA;override this.FormatValueAsString : 'T -&gt; string" Usage="inputBase.FormatValueAsString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <summary>
            Formats the value as a string. Derived classes can override this to determine the formating used for <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValueAsString" />.
            </summary>
        <returns>A string representation of the value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameAttributeValue">
      <MemberSignature Language="C#" Value="protected string NameAttributeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameAttributeValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.NameAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property NameAttributeValue As String" />
      <MemberSignature Language="F#" Value="member this.NameAttributeValue : string" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.NameAttributeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the value to be used for the input's "name" attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterView parameters);" />
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterView parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterView parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetParametersAsync (parameters As ParameterView) As Task" />
      <MemberSignature Language="F#" Value="override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task" Usage="inputBase.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MemberNotNull(new System.String[] { "EditContext", "CascadedEditContext" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MemberNotNull(new System.String[] { "EditContext", "CascadedEditContext" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterView" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="inputBase.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseValueFromString">
      <MemberSignature Language="C#" Value="protected abstract bool TryParseValueFromString (string value, out T result, out string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryParseValueFromString(string value, [out] !T&amp; result, [out] string&amp; validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.TryParseValueFromString(System.String,`0@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryParseValueFromString (value As String, ByRef result As T, ByRef validationErrorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryParseValueFromString(System::String ^ value, [Runtime::InteropServices::Out] T % result, [Runtime::InteropServices::Out] System::String ^ % validationErrorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryParseValueFromString : string *  *  -&gt; bool" Usage="inputBase.TryParseValueFromString (value, result, validationErrorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="T" RefType="out" />
        <Parameter Name="validationErrorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">The string value to be parsed.</param>
        <param name="result">An instance of <typeparamref name="T" />.</param>
        <param name="validationErrorMessage">If the value could not be parsed, provides a validation error message.</param>
        <summary>
            Parses a string to create an instance of <typeparamref name="T" />. Derived classes can override this to change how
            <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValueAsString" /> interprets incoming values.
            </summary>
        <returns>True if the value could be parsed; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue Value { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="C#" Value="public TValue Value { get; set; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TValue" />
      <MemberSignature Language="F#" Value="member this.Value : 'Value with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.Value" />
      <MemberSignature Language="C#" Value="public TValue? Value { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            @bind-Value="model.PropertyName"
            </example>
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::EventCallback&lt;TValue&gt; ValueChanged { Microsoft::AspNetCore::Components::EventCallback&lt;TValue&gt; get(); void set(Microsoft::AspNetCore::Components::EventCallback&lt;TValue&gt; value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.EventCallback&lt;TValue&gt; ValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Components.EventCallback`1&lt;!TValue&gt; ValueChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueChanged As EventCallback(Of TValue)" />
      <MemberSignature Language="F#" Value="member this.ValueChanged : Microsoft.AspNetCore.Components.EventCallback&lt;'Value&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.ValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.EventCallback&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueExpression">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression&lt;Func&lt;TValue&gt; ^&gt; ^ ValueExpression { System::Linq::Expressions::Expression&lt;Func&lt;TValue&gt; ^&gt; ^ get(); void set(System::Linq::Expressions::Expression&lt;Func&lt;TValue&gt; ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression&lt;Func&lt;TValue&gt;&gt; ValueExpression { get; set; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;!TValue&gt;&gt; ValueExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueExpression As Expression(Of Func(Of TValue))" />
      <MemberSignature Language="F#" Value="member this.ValueExpression : System.Linq.Expressions.Expression&lt;Func&lt;'Value&gt;&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'Value&gt;.ValueExpression" />
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression&lt;Func&lt;TValue&gt;&gt;? ValueExpression { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an expression that identifies the bound value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
