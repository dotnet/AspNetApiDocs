<Type Name="RemoteAuthenticationEvents" FullName="Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents">
  <TypeSignature Language="C++ CLI" Value="public ref class RemoteAuthenticationEvents : Microsoft::AspNetCore::Authentication::IRemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
  <TypeSignature Language="C#" Value="public class RemoteAuthenticationEvents : Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RemoteAuthenticationEvents extends System.Object implements class Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents" />
  <TypeSignature Language="VB.NET" Value="Public Class RemoteAuthenticationEvents&#xA;Implements IRemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="F#" Value="type RemoteAuthenticationEvents = class&#xA;    interface IRemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="C#" Value="public class RemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RemoteAuthenticationEvents extends System.Object" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RemoteAuthenticationEvents" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type RemoteAuthenticationEvents = class" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">
      <InterfaceName>Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Allows subscribing to events raised during remote authentication.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RemoteAuthenticationEvents();" />
      <MemberSignature Language="C#" Value="public RemoteAuthenticationEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessDenied">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AccessDenied(Microsoft::AspNetCore::Authentication::AccessDeniedContext ^ context);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AccessDenied (Microsoft.AspNetCore.Authentication.AccessDeniedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AccessDenied(class Microsoft.AspNetCore.Authentication.AccessDeniedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.AccessDenied(Microsoft.AspNetCore.Authentication.AccessDeniedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AccessDenied (context As AccessDeniedContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member AccessDenied : Microsoft.AspNetCore.Authentication.AccessDeniedContext -&gt; System.Threading.Tasks.Task&#xA;override this.AccessDenied : Microsoft.AspNetCore.Authentication.AccessDeniedContext -&gt; System.Threading.Tasks.Task" Usage="remoteAuthenticationEvents.AccessDenied context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.AccessDeniedContext" Index="0" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Invoked when an access denied error was returned by the remote server.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessDenied">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::AccessDeniedContext ^, System::Threading::Tasks::Task ^&gt; ^ OnAccessDenied { Func&lt;Microsoft::AspNetCore::Authentication::AccessDeniedContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::AccessDeniedContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.AccessDeniedContext,System.Threading.Tasks.Task&gt; OnAccessDenied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.AccessDeniedContext, class System.Threading.Tasks.Task&gt; OnAccessDenied" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnAccessDenied" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAccessDenied As Func(Of AccessDeniedContext, Task)" />
      <MemberSignature Language="F#" Value="member this.OnAccessDenied : Func&lt;Microsoft.AspNetCore.Authentication.AccessDeniedContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnAccessDenied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Authentication.AccessDeniedContext,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Invoked when an access denied error was returned by the remote server.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoteFailure">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::FailureContext ^, System::Threading::Tasks::Task ^&gt; ^ OnRemoteFailure { Func&lt;Microsoft::AspNetCore::Authentication::FailureContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::FailureContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::RemoteFailureContext ^, System::Threading::Tasks::Task ^&gt; ^ OnRemoteFailure { Func&lt;Microsoft::AspNetCore::Authentication::RemoteFailureContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::RemoteFailureContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.FailureContext,System.Threading.Tasks.Task&gt; OnRemoteFailure { get; set; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.FailureContext, class System.Threading.Tasks.Task&gt; OnRemoteFailure" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRemoteFailure As Func(Of FailureContext, Task)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.OnRemoteFailure : Func&lt;Microsoft.AspNetCore.Authentication.FailureContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.RemoteFailureContext,System.Threading.Tasks.Task&gt; OnRemoteFailure { get; set; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.RemoteFailureContext, class System.Threading.Tasks.Task&gt; OnRemoteFailure" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRemoteFailure As Func(Of RemoteFailureContext, Task)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="member this.OnRemoteFailure : Func&lt;Microsoft.AspNetCore.Authentication.RemoteFailureContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.Func&lt;Microsoft.AspNetCore.Authentication.FailureContext,System.Threading.Tasks.Task&gt;</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">System.Func&lt;Microsoft.AspNetCore.Authentication.RemoteFailureContext,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Invoked when there is a remote failure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTicketReceived">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::AspNetCore::Authentication::TicketReceivedContext ^, System::Threading::Tasks::Task ^&gt; ^ OnTicketReceived { Func&lt;Microsoft::AspNetCore::Authentication::TicketReceivedContext ^, System::Threading::Tasks::Task ^&gt; ^ get(); void set(Func&lt;Microsoft::AspNetCore::Authentication::TicketReceivedContext ^, System::Threading::Tasks::Task ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Authentication.TicketReceivedContext,System.Threading.Tasks.Task&gt; OnTicketReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Authentication.TicketReceivedContext, class System.Threading.Tasks.Task&gt; OnTicketReceived" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnTicketReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property OnTicketReceived As Func(Of TicketReceivedContext, Task)" />
      <MemberSignature Language="F#" Value="member this.OnTicketReceived : Func&lt;Microsoft.AspNetCore.Authentication.TicketReceivedContext, System.Threading.Tasks.Task&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnTicketReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Authentication.TicketReceivedContext,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Invoked after the remote ticket has been received.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteFailure">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RemoteFailure(Microsoft::AspNetCore::Authentication::FailureContext ^ context);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoteFailure (Microsoft.AspNetCore.Authentication.FailureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoteFailure(class Microsoft.AspNetCore.Authentication.FailureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteFailure (context As FailureContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoteFailure : Microsoft.AspNetCore.Authentication.FailureContext -&gt; System.Threading.Tasks.Task&#xA;override this.RemoteFailure : Microsoft.AspNetCore.Authentication.FailureContext -&gt; System.Threading.Tasks.Task" Usage="remoteAuthenticationEvents.RemoteFailure context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.FailureContext" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Invoked when there is a remote failure
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteFailure">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RemoteFailure(Microsoft::AspNetCore::Authentication::RemoteFailureContext ^ context);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoteFailure (Microsoft.AspNetCore.Authentication.RemoteFailureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoteFailure(class Microsoft.AspNetCore.Authentication.RemoteFailureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.RemoteFailureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteFailure (context As RemoteFailureContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoteFailure : Microsoft.AspNetCore.Authentication.RemoteFailureContext -&gt; System.Threading.Tasks.Task&#xA;override this.RemoteFailure : Microsoft.AspNetCore.Authentication.RemoteFailureContext -&gt; System.Threading.Tasks.Task" Usage="remoteAuthenticationEvents.RemoteFailure context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.RemoteFailureContext" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Invoked when there is a remote failure.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TicketReceived">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ TicketReceived(Microsoft::AspNetCore::Authentication::TicketReceivedContext ^ context);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task TicketReceived (Microsoft.AspNetCore.Authentication.TicketReceivedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task TicketReceived(class Microsoft.AspNetCore.Authentication.TicketReceivedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TicketReceived (context As TicketReceivedContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member TicketReceived : Microsoft.AspNetCore.Authentication.TicketReceivedContext -&gt; System.Threading.Tasks.Task&#xA;override this.TicketReceived : Microsoft.AspNetCore.Authentication.TicketReceivedContext -&gt; System.Threading.Tasks.Task" Usage="remoteAuthenticationEvents.TicketReceived context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">M:Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authentication.TicketReceivedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Invoked after the remote ticket has been received.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
