<Type Name="ITransformProvider" FullName="Yarp.ReverseProxy.Transforms.Builder.ITransformProvider">
  <TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.Builder.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="F#" Value="type ITransformProvider = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITransformProvider" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Enables the implementor to inspect each route and conditionally add transforms.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformProvider.Apply(Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply (context As TransformBuilderContext)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext -&gt; unit" Usage="iTransformProvider.Apply context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to add any generated transforms to.</param>
        <summary>
            Inspect the given route and conditionally add transforms.
            This is called for every route, each time that route is built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateCluster">
      <MemberSignature Language="C#" Value="public void ValidateCluster (Yarp.ReverseProxy.Transforms.Builder.TransformClusterValidationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateCluster(class Yarp.ReverseProxy.Transforms.Builder.TransformClusterValidationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformProvider.ValidateCluster(Yarp.ReverseProxy.Transforms.Builder.TransformClusterValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateCluster (context As TransformClusterValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateCluster : Yarp.ReverseProxy.Transforms.Builder.TransformClusterValidationContext -&gt; unit" Usage="iTransformProvider.ValidateCluster context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformClusterValidationContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to add any generated errors to.</param>
        <summary>
            Validates any cluster data needed for transforms.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRoute">
      <MemberSignature Language="C#" Value="public void ValidateRoute (Yarp.ReverseProxy.Transforms.Builder.TransformRouteValidationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateRoute(class Yarp.ReverseProxy.Transforms.Builder.TransformRouteValidationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformProvider.ValidateRoute(Yarp.ReverseProxy.Transforms.Builder.TransformRouteValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateRoute (context As TransformRouteValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateRoute : Yarp.ReverseProxy.Transforms.Builder.TransformRouteValidationContext -&gt; unit" Usage="iTransformProvider.ValidateRoute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Transforms.Builder.TransformRouteValidationContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to add any generated errors to.</param>
        <summary>
            Validates any route data needed for transforms.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
