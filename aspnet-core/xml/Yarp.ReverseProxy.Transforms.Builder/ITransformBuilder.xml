<Type Name="ITransformBuilder" FullName="Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder">
  <TypeSignature Language="C#" Value="public interface ITransformBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformBuilder" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformBuilder" />
  <TypeSignature Language="F#" Value="type ITransformBuilder = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITransformBuilder" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Validates and builds request and response transforms for a given route.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Forwarder.HttpTransformer Build (Yarp.ReverseProxy.Configuration.RouteConfig route, Yarp.ReverseProxy.Configuration.ClusterConfig? cluster);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Yarp.ReverseProxy.Forwarder.HttpTransformer Build(class Yarp.ReverseProxy.Configuration.RouteConfig route, class Yarp.ReverseProxy.Configuration.ClusterConfig cluster) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder.Build(Yarp.ReverseProxy.Configuration.RouteConfig,Yarp.ReverseProxy.Configuration.ClusterConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (route As RouteConfig, cluster As ClusterConfig) As HttpTransformer" />
      <MemberSignature Language="F#" Value="abstract member Build : Yarp.ReverseProxy.Configuration.RouteConfig * Yarp.ReverseProxy.Configuration.ClusterConfig -&gt; Yarp.ReverseProxy.Forwarder.HttpTransformer" Usage="iTransformBuilder.Build (route, cluster)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Forwarder.HttpTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Configuration.ClusterConfig">
          <Attributes>
            <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <param name="cluster">To be added.</param>
        <summary>
            Builds the transforms for the given route into executable rules.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Forwarder.HttpTransformer Create (Action&lt;Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Yarp.ReverseProxy.Forwarder.HttpTransformer Create(class System.Action`1&lt;class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder.Create(System.Action{Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (action As Action(Of TransformBuilderContext)) As HttpTransformer" />
      <MemberSignature Language="F#" Value="abstract member Create : Action&lt;Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext&gt; -&gt; Yarp.ReverseProxy.Forwarder.HttpTransformer" Usage="iTransformBuilder.Create action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Forwarder.HttpTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext&gt;" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateCluster">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Exception&gt; ValidateCluster (Yarp.ReverseProxy.Configuration.ClusterConfig cluster);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Exception&gt; ValidateCluster(class Yarp.ReverseProxy.Configuration.ClusterConfig cluster) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder.ValidateCluster(Yarp.ReverseProxy.Configuration.ClusterConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCluster (cluster As ClusterConfig) As IReadOnlyList(Of Exception)" />
      <MemberSignature Language="F#" Value="abstract member ValidateCluster : Yarp.ReverseProxy.Configuration.ClusterConfig -&gt; System.Collections.Generic.IReadOnlyList&lt;Exception&gt;" Usage="iTransformBuilder.ValidateCluster cluster" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Configuration.ClusterConfig" />
      </Parameters>
      <Docs>
        <param name="cluster">To be added.</param>
        <summary>
            Validates that any cluster data needed for transforms is valid.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Exception&gt; ValidateRoute (Yarp.ReverseProxy.Configuration.RouteConfig route);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Exception&gt; ValidateRoute(class Yarp.ReverseProxy.Configuration.RouteConfig route) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder.ValidateRoute(Yarp.ReverseProxy.Configuration.RouteConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateRoute (route As RouteConfig) As IReadOnlyList(Of Exception)" />
      <MemberSignature Language="F#" Value="abstract member ValidateRoute : Yarp.ReverseProxy.Configuration.RouteConfig -&gt; System.Collections.Generic.IReadOnlyList&lt;Exception&gt;" Usage="iTransformBuilder.ValidateRoute route" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <summary>
            Validates that each transform for the given route is known and has the expected parameters. All transforms are validated
            so all errors can be reported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
