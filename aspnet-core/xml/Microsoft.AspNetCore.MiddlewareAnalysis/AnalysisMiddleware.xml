<Type Name="AnalysisMiddleware" FullName="Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware">
  <TypeSignature Language="C++ CLI" Value="public ref class AnalysisMiddleware" />
  <TypeSignature Language="C#" Value="public class AnalysisMiddleware" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalysisMiddleware extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalysisMiddleware" />
  <TypeSignature Language="F#" Value="type AnalysisMiddleware = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.MiddlewareAnalysis</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.9.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.5.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Middleware that is inserted before and after each other middleware in the pipeline by <see cref="T:Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisBuilder" />
            to log to a <see cref="T:System.Diagnostics.DiagnosticSource" /> when other middleware starts, finishes and throws.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnalysisMiddleware(Microsoft::AspNetCore::Http::RequestDelegate ^ next, System::Diagnostics::DiagnosticSource ^ diagnosticSource, System::String ^ middlewareName);" />
      <MemberSignature Language="C#" Value="public AnalysisMiddleware (Microsoft.AspNetCore.Http.RequestDelegate next, System.Diagnostics.DiagnosticSource diagnosticSource, string middlewareName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Http.RequestDelegate next, class System.Diagnostics.DiagnosticSource diagnosticSource, string middlewareName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,System.Diagnostics.DiagnosticSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (next As RequestDelegate, diagnosticSource As DiagnosticSource, middlewareName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware : Microsoft.AspNetCore.Http.RequestDelegate * System.Diagnostics.DiagnosticSource * string -&gt; Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware" Usage="new Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware (next, diagnosticSource, middlewareName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.MiddlewareAnalysis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="next" Type="Microsoft.AspNetCore.Http.RequestDelegate" />
        <Parameter Name="diagnosticSource" Type="System.Diagnostics.DiagnosticSource" />
        <Parameter Name="middlewareName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="next">The next middleware in the pipeline.</param>
        <param name="diagnosticSource">The <see cref="T:System.Diagnostics.DiagnosticSource" /> to log when other middleware starts, finishes and throws.</param>
        <param name="middlewareName">
            The name of the next middleware in the pipeline. This name is typically retrieved from <see cref="P:Microsoft.AspNetCore.Builder.IApplicationBuilder.Properties" />
            using the "analysis.NextMiddlewareName" key.
            </param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ Invoke(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Invoke (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task Invoke(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (httpContext As HttpContext) As Task" />
      <MemberSignature Language="F#" Value="member this.Invoke : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task" Usage="analysisMiddleware.Invoke httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.MiddlewareAnalysis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> for the current request.</param>
        <summary>
            Executes the middleware that logs to a <see cref="T:System.Diagnostics.DiagnosticSource" /> when the next middleware starts, finishes and throws.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
