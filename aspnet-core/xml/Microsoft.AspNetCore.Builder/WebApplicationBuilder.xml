<Type Name="WebApplicationBuilder" FullName="Microsoft.AspNetCore.Builder.WebApplicationBuilder">
  <TypeSignature Language="C#" Value="public sealed class WebApplicationBuilder" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebApplicationBuilder extends System.Object" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebApplicationBuilder" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="F#" Value="type WebApplicationBuilder = class" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="C#" Value="public sealed class WebApplicationBuilder : Microsoft.Extensions.Hosting.IHostApplicationBuilder" FrameworkAlternate="aspnetcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebApplicationBuilder extends System.Object implements class Microsoft.Extensions.Hosting.IHostApplicationBuilder" FrameworkAlternate="aspnetcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebApplicationBuilder&#xA;Implements IHostApplicationBuilder" FrameworkAlternate="aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type WebApplicationBuilder = class&#xA;    interface IHostApplicationBuilder" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="aspnetcore-8.0">
      <InterfaceName>Microsoft.Extensions.Hosting.IHostApplicationBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A builder for web applications and services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Builder.WebApplication Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Builder.WebApplication Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As WebApplication" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; Microsoft.AspNetCore.Builder.WebApplication" Usage="webApplicationBuilder.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.WebApplication</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds the <see cref="T:Microsoft.AspNetCore.Builder.WebApplication" />.
            </summary>
        <returns>A configured <see cref="T:Microsoft.AspNetCore.Builder.WebApplication" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Configuration.ConfigurationManager Configuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Configuration.ConfigurationManager Configuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Configuration As ConfigurationManager" />
      <MemberSignature Language="F#" Value="member this.Configuration : Microsoft.Extensions.Configuration.ConfigurationManager" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.ConfigurationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of configuration providers for the application to compose. This is useful for adding new configuration sources and providers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHostEnvironment Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Hosting.IWebHostEnvironment Environment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IWebHostEnvironment" />
      <MemberSignature Language="F#" Value="member this.Environment : Microsoft.AspNetCore.Hosting.IWebHostEnvironment" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides information about the web hosting environment an application is running.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Builder.ConfigureHostBuilder Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Builder.ConfigureHostBuilder Host" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As ConfigureHostBuilder" />
      <MemberSignature Language="F#" Value="member this.Host : Microsoft.AspNetCore.Builder.ConfigureHostBuilder" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.ConfigureHostBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for configuring host specific properties, but not building.
            To build after configuration, call <see cref="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logging">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.ILoggingBuilder Logging { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILoggingBuilder Logging" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Logging" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Logging As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="member this.Logging : Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.Logging" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="aspnetcore-8.0">P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Logging</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of logging providers for the application to compose. This is useful for adding new logging providers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder Metrics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Metrics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metrics As IMetricsBuilder" />
      <MemberSignature Language="F#" Value="member this.Metrics : Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.Metrics" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Metrics</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows enabling metrics and directing their output.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration">
      <MemberSignature Language="C#" Value="Microsoft.Extensions.Configuration.IConfigurationManager Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Configuration.IConfigurationManager Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Configuration" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Configuration As IConfigurationManager Implements IHostApplicationBuilder.Configuration" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration : Microsoft.Extensions.Configuration.IConfigurationManager" Usage="Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Configuration</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer&lt;TContainerBuilder&gt;">
      <MemberSignature Language="C#" Value="void IHostApplicationBuilder.ConfigureContainer&lt;TContainerBuilder&gt; (Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt; factory, Action&lt;TContainerBuilder&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer&lt;TContainerBuilder&gt;(class Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1&lt;!!TContainerBuilder&gt; factory, class System.Action`1&lt;!!TContainerBuilder&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Sub ConfigureContainer(Of TContainerBuilder) (factory As IServiceProviderFactory(Of TContainerBuilder), configure As Action(Of TContainerBuilder)) Implements IHostApplicationBuilder.ConfigureContainer" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt; * Action&lt;'ContainerBuilder&gt; -&gt; unit&#xA;override this.Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt; * Action&lt;'ContainerBuilder&gt; -&gt; unit" Usage="webApplicationBuilder.Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer (factory, configure)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostApplicationBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContainerBuilder" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt;" Index="0" FrameworkAlternate="aspnetcore-8.0" />
        <Parameter Name="configure" Type="System.Action&lt;TContainerBuilder&gt;" Index="1" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContainerBuilder">To be added.</typeparam>
        <param name="factory">To be added.</param>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment">
      <MemberSignature Language="C#" Value="Microsoft.Extensions.Hosting.IHostEnvironment Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Hosting.IHostEnvironment Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Environment" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Environment As IHostEnvironment Implements IHostApplicationBuilder.Environment" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment : Microsoft.Extensions.Hosting.IHostEnvironment" Usage="Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Environment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;object,object&gt; Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;object, object&gt; Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As IDictionary(Of Object, Object) Implements IHostApplicationBuilder.Properties" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties : System.Collections.Generic.IDictionary&lt;obj, obj&gt;" Usage="Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceCollection" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.Services" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="aspnetcore-8.0">P:Microsoft.Extensions.Hosting.IHostApplicationBuilder.Services</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of services for the application to compose. This is useful for adding user provided or framework provided services.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebHost">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Builder.ConfigureWebHostBuilder WebHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Builder.ConfigureWebHostBuilder WebHost" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.WebHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebHost As ConfigureWebHostBuilder" />
      <MemberSignature Language="F#" Value="member this.WebHost : Microsoft.AspNetCore.Builder.ConfigureWebHostBuilder" Usage="Microsoft.AspNetCore.Builder.WebApplicationBuilder.WebHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.ConfigureWebHostBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> for configuring server specific properties, but not building.
            To build after configuration, call <see cref="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
