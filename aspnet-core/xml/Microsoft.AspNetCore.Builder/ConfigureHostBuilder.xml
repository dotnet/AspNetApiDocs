<Type Name="ConfigureHostBuilder" FullName="Microsoft.AspNetCore.Builder.ConfigureHostBuilder">
  <TypeSignature Language="C#" Value="public sealed class ConfigureHostBuilder : Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost, Microsoft.Extensions.Hosting.IHostBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigureHostBuilder extends System.Object implements class Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost, class Microsoft.Extensions.Hosting.IHostBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Builder.ConfigureHostBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConfigureHostBuilder&#xA;Implements IHostBuilder, ISupportsConfigureWebHost" />
  <TypeSignature Language="F#" Value="type ConfigureHostBuilder = class&#xA;    interface IHostBuilder&#xA;    interface ISupportsConfigureWebHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Hosting.IHostBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A non-buildable <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder" />.
            Use <see cref="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build" /> to build the <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConfigureAppConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostBuilder ConfigureAppConfiguration (Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; configureDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder ConfigureAppConfiguration(class System.Action`2&lt;class Microsoft.Extensions.Hosting.HostBuilderContext, class Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; configureDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAppConfiguration (configureDelegate As Action(Of HostBuilderContext, IConfigurationBuilder)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member ConfigureAppConfiguration : Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.ConfigureAppConfiguration : Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.ConfigureAppConfiguration configureDelegate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureDelegate" Type="System.Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="configureDelegate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ConfigureContainer&lt;TContainerBuilder&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostBuilder ConfigureContainer&lt;TContainerBuilder&gt; (Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext,TContainerBuilder&gt; configureDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder ConfigureContainer&lt;TContainerBuilder&gt;(class System.Action`2&lt;class Microsoft.Extensions.Hosting.HostBuilderContext, !!TContainerBuilder&gt; configureDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.ConfigureContainer``1(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureContainer(Of TContainerBuilder) (configureDelegate As Action(Of HostBuilderContext, TContainerBuilder)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member ConfigureContainer : Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext, 'ContainerBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.ConfigureContainer : Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext, 'ContainerBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.ConfigureContainer configureDelegate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureContainer``1(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,``0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContainerBuilder" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="configureDelegate" Type="System.Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext,TContainerBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContainerBuilder">To be added.</typeparam>
        <param name="configureDelegate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ConfigureHostConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostBuilder ConfigureHostConfiguration (Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; configureDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder ConfigureHostConfiguration(class System.Action`1&lt;class Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; configureDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureHostConfiguration (configureDelegate As Action(Of IConfigurationBuilder)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member ConfigureHostConfiguration : Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.ConfigureHostConfiguration : Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.ConfigureHostConfiguration configureDelegate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureDelegate" Type="System.Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="configureDelegate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ConfigureServices">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostBuilder ConfigureServices (Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder ConfigureServices(class System.Action`2&lt;class Microsoft.Extensions.Hosting.HostBuilderContext, class Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureServices (configureDelegate As Action(Of HostBuilderContext, IServiceCollection)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member ConfigureServices : Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.ConfigureServices : Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.ConfigureServices configureDelegate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureDelegate" Type="System.Action&lt;Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;" />
      </Parameters>
      <Docs>
        <param name="configureDelegate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost.ConfigureWebHost">
      <MemberSignature Language="C#" Value="Microsoft.Extensions.Hosting.IHostBuilder ISupportsConfigureWebHost.ConfigureWebHost (Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; configure, Action&lt;Microsoft.Extensions.Hosting.WebHostBuilderOptions&gt; configureOptions);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost.ConfigureWebHost(class System.Action`1&lt;class Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; configure, class System.Action`1&lt;class Microsoft.Extensions.Hosting.WebHostBuilderOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.Microsoft#AspNetCore#Hosting#Infrastructure#ISupportsConfigureWebHost#ConfigureWebHost(System.Action{Microsoft.AspNetCore.Hosting.IWebHostBuilder},System.Action{Microsoft.Extensions.Hosting.WebHostBuilderOptions})" />
      <MemberSignature Language="VB.NET" Value="Function ConfigureWebHost (configure As Action(Of IWebHostBuilder), configureOptions As Action(Of WebHostBuilderOptions)) As IHostBuilder Implements ISupportsConfigureWebHost.ConfigureWebHost" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost.ConfigureWebHost : Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; * Action&lt;Microsoft.Extensions.Hosting.WebHostBuilderOptions&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost.ConfigureWebHost : Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; * Action&lt;Microsoft.Extensions.Hosting.WebHostBuilderOptions&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost.ConfigureWebHost (configure, configureOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.Infrastructure.ISupportsConfigureWebHost.ConfigureWebHost(System.Action{Microsoft.AspNetCore.Hosting.IWebHostBuilder},System.Action{Microsoft.Extensions.Hosting.WebHostBuilderOptions})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt;" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.Extensions.Hosting.WebHostBuilderOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="configure">To be added.</param>
        <param name="configureOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Extensions.Hosting.IHostBuilder.Build">
      <MemberSignature Language="C#" Value="Microsoft.Extensions.Hosting.IHost IHostBuilder.Build ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHost Microsoft.Extensions.Hosting.IHostBuilder.Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.Microsoft#Extensions#Hosting#IHostBuilder#Build" />
      <MemberSignature Language="VB.NET" Value="Function Build () As IHost Implements IHostBuilder.Build" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Extensions.Hosting.IHostBuilder.Build : unit -&gt; Microsoft.Extensions.Hosting.IHost&#xA;override this.Microsoft.Extensions.Hosting.IHostBuilder.Build : unit -&gt; Microsoft.Extensions.Hosting.IHost" Usage="configureHostBuilder.Microsoft.Extensions.Hosting.IHostBuilder.Build " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.Build</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHost</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;object,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;object, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of Object, Object)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;obj, obj&gt;" Usage="Microsoft.AspNetCore.Builder.ConfigureHostBuilder.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.Hosting.IHostBuilder.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseServiceProviderFactory&lt;TContainerBuilder&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostBuilder UseServiceProviderFactory&lt;TContainerBuilder&gt; (Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder UseServiceProviderFactory&lt;TContainerBuilder&gt;(class Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1&lt;!!TContainerBuilder&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.UseServiceProviderFactory``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UseServiceProviderFactory(Of TContainerBuilder) (factory As IServiceProviderFactory(Of TContainerBuilder)) As IHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member UseServiceProviderFactory : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.UseServiceProviderFactory : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.UseServiceProviderFactory factory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.UseServiceProviderFactory``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContainerBuilder" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContainerBuilder">To be added.</typeparam>
        <param name="factory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseServiceProviderFactory&lt;TContainerBuilder&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Hosting.IHostBuilder UseServiceProviderFactory&lt;TContainerBuilder&gt; (Func&lt;Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt;&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Hosting.IHostBuilder UseServiceProviderFactory&lt;TContainerBuilder&gt;(class System.Func`2&lt;class Microsoft.Extensions.Hosting.HostBuilderContext, class Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1&lt;!!TContainerBuilder&gt;&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.ConfigureHostBuilder.UseServiceProviderFactory``1(System.Func{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function UseServiceProviderFactory(Of TContainerBuilder) (factory As Func(Of HostBuilderContext, IServiceProviderFactory(Of TContainerBuilder))) As IHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member UseServiceProviderFactory : Func&lt;Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt;&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder&#xA;override this.UseServiceProviderFactory : Func&lt;Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt;&gt; -&gt; Microsoft.Extensions.Hosting.IHostBuilder" Usage="configureHostBuilder.UseServiceProviderFactory factory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Hosting.IHostBuilder.UseServiceProviderFactory``1(System.Func{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Hosting.IHostBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContainerBuilder" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContainerBuilder">To be added.</typeparam>
        <param name="factory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
