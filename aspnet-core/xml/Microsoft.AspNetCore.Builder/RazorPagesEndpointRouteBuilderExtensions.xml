<Type Name="RazorPagesEndpointRouteBuilderExtensions" FullName="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions">
  <TypeSignature Language="C++ CLI" Value="public ref class RazorPagesEndpointRouteBuilderExtensions abstract sealed" />
  <TypeSignature Language="C#" Value="public static class RazorPagesEndpointRouteBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RazorPagesEndpointRouteBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RazorPagesEndpointRouteBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RazorPagesEndpointRouteBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Contains extension methods for using Razor Pages with <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MapDynamicPageRoute&lt;TTransformer&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTransformer&gt;&#xA; where TTransformer : Microsoft::AspNetCore::Mvc::Routing::DynamicRouteValueTransformer[System::Runtime::CompilerServices::Extension]&#xA; static void MapDynamicPageRoute(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ pattern);" />
      <MemberSignature Language="C#" Value="public static void MapDynamicPageRoute&lt;TTransformer&gt; (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern) where TTransformer : Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapDynamicPageRoute&lt;(class Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer) TTransformer&gt;(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapDynamicPageRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapDynamicPageRoute(Of TTransformer As DynamicRouteValueTransformer) (endpoints As IEndpointRouteBuilder, pattern As String)" />
      <MemberSignature Language="F#" Value="static member MapDynamicPageRoute : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string -&gt; unit (requires 'ransformer :&gt; Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer)" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapDynamicPageRoute (endpoints, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTransformer">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
        <Parameter Name="pattern" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Route")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Route")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TTransformer">The type of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />.</typeparam>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="pattern">The URL pattern of the route.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will
            attempt to select a page using the route values produced by <typeparamref name="TTransformer" />.
            </summary>
        <remarks>
          <para>
            This method allows the registration of a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> and <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />
            that combine to dynamically select a page using custom logic.
            </para>
          <para>
            The instance of <typeparamref name="TTransformer" /> will be retrieved from the dependency injection container.
            Register <typeparamref name="TTransformer" /> with the desired service lifetime in <c>ConfigureServices</c>.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapDynamicPageRoute&lt;TTransformer&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTransformer&gt;&#xA; where TTransformer : Microsoft::AspNetCore::Mvc::Routing::DynamicRouteValueTransformer[System::Runtime::CompilerServices::Extension]&#xA; static void MapDynamicPageRoute(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ pattern, System::Object ^ state);" />
      <MemberSignature Language="C#" Value="public static void MapDynamicPageRoute&lt;TTransformer&gt; (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, object state) where TTransformer : Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer;" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapDynamicPageRoute&lt;(class Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer) TTransformer&gt;(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapDynamicPageRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapDynamicPageRoute(Of TTransformer As DynamicRouteValueTransformer) (endpoints As IEndpointRouteBuilder, pattern As String, state As Object)" />
      <MemberSignature Language="F#" Value="static member MapDynamicPageRoute : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string * obj -&gt; unit (requires 'ransformer :&gt; Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer)" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapDynamicPageRoute (endpoints, pattern, state)" />
      <MemberSignature Language="C#" Value="public static void MapDynamicPageRoute&lt;TTransformer&gt; (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, object? state) where TTransformer : Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer;" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTransformer">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Route")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Route")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TTransformer">The type of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />.</typeparam>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="pattern">The URL pattern of the route.</param>
        <param name="state">A state object to provide to the <typeparamref name="TTransformer" /> instance.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will
            attempt to select a page using the route values produced by <typeparamref name="TTransformer" />.
            </summary>
        <remarks>
          <para>
            This method allows the registration of a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> and <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />
            that combine to dynamically select a page using custom logic.
            </para>
          <para>
            The instance of <typeparamref name="TTransformer" /> will be retrieved from the dependency injection container.
            Register <typeparamref name="TTransformer" /> with the desired service lifetime in <c>ConfigureServices</c>.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapDynamicPageRoute&lt;TTransformer&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTransformer&gt;&#xA; where TTransformer : Microsoft::AspNetCore::Mvc::Routing::DynamicRouteValueTransformer[System::Runtime::CompilerServices::Extension]&#xA; static void MapDynamicPageRoute(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ pattern, System::Object ^ state, int order);" />
      <MemberSignature Language="C#" Value="public static void MapDynamicPageRoute&lt;TTransformer&gt; (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, object state, int order) where TTransformer : Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapDynamicPageRoute&lt;(class Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer) TTransformer&gt;(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, object state, int32 order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapDynamicPageRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapDynamicPageRoute(Of TTransformer As DynamicRouteValueTransformer) (endpoints As IEndpointRouteBuilder, pattern As String, state As Object, order As Integer)" />
      <MemberSignature Language="F#" Value="static member MapDynamicPageRoute : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string * obj * int -&gt; unit (requires 'ransformer :&gt; Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer)" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapDynamicPageRoute (endpoints, pattern, state, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTransformer">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Route")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Route")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="order" Type="System.Int32" Index="3" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TTransformer">The type of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />.</typeparam>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="pattern">The URL pattern of the route.</param>
        <param name="state">A state object to provide to the <typeparamref name="TTransformer" /> instance.</param>
        <param name="order">The matching order for the dynamic route.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will
            attempt to select a page using the route values produced by <typeparamref name="TTransformer" />.
            </summary>
        <remarks>
          <para>
            This method allows the registration of a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> and <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />
            that combine to dynamically select a page using custom logic.
            </para>
          <para>
            The instance of <typeparamref name="TTransformer" /> will be retrieved from the dependency injection container.
            Register <typeparamref name="TTransformer" /> with the desired service lifetime in <c>ConfigureServices</c>.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapFallbackToAreaPage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Builder::IEndpointConventionBuilder ^ MapFallbackToAreaPage(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ page, System::String ^ area);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToAreaPage (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string page, string area);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToAreaPage(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string page, string area) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapFallbackToAreaPage (endpoints As IEndpointRouteBuilder, page As String, area As String) As IEndpointConventionBuilder" />
      <MemberSignature Language="F#" Value="static member MapFallbackToAreaPage : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string * string -&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage (endpoints, page, area)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
        <Parameter Name="page" Type="System.String" />
        <Parameter Name="area" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="page">The action name.</param>
        <param name="area">The area name.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a page endpoint that
            matches <paramref name="page" />, and <paramref name="area" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" /> is intended to handle cases where URL path of
            the request does not contain a file name, and no other endpoint has matched. This is convenient for routing
            requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" /> registers an endpoint using the pattern
            <c>{*path:nonfile}</c>. The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" /> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the <c>path</c> route value
            will be available.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapFallbackToAreaPage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Builder::IEndpointConventionBuilder ^ MapFallbackToAreaPage(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ pattern, System::String ^ page, System::String ^ area);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToAreaPage (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, string page, string area);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToAreaPage(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, string page, string area) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapFallbackToAreaPage (endpoints As IEndpointRouteBuilder, pattern As String, page As String, area As String) As IEndpointConventionBuilder" />
      <MemberSignature Language="F#" Value="static member MapFallbackToAreaPage : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string * string * string -&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage (endpoints, pattern, page, area)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
        <Parameter Name="pattern" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Route")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Route")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="page" Type="System.String" />
        <Parameter Name="area" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="pattern">The route pattern.</param>
        <param name="page">The action name.</param>
        <param name="area">The area name.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a page endpoint that
            matches <paramref name="page" />, and <paramref name="area" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)" /> is intended to handle cases where URL path of
            the request does not contain a file name, and no other endpoint has matched. This is convenient for routing
            requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
          <para>
            The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
          <para>
            This overload will use the provided <paramref name="pattern" /> verbatim. Use the <c>:nonfile</c> route contraint
            to exclude requests for static files.
            </para>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToAreaPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)" /> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the route values provided by matching
            <paramref name="pattern" /> will be available.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapFallbackToPage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Builder::IEndpointConventionBuilder ^ MapFallbackToPage(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ page);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToPage (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToPage(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string page) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapFallbackToPage (endpoints As IEndpointRouteBuilder, page As String) As IEndpointConventionBuilder" />
      <MemberSignature Language="F#" Value="static member MapFallbackToPage : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string -&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage (endpoints, page)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
        <Parameter Name="page" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="page">The page name.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a page endpoint that
            matches <paramref name="page" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" /> is intended to handle cases where URL path of
            the request does not contain a file name, and no other endpoint has matched. This is convenient for routing
            requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" /> registers an endpoint using the pattern
            <c>{*path:nonfile}</c>. The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" /> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the <c>path</c> route value
            will be available.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapFallbackToPage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Builder::IEndpointConventionBuilder ^ MapFallbackToPage(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints, System::String ^ pattern, System::String ^ page);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToPage (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, string page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapFallbackToPage(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, string pattern, string page) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapFallbackToPage (endpoints As IEndpointRouteBuilder, pattern As String, page As String) As IEndpointConventionBuilder" />
      <MemberSignature Language="F#" Value="static member MapFallbackToPage : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * string * string -&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage (endpoints, pattern, page)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
        <Parameter Name="pattern" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("Route")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("Route")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="page" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="pattern">The route pattern.</param>
        <param name="page">The action name.</param>
        <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a page endpoint that
            matches <paramref name="page" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" /> is intended to handle cases where URL path of
            the request does not contain a file name, and no other endpoint has matched. This is convenient for routing
            requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
          <para>
            The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
          <para>
            This overload will use the provided <paramref name="pattern" /> verbatim. Use the <c>:nonfile</c> route contraint
            to exclude requests for static files.
            </para>
          <para>
            <see cref="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapFallbackToPage(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)" /> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the route values provided by matching
            <paramref name="pattern" /> will be available.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapRazorPages">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Builder::PageActionEndpointConventionBuilder ^ MapRazorPages(Microsoft::AspNetCore::Routing::IEndpointRouteBuilder ^ endpoints);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.PageActionEndpointConventionBuilder MapRazorPages (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.PageActionEndpointConventionBuilder MapRazorPages(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapRazorPages(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRazorPages (endpoints As IEndpointRouteBuilder) As PageActionEndpointConventionBuilder" />
      <MemberSignature Language="F#" Value="static member MapRazorPages : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder -&gt; Microsoft.AspNetCore.Builder.PageActionEndpointConventionBuilder" Usage="Microsoft.AspNetCore.Builder.RazorPagesEndpointRouteBuilderExtensions.MapRazorPages endpoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.RazorPages</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.PageActionEndpointConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" />.</param>
        <summary>
            Adds endpoints for Razor Pages to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" />.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Builder.PageActionEndpointConventionBuilder" /> for endpoints associated with Razor Pages.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
