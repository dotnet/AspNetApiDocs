<Type Name="HostFilteringOptions" FullName="Microsoft.AspNetCore.HostFiltering.HostFilteringOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class HostFilteringOptions" />
  <TypeSignature Language="C#" Value="public class HostFilteringOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostFilteringOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.HostFiltering.HostFilteringOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class HostFilteringOptions" />
  <TypeSignature Language="F#" Value="type HostFilteringOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.HostFiltering</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options for the HostFiltering middleware
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFilteringOptions();" />
      <MemberSignature Language="C#" Value="public HostFilteringOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HostFiltering</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedHosts">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AllowedHosts { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AllowedHosts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllowedHosts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.AllowedHosts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedHosts As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AllowedHosts : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.AllowedHosts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HostFiltering</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The hosts headers that are allowed to access this site. At least one value is required.
            </summary>
        <value>To be added.</value>
        <remarks>
          <list type="bullet">
            <item>
              <description>Port numbers must be excluded.</description>
            </item>
            <item>
              <description>A top level wildcard "*" allows all non-empty hosts.</description>
            </item>
            <item>
              <description>Subdomain wildcards are permitted. E.g. "*.example.com" matches subdomains like foo.example.com,
               but not the parent domain example.com.</description>
            </item>
            <item>
              <description>Unicode host names are allowed but will be converted to punycode for matching.</description>
            </item>
            <item>
              <description>IPv6 addresses must include their bounding brackets and be in their normalized form.</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEmptyHosts">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEmptyHosts { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool AllowEmptyHosts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEmptyHosts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.AllowEmptyHosts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEmptyHosts As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowEmptyHosts : bool with get, set" Usage="Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.AllowEmptyHosts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HostFiltering</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if requests without hosts are allowed. The default is true.
            </summary>
        <value>To be added.</value>
        <remarks>
            HTTP/1.0 does not require a host header.
            Http/1.1 requires a host header, but says the value may be empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeFailureMessage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeFailureMessage { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool IncludeFailureMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFailureMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.IncludeFailureMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeFailureMessage As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeFailureMessage : bool with get, set" Usage="Microsoft.AspNetCore.HostFiltering.HostFilteringOptions.IncludeFailureMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.HostFiltering</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if the 400 response should include a default message or be empty. This is enabled by default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
