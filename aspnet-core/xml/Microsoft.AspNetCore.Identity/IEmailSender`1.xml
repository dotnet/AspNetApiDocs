<Type Name="IEmailSender&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.IEmailSender&lt;TUser&gt;">
  <TypeSignature Language="C#" Value="public interface IEmailSender&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEmailSender`1&lt;class TUser&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IEmailSender`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEmailSender(Of TUser)" />
  <TypeSignature Language="F#" Value="type IEmailSender&lt;'User (requires 'User : null)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TUser">To be added.</typeparam>
    <summary>
            This API supports the ASP.NET Core Identity infrastructure and is not intended to be used as a general purpose
            email abstraction. It should be implemented by the application so the Identity infrastructure can send confirmation and password reset emails.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SendConfirmationLinkAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendConfirmationLinkAsync (TUser user, string email, string confirmationLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendConfirmationLinkAsync(!TUser user, string email, string confirmationLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IEmailSender`1.SendConfirmationLinkAsync(`0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendConfirmationLinkAsync (user As TUser, email As String, confirmationLink As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendConfirmationLinkAsync : 'User * string * string -&gt; System.Threading.Tasks.Task" Usage="iEmailSender.SendConfirmationLinkAsync (user, email, confirmationLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="confirmationLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="user">The user that is attempting to confirm their email.</param>
        <param name="email">The recipient's email address.</param>
        <param name="confirmationLink">The link to follow to confirm a user's email. Do not double encode this.</param>
        <summary>
            This API supports the ASP.NET Core Identity infrastructure and is not intended to be used as a general purpose
            email abstraction. It should be implemented by the application so the Identity infrastructure can send confirmation emails.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPasswordResetCodeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendPasswordResetCodeAsync (TUser user, string email, string resetCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendPasswordResetCodeAsync(!TUser user, string email, string resetCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IEmailSender`1.SendPasswordResetCodeAsync(`0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPasswordResetCodeAsync (user As TUser, email As String, resetCode As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendPasswordResetCodeAsync : 'User * string * string -&gt; System.Threading.Tasks.Task" Usage="iEmailSender.SendPasswordResetCodeAsync (user, email, resetCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="resetCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="user">The user that is attempting to reset their password.</param>
        <param name="email">The recipient's email address.</param>
        <param name="resetCode">The code to use to reset the user password. Do not double encode this.</param>
        <summary>
            This API supports the ASP.NET Core Identity infrastructure and is not intended to be used as a general purpose
            email abstraction. It should be implemented by the application so the Identity infrastructure can send password reset emails.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPasswordResetLinkAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendPasswordResetLinkAsync (TUser user, string email, string resetLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendPasswordResetLinkAsync(!TUser user, string email, string resetLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IEmailSender`1.SendPasswordResetLinkAsync(`0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPasswordResetLinkAsync (user As TUser, email As String, resetLink As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendPasswordResetLinkAsync : 'User * string * string -&gt; System.Threading.Tasks.Task" Usage="iEmailSender.SendPasswordResetLinkAsync (user, email, resetLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="resetLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="user">The user that is attempting to reset their password.</param>
        <param name="email">The recipient's email address.</param>
        <param name="resetLink">The link to follow to reset the user password. Do not double encode this.</param>
        <summary>
            This API supports the ASP.NET Core Identity infrastructure and is not intended to be used as a general purpose
            email abstraction. It should be implemented by the application so the Identity infrastructure can send password reset emails.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
