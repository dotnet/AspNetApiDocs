<Type Name="IUserTwoFactorTokenProvider&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider&lt;TUser&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TUser&gt;&#xA; where TUser : classpublic interface class IUserTwoFactorTokenProvider" />
  <TypeSignature Language="C#" Value="public interface IUserTwoFactorTokenProvider&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUserTwoFactorTokenProvider`1&lt;class TUser&gt;" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUserTwoFactorTokenProvider(Of TUser)" />
  <TypeSignature Language="F#" Value="type IUserTwoFactorTokenProvider&lt;'User (requires 'User : null)&gt; = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IUserTwoFactorTokenProvider`1&lt;class TUser&gt;" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TUser">The type encapsulating a user.</typeparam>
    <summary>
            Provides an abstraction for two-factor token generators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanGenerateTwoFactorTokenAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ CanGenerateTwoFactorTokenAsync(Microsoft::AspNetCore::Identity::UserManager&lt;TUser&gt; ^ manager, TUser user);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; CanGenerateTwoFactorTokenAsync (Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; manager, TUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; CanGenerateTwoFactorTokenAsync(class Microsoft.AspNetCore.Identity.UserManager`1&lt;!TUser&gt; manager, !TUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1.CanGenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGenerateTwoFactorTokenAsync (manager As UserManager(Of TUser), user As TUser) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CanGenerateTwoFactorTokenAsync : Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt; * 'User -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iUserTwoFactorTokenProvider.CanGenerateTwoFactorTokenAsync (manager, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt;" />
        <Parameter Name="user" Type="TUser" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1" /> that can be used to retrieve user properties.</param>
        <param name="user">The user a token could be generated for.</param>
        <summary>
            Returns a flag indicating whether the token provider can generate a token suitable for two-factor authentication token for
            the specified <paramref name="user" />.
            </summary>
        <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the a flag indicating if a two
            factor token could be generated by this provider for the specified <paramref name="user" />.
            The task will return true if a two-factor authentication token could be generated, otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GenerateAsync(System::String ^ purpose, Microsoft::AspNetCore::Identity::UserManager&lt;TUser&gt; ^ manager, TUser user);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GenerateAsync (string purpose, Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; manager, TUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GenerateAsync(string purpose, class Microsoft.AspNetCore.Identity.UserManager`1&lt;!TUser&gt; manager, !TUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1.GenerateAsync(System.String,Microsoft.AspNetCore.Identity.UserManager{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateAsync (purpose As String, manager As UserManager(Of TUser), user As TUser) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GenerateAsync : string * Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt; * 'User -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iUserTwoFactorTokenProvider.GenerateAsync (purpose, manager, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="purpose" Type="System.String" />
        <Parameter Name="manager" Type="Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt;" />
        <Parameter Name="user" Type="TUser" />
      </Parameters>
      <Docs>
        <param name="purpose">The purpose the token will be used for.</param>
        <param name="manager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1" /> that can be used to retrieve user properties.</param>
        <param name="user">The user a token should be generated for.</param>
        <summary>
             Generates a token for the specified <paramref name="user" /> and <paramref name="purpose" />.
             </summary>
        <returns>
             The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the token for the specified
             <paramref name="user" /> and <paramref name="purpose" />.
             </returns>
        <remarks>
             The <paramref name="purpose" /> parameter allows a token generator to be used for multiple types of token whilst
             insuring a token for one purpose cannot be used for another. For example if you specified a purpose of "Email"
             and validated it with the same purpose a token with the purpose of TOTP would not pass the check even if it was
             for the same user.
            
             Implementations of <see cref="T:Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1" /> should validate that purpose is not null or empty to
             help with token separation.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ ValidateAsync(System::String ^ purpose, System::String ^ token, Microsoft::AspNetCore::Identity::UserManager&lt;TUser&gt; ^ manager, TUser user);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ValidateAsync (string purpose, string token, Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; manager, TUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ValidateAsync(string purpose, string token, class Microsoft.AspNetCore.Identity.UserManager`1&lt;!TUser&gt; manager, !TUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1.ValidateAsync(System.String,System.String,Microsoft.AspNetCore.Identity.UserManager{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAsync (purpose As String, token As String, manager As UserManager(Of TUser), user As TUser) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAsync : string * string * Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt; * 'User -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iUserTwoFactorTokenProvider.ValidateAsync (purpose, token, manager, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="purpose" Type="System.String" />
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="manager" Type="Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt;" />
        <Parameter Name="user" Type="TUser" />
      </Parameters>
      <Docs>
        <param name="purpose">The purpose the token will be used for.</param>
        <param name="token">The token to validate.</param>
        <param name="manager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1" /> that can be used to retrieve user properties.</param>
        <param name="user">The user a token should be validated for.</param>
        <summary>
            Returns a flag indicating whether the specified <paramref name="token" /> is valid for the given
            <paramref name="user" /> and <paramref name="purpose" />.
            </summary>
        <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the a flag indicating the result
            of validating the <paramref name="token"> for the specified </paramref><paramref name="user" /> and <paramref name="purpose" />.
            The task will return true if the token is valid, otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
