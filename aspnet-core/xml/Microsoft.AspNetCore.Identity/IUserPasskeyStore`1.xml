<Type Name="IUserPasskeyStore&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.IUserPasskeyStore&lt;TUser&gt;">
  <TypeSignature Language="C#" Value="public interface IUserPasskeyStore&lt;TUser&gt; : IDisposable, Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IUserPasskeyStore`1&lt;class TUser&gt; implements class Microsoft.AspNetCore.Identity.IUserStore`1&lt;!TUser&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IUserPasskeyStore`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUserPasskeyStore(Of TUser)&#xA;Implements IDisposable, IUserStore(Of TUser)" />
  <TypeSignature Language="F#" Value="type IUserPasskeyStore&lt;'User (requires 'User : null)&gt; = interface&#xA;    interface IUserStore&lt;'User (requires 'User : null)&gt;&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TUser">The type that represents a user.</typeparam>
    <summary>
            Provides an abstraction for storing passkey credentials for a user.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOrUpdatePasskeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddOrUpdatePasskeyAsync (TUser user, Microsoft.AspNetCore.Identity.UserPasskeyInfo passkey, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddOrUpdatePasskeyAsync(!TUser user, class Microsoft.AspNetCore.Identity.UserPasskeyInfo passkey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserPasskeyStore`1.AddOrUpdatePasskeyAsync(`0,Microsoft.AspNetCore.Identity.UserPasskeyInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdatePasskeyAsync (user As TUser, passkey As UserPasskeyInfo, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member AddOrUpdatePasskeyAsync : 'User * Microsoft.AspNetCore.Identity.UserPasskeyInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iUserPasskeyStore.AddOrUpdatePasskeyAsync (user, passkey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="passkey" Type="Microsoft.AspNetCore.Identity.UserPasskeyInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user to create the passkey credential for.</param>
        <param name="passkey">The passkey to add.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Adds a new passkey credential in the store for the specified <paramref name="user" />,
            or updates an existing passkey.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByPasskeyIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TUser?&gt; FindByPasskeyIdAsync (byte[] credentialId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TUser&gt; FindByPasskeyIdAsync(unsigned int8[] credentialId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserPasskeyStore`1.FindByPasskeyIdAsync(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByPasskeyIdAsync (credentialId As Byte(), cancellationToken As CancellationToken) As Task(Of TUser)" />
      <MemberSignature Language="F#" Value="abstract member FindByPasskeyIdAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'User (requires 'User : null)&gt;" Usage="iUserPasskeyStore.FindByPasskeyIdAsync (credentialId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TUser&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialId" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="credentialId">The passkey credential id to search for.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Finds and returns a user, if any, associated with the specified passkey credential identifier.
            </summary>
        <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the user, if any, associated with the specified passkey credential id.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPasskeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.UserPasskeyInfo?&gt; FindPasskeyAsync (TUser user, byte[] credentialId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt; FindPasskeyAsync(!TUser user, unsigned int8[] credentialId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserPasskeyStore`1.FindPasskeyAsync(`0,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPasskeyAsync (user As TUser, credentialId As Byte(), cancellationToken As CancellationToken) As Task(Of UserPasskeyInfo)" />
      <MemberSignature Language="F#" Value="abstract member FindPasskeyAsync : 'User * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt;" Usage="iUserPasskeyStore.FindPasskeyAsync (user, credentialId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="credentialId" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user whose passkey should be retrieved.</param>
        <param name="credentialId">The credential id to search for.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Finds a passkey for the specified user with the specified credential id.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the user's passkey information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPasskeysAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt;&gt; GetPasskeysAsync (TUser user, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt;&gt; GetPasskeysAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserPasskeyStore`1.GetPasskeysAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPasskeysAsync (user As TUser, cancellationToken As CancellationToken) As Task(Of IList(Of UserPasskeyInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetPasskeysAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt;&gt;" Usage="iUserPasskeyStore.GetPasskeysAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Identity.UserPasskeyInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user whose passkeys should be retrieved.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the passkey credentials for the specified <paramref name="user" />.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing a list of the user's passkeys.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePasskeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemovePasskeyAsync (TUser user, byte[] credentialId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemovePasskeyAsync(!TUser user, unsigned int8[] credentialId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserPasskeyStore`1.RemovePasskeyAsync(`0,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePasskeyAsync (user As TUser, credentialId As Byte(), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemovePasskeyAsync : 'User * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iUserPasskeyStore.RemovePasskeyAsync (user, credentialId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="credentialId" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user to remove the passkey credential from.</param>
        <param name="credentialId">The credential id of the passkey to remove.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Removes a passkey credential from the specified <paramref name="user" />.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
