<Type Name="IdentityPasskeyOptions" FullName="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions">
  <TypeSignature Language="C#" Value="public class IdentityPasskeyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IdentityPasskeyOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class IdentityPasskeyOptions" />
  <TypeSignature Language="F#" Value="type IdentityPasskeyOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Specifies options for passkey requirements.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdentityPasskeyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestationConveyancePreference">
      <MemberSignature Language="C#" Value="public string? AttestationConveyancePreference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttestationConveyancePreference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.AttestationConveyancePreference" />
      <MemberSignature Language="VB.NET" Value="Public Property AttestationConveyancePreference As String" />
      <MemberSignature Language="F#" Value="member this.AttestationConveyancePreference : string with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.AttestationConveyancePreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the attestation conveyance preference.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option only applies when creating a new passkey, and already-registered passkeys are not affected by it.
            To validate the attestation statement of a passkey during passkey creation, provide a value for the
            <see cref="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.VerifyAttestationStatement" /> option.
            </para>
          <para>
            Possible values are "none", "indirect", "direct", and "enterprise".
            </para>
          <para>
            If left <see langword="null" />, the browser defaults to "none".
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#enumdef-attestationconveyancepreference" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticatorAttachment">
      <MemberSignature Language="C#" Value="public string? AuthenticatorAttachment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticatorAttachment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.AuthenticatorAttachment" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticatorAttachment As String" />
      <MemberSignature Language="F#" Value="member this.AuthenticatorAttachment : string with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.AuthenticatorAttachment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the allowed authenticator attachment.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option only applies when creating a new passkey, and already-registered passkeys are not affected by it.
            </para>
          <para>
            Possible values are "platform" and "cross-platform".
            </para>
          <para>
            If left <see langword="null" />, any authenticator attachment modality is allowed.
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#enumdef-authenticatorattachment" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticatorTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AuthenticatorTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AuthenticatorTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.AuthenticatorTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticatorTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.AuthenticatorTimeout : TimeSpan with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.AuthenticatorTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time that the browser should wait for the authenticator to provide a passkey.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option applies to both creating a new passkey and requesting an existing passkey.
            This is treated as a hint to the browser, and the browser may choose to ignore it.
            </para>
          <para>
            The default value is 5 minutes.
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialcreationoptions-timeout" />
            and <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialrequestoptions-timeout" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChallengeSize">
      <MemberSignature Language="C#" Value="public int ChallengeSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChallengeSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ChallengeSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ChallengeSize As Integer" />
      <MemberSignature Language="F#" Value="member this.ChallengeSize : int with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ChallengeSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the size of the challenge in bytes sent to the client during attestation and assertion.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option applies to both creating a new passkey and requesting an existing passkey.
            </para>
          <para>
            The default value is 32 bytes.
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialcreationoptions-challenge" />
            and <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialrequestoptions-challenge" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAllowedAlgorithm">
      <MemberSignature Language="C#" Value="public Func&lt;int,bool&gt;? IsAllowedAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;int32, bool&gt; IsAllowedAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.IsAllowedAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAllowedAlgorithm As Func(Of Integer, Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsAllowedAlgorithm : Func&lt;int, bool&gt; with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.IsAllowedAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Int32,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a function that determines whether the given COSE algorithm identifier
            is allowed for passkey operations.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option only applies when creating a new passkey, and already-registered passkeys are not affected by it.
            </para>
          <para>
            If left <see langword="null" />, all supported algorithms are allowed.
            </para>
          <para>
            See <see href="https://www.iana.org/assignments/cose/cose.xhtml#algorithms" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidentKeyRequirement">
      <MemberSignature Language="C#" Value="public string? ResidentKeyRequirement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResidentKeyRequirement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ResidentKeyRequirement" />
      <MemberSignature Language="VB.NET" Value="Public Property ResidentKeyRequirement As String" />
      <MemberSignature Language="F#" Value="member this.ResidentKeyRequirement : string with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ResidentKeyRequirement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the extent to which the server desires to create a client-side discoverable credential.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option only applies when creating a new passkey, and is not enforced on the server.
            </para>
          <para>
            Possible values are "discouraged", "preferred", or "required".
            </para>
          <para>
            If left <see langword="null" />, the browser defaults to "preferred".
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#enumdef-residentkeyrequirement" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerDomain">
      <MemberSignature Language="C#" Value="public string? ServerDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerDomain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ServerDomain" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerDomain As String" />
      <MemberSignature Language="F#" Value="member this.ServerDomain : string with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ServerDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the effective domain of the server.
            This should be unique and will be used as the identity for the server.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option applies to both creating a new passkey and requesting an existing passkey.
            </para>
          <para>
            If left <see langword="null" />, the server's origin may be used instead.
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#rp-id" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserVerificationRequirement">
      <MemberSignature Language="C#" Value="public string? UserVerificationRequirement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserVerificationRequirement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.UserVerificationRequirement" />
      <MemberSignature Language="VB.NET" Value="Public Property UserVerificationRequirement As String" />
      <MemberSignature Language="F#" Value="member this.UserVerificationRequirement : string with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.UserVerificationRequirement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the user verification requirement.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option applies to both creating a new passkey and requesting an existing passkey.
            </para>
          <para>
            Possible values are "required", "preferred", and "discouraged".
            </para>
          <para>
            If left <see langword="null" />, the browser defaults to "preferred".
            </para>
          <para>
            See <see href="https://www.w3.org/TR/webauthn-3/#enumdef-userverificationrequirement" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateOrigin">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Identity.PasskeyOriginValidationContext,System.Threading.Tasks.ValueTask&lt;bool&gt;&gt;? ValidateOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Identity.PasskeyOriginValidationContext, valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt;&gt; ValidateOrigin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ValidateOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateOrigin As Func(Of PasskeyOriginValidationContext, ValueTask(Of Boolean))" />
      <MemberSignature Language="F#" Value="member this.ValidateOrigin : Func&lt;Microsoft.AspNetCore.Identity.PasskeyOriginValidationContext, System.Threading.Tasks.ValueTask&lt;bool&gt;&gt; with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.ValidateOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 0 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 0 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Identity.PasskeyOriginValidationContext,System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a function that validates the origin of the request.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option applies to both creating a new passkey and requesting an existing passkey.
            </para>
          <para>
            If left <see langword="null" />, cross-origin requests are disallowed, and the request is only
            considered valid if the request's origin header matches the credential's origin.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAttestationStatement">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationStatementVerificationContext,System.Threading.Tasks.ValueTask&lt;bool&gt;&gt;? VerifyAttestationStatement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Identity.PasskeyAttestationStatementVerificationContext, valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt;&gt; VerifyAttestationStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.VerifyAttestationStatement" />
      <MemberSignature Language="VB.NET" Value="Public Property VerifyAttestationStatement As Func(Of PasskeyAttestationStatementVerificationContext, ValueTask(Of Boolean))" />
      <MemberSignature Language="F#" Value="member this.VerifyAttestationStatement : Func&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationStatementVerificationContext, System.Threading.Tasks.ValueTask&lt;bool&gt;&gt; with get, set" Usage="Microsoft.AspNetCore.Identity.IdentityPasskeyOptions.VerifyAttestationStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 0 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 0 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationStatementVerificationContext,System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a function that verifies the attestation statement of a passkey.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This option only applies when creating a new passkey, and already-registered passkeys are not affected by it.
            </para>
          <para>
            If left <see langword="null" />, this function does not perform any verification and always returns <see langword="true" />.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
