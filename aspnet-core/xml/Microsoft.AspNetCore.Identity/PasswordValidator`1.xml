<Type Name="PasswordValidator&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.PasswordValidator&lt;TUser&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TUser&gt;&#xA; where TUser : classpublic ref class PasswordValidator : Microsoft::AspNetCore::Identity::IPasswordValidator&lt;TUser&gt;" />
  <TypeSignature Language="C#" Value="public class PasswordValidator&lt;TUser&gt; : Microsoft.AspNetCore.Identity.IPasswordValidator&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasswordValidator`1&lt;class TUser&gt; extends System.Object implements class Microsoft.AspNetCore.Identity.IPasswordValidator`1&lt;!TUser&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.PasswordValidator`1" />
  <TypeSignature Language="VB.NET" Value="Public Class PasswordValidator(Of TUser)&#xA;Implements IPasswordValidator(Of TUser)" />
  <TypeSignature Language="F#" Value="type PasswordValidator&lt;'User (requires 'User : null)&gt; = class&#xA;    interface IPasswordValidator&lt;'User (requires 'User : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IPasswordValidator&lt;TUser&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TUser">The type that represents a user.</typeparam>
    <summary>
            Provides the default password policy for Identity.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordValidator (Microsoft.AspNetCore.Identity.IdentityErrorDescriber errors = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Identity.IdentityErrorDescriber errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasswordValidator`1.#ctor(Microsoft.AspNetCore.Identity.IdentityErrorDescriber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional errors As IdentityErrorDescriber = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.PasswordValidator&lt;'User (requires 'User : null)&gt; : Microsoft.AspNetCore.Identity.IdentityErrorDescriber -&gt; Microsoft.AspNetCore.Identity.PasswordValidator&lt;'User (requires 'User : null)&gt;" Usage="new Microsoft.AspNetCore.Identity.PasswordValidator&lt;'User (requires 'User : null)&gt; errors" />
      <MemberSignature Language="C#" Value="public PasswordValidator (Microsoft.AspNetCore.Identity.IdentityErrorDescriber? errors = default);" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="errors" Type="Microsoft.AspNetCore.Identity.IdentityErrorDescriber" />
      </Parameters>
      <Docs>
        <param name="errors">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber" /> to retrieve error text from.</param>
        <summary>
            Constructions a new instance of <see cref="T:Microsoft.AspNetCore.Identity.PasswordValidator`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Describer">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Identity::IdentityErrorDescriber ^ Describer { Microsoft::AspNetCore::Identity::IdentityErrorDescriber ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Identity.IdentityErrorDescriber Describer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Identity.IdentityErrorDescriber Describer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasswordValidator`1.Describer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Describer As IdentityErrorDescriber" />
      <MemberSignature Language="F#" Value="member this.Describer : Microsoft.AspNetCore.Identity.IdentityErrorDescriber" Usage="Microsoft.AspNetCore.Identity.PasswordValidator&lt;'User (requires 'User : null)&gt;.Describer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityErrorDescriber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber" /> used to supply error text.
            </summary>
        <value>The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber" /> used to supply error text.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigit(char c);" />
      <MemberSignature Language="C#" Value="public virtual bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasswordValidator`1.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsDigit : char -&gt; bool&#xA;override this.IsDigit : char -&gt; bool" Usage="passwordValidator.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The character to check if it is a digit.</param>
        <summary>
            Returns a flag indicating whether the supplied character is a digit.
            </summary>
        <returns>True if the character is a digit, otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="C#" Value="public virtual bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasswordValidator`1.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsLetterOrDigit : char -&gt; bool&#xA;override this.IsLetterOrDigit : char -&gt; bool" Usage="passwordValidator.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The character to check if it is an ASCII letter or digit.</param>
        <summary>
            Returns a flag indicating whether the supplied character is an ASCII letter or digit.
            </summary>
        <returns>True if the character is an ASCII letter or digit, otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLower(char c);" />
      <MemberSignature Language="C#" Value="public virtual bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasswordValidator`1.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsLower : char -&gt; bool&#xA;override this.IsLower : char -&gt; bool" Usage="passwordValidator.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The character to check if it is a lower case ASCII letter.</param>
        <summary>
            Returns a flag indicating whether the supplied character is a lower case ASCII letter.
            </summary>
        <returns>True if the character is a lower case ASCII letter, otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUpper(char c);" />
      <MemberSignature Language="C#" Value="public virtual bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasswordValidator`1.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsUpper : char -&gt; bool&#xA;override this.IsUpper : char -&gt; bool" Usage="passwordValidator.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The character to check if it is an upper case ASCII letter.</param>
        <summary>
            Returns a flag indicating whether the supplied character is an upper case ASCII letter.
            </summary>
        <returns>True if the character is an upper case ASCII letter, otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Identity::IdentityResult ^&gt; ^ ValidateAsync(Microsoft::AspNetCore::Identity::UserManager&lt;TUser&gt; ^ manager, TUser user, System::String ^ password);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; ValidateAsync (Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; manager, TUser user, string password);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; ValidateAsync(class Microsoft.AspNetCore.Identity.UserManager`1&lt;!TUser&gt; manager, !TUser user, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasswordValidator`1.ValidateAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateAsync (manager As UserManager(Of TUser), user As TUser, password As String) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAsync : Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt; * 'User * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;&#xA;override this.ValidateAsync : Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt; * 'User * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="passwordValidator.ValidateAsync (manager, user, password)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; ValidateAsync (Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; manager, TUser user, string? password);" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IPasswordValidator`1.ValidateAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt;" />
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="password" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1" /> to retrieve the <paramref name="user" /> properties from.</param>
        <param name="user">The user whose password should be validated.</param>
        <param name="password">The password supplied for validation</param>
        <summary>
            Validates a password as an asynchronous operation.
            </summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
