<Type Name="DefaultPasskeyHandler&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.DefaultPasskeyHandler&lt;TUser&gt;">
  <TypeSignature Language="C#" Value="public class DefaultPasskeyHandler&lt;TUser&gt; : Microsoft.AspNetCore.Identity.IPasskeyHandler&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPasskeyHandler`1&lt;class TUser&gt; extends System.Object implements class Microsoft.AspNetCore.Identity.IPasskeyHandler`1&lt;!TUser&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultPasskeyHandler(Of TUser)&#xA;Implements IPasskeyHandler(Of TUser)" />
  <TypeSignature Language="F#" Value="type DefaultPasskeyHandler&lt;'User (requires 'User : null)&gt; = class&#xA;    interface IPasskeyHandler&lt;'User (requires 'User : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IPasskeyHandler&lt;TUser&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TUser">To be added.</typeparam>
    <summary>
            The default passkey handler.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPasskeyHandler (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Identity.IdentityOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Identity.IdentityOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of IdentityOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.DefaultPasskeyHandler&lt;'User (requires 'User : null)&gt; : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Identity.IdentityOptions&gt; -&gt; Microsoft.AspNetCore.Identity.DefaultPasskeyHandler&lt;'User (requires 'User : null)&gt;" Usage="new Microsoft.AspNetCore.Identity.DefaultPasskeyHandler&lt;'User (requires 'User : null)&gt; options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Identity.IdentityOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityOptions" />.</param>
        <summary>
            Constructs a new <see cref="T:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidOriginAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; IsValidOriginAsync (Microsoft.AspNetCore.Identity.PasskeyOriginInfo originInfo, Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidOriginAsync(valuetype Microsoft.AspNetCore.Identity.PasskeyOriginInfo originInfo, class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.IsValidOriginAsync(Microsoft.AspNetCore.Identity.PasskeyOriginInfo,Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValidOriginAsync (originInfo As PasskeyOriginInfo, httpContext As HttpContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsValidOriginAsync : Microsoft.AspNetCore.Identity.PasskeyOriginInfo * Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsValidOriginAsync : Microsoft.AspNetCore.Identity.PasskeyOriginInfo * Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="defaultPasskeyHandler.IsValidOriginAsync (originInfo, httpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originInfo" Type="Microsoft.AspNetCore.Identity.PasskeyOriginInfo" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="originInfo">Information about the passkey's origin.</param>
        <param name="httpContext">The HTTP context for the request.</param>
        <summary>
            Determines whether the specified origin is valid for passkey operations.
            </summary>
        <returns>
          <c>true</c> if the origin is valid; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAssertionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;TUser&gt;&gt; PerformAssertionAsync (Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;TUser&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.PasskeyAssertionResult`1&lt;!TUser&gt;&gt; PerformAssertionAsync(class Microsoft.AspNetCore.Identity.PasskeyAssertionContext`1&lt;!TUser&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.PerformAssertionAsync(Microsoft.AspNetCore.Identity.PasskeyAssertionContext{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function PerformAssertionAsync (context As PasskeyAssertionContext(Of TUser)) As Task(Of PasskeyAssertionResult(Of TUser))" />
      <MemberSignature Language="F#" Value="abstract member PerformAssertionAsync : Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;'User&gt;&gt;&#xA;override this.PerformAssertionAsync : Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;'User&gt;&gt;" Usage="defaultPasskeyHandler.PerformAssertionAsync context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IPasskeyHandler`1.PerformAssertionAsync(Microsoft.AspNetCore.Identity.PasskeyAssertionContext{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;TUser&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;TUser&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="PerformAssertionCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;TUser&gt;&gt; PerformAssertionCoreAsync (Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;TUser&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.PasskeyAssertionResult`1&lt;!TUser&gt;&gt; PerformAssertionCoreAsync(class Microsoft.AspNetCore.Identity.PasskeyAssertionContext`1&lt;!TUser&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.PerformAssertionCoreAsync(Microsoft.AspNetCore.Identity.PasskeyAssertionContext{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function PerformAssertionCoreAsync (context As PasskeyAssertionContext(Of TUser)) As Task(Of PasskeyAssertionResult(Of TUser))" />
      <MemberSignature Language="F#" Value="abstract member PerformAssertionCoreAsync : Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;'User&gt;&gt;&#xA;override this.PerformAssertionCoreAsync : Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;'User&gt;&gt;" Usage="defaultPasskeyHandler.PerformAssertionCoreAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAssertionResult&lt;TUser&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Identity.PasskeyAssertionContext&lt;TUser&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The context containing necessary information for passkey assertion.</param>
        <summary>
            Performs passkey assertion using the provided credential JSON, original options JSON, and optional user.
            </summary>
        <returns>A task object representing the asynchronous operation containing the <see cref="T:Microsoft.AspNetCore.Identity.PasskeyAssertionResult`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAttestationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt; PerformAttestationAsync (Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;TUser&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt; PerformAttestationAsync(class Microsoft.AspNetCore.Identity.PasskeyAttestationContext`1&lt;!TUser&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.PerformAttestationAsync(Microsoft.AspNetCore.Identity.PasskeyAttestationContext{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function PerformAttestationAsync (context As PasskeyAttestationContext(Of TUser)) As Task(Of PasskeyAttestationResult)" />
      <MemberSignature Language="F#" Value="abstract member PerformAttestationAsync : Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt;&#xA;override this.PerformAttestationAsync : Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt;" Usage="defaultPasskeyHandler.PerformAttestationAsync context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IPasskeyHandler`1.PerformAttestationAsync(Microsoft.AspNetCore.Identity.PasskeyAttestationContext{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;TUser&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="PerformAttestationCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt; PerformAttestationCoreAsync (Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;TUser&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt; PerformAttestationCoreAsync(class Microsoft.AspNetCore.Identity.PasskeyAttestationContext`1&lt;!TUser&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.PerformAttestationCoreAsync(Microsoft.AspNetCore.Identity.PasskeyAttestationContext{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function PerformAttestationCoreAsync (context As PasskeyAttestationContext(Of TUser)) As Task(Of PasskeyAttestationResult)" />
      <MemberSignature Language="F#" Value="abstract member PerformAttestationCoreAsync : Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt;&#xA;override this.PerformAttestationCoreAsync : Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;'User (requires 'User : null)&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt;" Usage="defaultPasskeyHandler.PerformAttestationCoreAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.PasskeyAttestationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Identity.PasskeyAttestationContext&lt;TUser&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The context containing necessary information for passkey attestation.</param>
        <summary>
            Performs passkey attestation using the provided credential JSON and original options JSON.
            </summary>
        <returns>A task object representing the asynchronous operation containing the <see cref="T:Microsoft.AspNetCore.Identity.PasskeyAttestationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAttestationStatementAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; VerifyAttestationStatementAsync (ReadOnlyMemory&lt;byte&gt; attestationObject, ReadOnlyMemory&lt;byte&gt; clientDataHash, Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; VerifyAttestationStatementAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; attestationObject, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; clientDataHash, class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.DefaultPasskeyHandler`1.VerifyAttestationStatementAsync(System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VerifyAttestationStatementAsync (attestationObject As ReadOnlyMemory(Of Byte), clientDataHash As ReadOnlyMemory(Of Byte), httpContext As HttpContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member VerifyAttestationStatementAsync : ReadOnlyMemory&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; * Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.VerifyAttestationStatementAsync : ReadOnlyMemory&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; * Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="defaultPasskeyHandler.VerifyAttestationStatementAsync (attestationObject, clientDataHash, httpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationObject" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="clientDataHash" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attestationObject">The attestation object to verify. See <see href="https://www.w3.org/TR/webauthn-3/#attestation-object" />.</param>
        <param name="clientDataHash">The hash of the client data used during registration.</param>
        <param name="httpContext">The HTTP context for the request.</param>
        <summary>
            Verifies the attestation statement of a passkey.
            </summary>
        <returns>A task that represents the asynchronous operation. The task result contains true if the verification is successful; otherwise, false.</returns>
        <remarks>
            See <see href="https://www.w3.org/TR/webauthn-3/#verification-procedure" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
