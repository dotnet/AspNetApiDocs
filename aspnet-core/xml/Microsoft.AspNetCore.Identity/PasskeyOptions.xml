<Type Name="PasskeyOptions" FullName="Microsoft.AspNetCore.Identity.PasskeyOptions">
  <TypeSignature Language="C#" Value="public class PasskeyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasskeyOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.PasskeyOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PasskeyOptions" />
  <TypeSignature Language="F#" Value="type PasskeyOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Specifies options for passkey requirements.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasskeyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.PasskeyOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCrossOriginIframes">
      <MemberSignature Language="C#" Value="public bool AllowCrossOriginIframes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCrossOriginIframes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.AllowCrossOriginIframes" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCrossOriginIframes As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowCrossOriginIframes : bool with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.AllowCrossOriginIframes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether credentials from cross-origin iframes should be allowed.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see langword="false" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCurrentOrigin">
      <MemberSignature Language="C#" Value="public bool AllowCurrentOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCurrentOrigin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.AllowCurrentOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCurrentOrigin As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowCurrentOrigin : bool with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.AllowCurrentOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the current server's origin should be allowed for credentials.
            When true, the origin of the current request will be automatically allowed.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see langword="true" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedOrigins">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AllowedOrigins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllowedOrigins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.AllowedOrigins" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedOrigins As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AllowedOrigins : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.AllowedOrigins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the allowed origins for credential registration and assertion.
            When specified, these origins are explicitly allowed in addition to any origins allowed by other settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackedUpCredentialPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Identity.PasskeyOptions.CredentialBackupPolicy BackedUpCredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Identity.PasskeyOptions/CredentialBackupPolicy BackedUpCredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.BackedUpCredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property BackedUpCredentialPolicy As PasskeyOptions.CredentialBackupPolicy" />
      <MemberSignature Language="F#" Value="member this.BackedUpCredentialPolicy : Microsoft.AspNetCore.Identity.PasskeyOptions.CredentialBackupPolicy with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.BackedUpCredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.PasskeyOptions+CredentialBackupPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether or not to accept a backed up credential.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see cref="F:Microsoft.AspNetCore.Identity.PasskeyOptions.CredentialBackupPolicy.Allowed" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackupEligibleCredentialPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Identity.PasskeyOptions.CredentialBackupPolicy BackupEligibleCredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Identity.PasskeyOptions/CredentialBackupPolicy BackupEligibleCredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.BackupEligibleCredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property BackupEligibleCredentialPolicy As PasskeyOptions.CredentialBackupPolicy" />
      <MemberSignature Language="F#" Value="member this.BackupEligibleCredentialPolicy : Microsoft.AspNetCore.Identity.PasskeyOptions.CredentialBackupPolicy with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.BackupEligibleCredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.PasskeyOptions+CredentialBackupPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether or not to accept a backup eligible credential.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see cref="F:Microsoft.AspNetCore.Identity.PasskeyOptions.CredentialBackupPolicy.Allowed" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChallengeSize">
      <MemberSignature Language="C#" Value="public int ChallengeSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChallengeSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.ChallengeSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ChallengeSize As Integer" />
      <MemberSignature Language="F#" Value="member this.ChallengeSize : int with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.ChallengeSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The size of the challenge in bytes sent to the client during WebAuthn attestation and assertion.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is 16 bytes.
            See <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialcreationoptions-challenge" />
            and <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialrequestoptions-challenge" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerDomain">
      <MemberSignature Language="C#" Value="public string? ServerDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerDomain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.ServerDomain" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerDomain As String" />
      <MemberSignature Language="F#" Value="member this.ServerDomain : string with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.ServerDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The effective domain of the server. Should be unique and will be used as the identity for the server.
            </summary>
        <value>To be added.</value>
        <remarks>
            If left <see langword="null" />, the server's origin may be used instead.
            See <see href="https://www.w3.org/TR/webauthn-3/#rp-id" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.PasskeyOptions.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="Microsoft.AspNetCore.Identity.PasskeyOptions.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time that the server is willing to wait for a passkey operation to complete.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is 1 minute.
            See <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialcreationoptions-timeout" />
            and <see href="https://www.w3.org/TR/webauthn-3/#dom-publickeycredentialrequestoptions-timeout" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
