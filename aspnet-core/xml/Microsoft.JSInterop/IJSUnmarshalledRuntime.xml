<Type Name="IJSUnmarshalledRuntime" FullName="Microsoft.JSInterop.IJSUnmarshalledRuntime">
  <TypeSignature Language="C++ CLI" Value="public interface class IJSUnmarshalledRuntime" />
  <TypeSignature Language="C#" Value="public interface IJSUnmarshalledRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IJSUnmarshalledRuntime" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JSInterop.IJSUnmarshalledRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Interface IJSUnmarshalledRuntime" />
  <TypeSignature Language="F#" Value="type IJSUnmarshalledRuntime = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JSInterop</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Represents an instance of a JavaScript runtime to which calls may be dispatched without JSON marshalling.
            Not all JavaScript runtimes support this capability. Currently it is only supported on WebAssembly and for
            security reasons, will never be supported for .NET code that runs on the server.
            This is an advanced mechanism that should only be used in performance-critical scenarios.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InvokeUnmarshalled&lt;TResult&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier);" />
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;TResult&gt; (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;TResult&gt;(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of TResult) (identifier As String) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The .NET type corresponding to the function's return value type.</typeparam>
        <param name="identifier">The identifier used when registering the target function.</param>
        <summary>
            Invokes the JavaScript function registered with the specified identifier.
            </summary>
        <returns>The result of the function invocation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUnmarshalled&lt;T0,TResult&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T0, typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier, T0 arg0);" />
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;T0,TResult&gt; (string identifier, T0 arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;T0, TResult&gt;(string identifier, !!T0 arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``2(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of T0, TResult) (identifier As String, arg0 As T0) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string * 'T0 -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled (identifier, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T0" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arg0" Type="T0" />
      </Parameters>
      <Docs>
        <typeparam name="T0">The type of the first argument.</typeparam>
        <typeparam name="TResult">The .NET type corresponding to the function's return value type.</typeparam>
        <param name="identifier">The identifier used when registering the target function.</param>
        <param name="arg0">The first argument.</param>
        <summary>
            Invokes the JavaScript function registered with the specified identifier.
            </summary>
        <returns>The result of the function invocation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUnmarshalled&lt;T0,T1,TResult&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T0, typename T1, typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier, T0 arg0, T1 arg1);" />
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;T0,T1,TResult&gt; (string identifier, T0 arg0, T1 arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;T0, T1, TResult&gt;(string identifier, !!T0 arg0, !!T1 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``3(System.String,``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of T0, T1, TResult) (identifier As String, arg0 As T0, arg1 As T1) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string * 'T0 * 'T1 -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled (identifier, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T0" />
        <TypeParameter Name="T1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arg0" Type="T0" />
        <Parameter Name="arg1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T0">The type of the first argument.</typeparam>
        <typeparam name="T1">The type of the second argument.</typeparam>
        <typeparam name="TResult">The .NET type corresponding to the function's return value type.</typeparam>
        <param name="identifier">The identifier used when registering the target function.</param>
        <param name="arg0">The first argument.</param>
        <param name="arg1">The second argument.</param>
        <summary>
            Invokes the JavaScript function registered with the specified identifier.
            </summary>
        <returns>The result of the function invocation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUnmarshalled&lt;T0,T1,T2,TResult&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T0, typename T1, typename T2, typename TResult&gt;&#xA; TResult InvokeUnmarshalled(System::String ^ identifier, T0 arg0, T1 arg1, T2 arg2);" />
      <MemberSignature Language="C#" Value="public TResult InvokeUnmarshalled&lt;T0,T1,T2,TResult&gt; (string identifier, T0 arg0, T1 arg1, T2 arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult InvokeUnmarshalled&lt;T0, T1, T2, TResult&gt;(string identifier, !!T0 arg0, !!T1 arg1, !!T2 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.IJSUnmarshalledRuntime.InvokeUnmarshalled``4(System.String,``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUnmarshalled(Of T0, T1, T2, TResult) (identifier As String, arg0 As T0, arg1 As T1, arg2 As T2) As TResult" />
      <MemberSignature Language="F#" Value="abstract member InvokeUnmarshalled : string * 'T0 * 'T1 * 'T2 -&gt; 'Result" Usage="iJSUnmarshalledRuntime.InvokeUnmarshalled (identifier, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-7.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete. Use JSImportAttribute instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T0" />
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arg0" Type="T0" />
        <Parameter Name="arg1" Type="T1" />
        <Parameter Name="arg2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T0">The type of the first argument.</typeparam>
        <typeparam name="T1">The type of the second argument.</typeparam>
        <typeparam name="T2">The type of the third argument.</typeparam>
        <typeparam name="TResult">The .NET type corresponding to the function's return value type.</typeparam>
        <param name="identifier">The identifier used when registering the target function.</param>
        <param name="arg0">The first argument.</param>
        <param name="arg1">The second argument.</param>
        <param name="arg2">The third argument.</param>
        <summary>
            Invokes the JavaScript function registered with the specified identifier.
            </summary>
        <returns>The result of the function invocation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
