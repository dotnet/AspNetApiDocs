<Type Name="RegisterPersistentComponentStateServiceCollectionExtensions" FullName="Microsoft.AspNetCore.Components.Infrastructure.RegisterPersistentComponentStateServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class RegisterPersistentComponentStateServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RegisterPersistentComponentStateServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Infrastructure.RegisterPersistentComponentStateServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Class RegisterPersistentComponentStateServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type RegisterPersistentComponentStateServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Infrastructure APIs for registering services that persist state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPersistentServiceRegistration&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddPersistentServiceRegistration&lt;TService&gt; (Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.AspNetCore.Components.IComponentRenderMode componentRenderMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddPersistentServiceRegistration&lt;TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.AspNetCore.Components.IComponentRenderMode componentRenderMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Infrastructure.RegisterPersistentComponentStateServiceCollectionExtensions.AddPersistentServiceRegistration``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Components.IComponentRenderMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddPersistentServiceRegistration(Of TService) (services As IServiceCollection, componentRenderMode As IComponentRenderMode) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddPersistentServiceRegistration : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.AspNetCore.Components.IComponentRenderMode -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Components.Infrastructure.RegisterPersistentComponentStateServiceCollectionExtensions.AddPersistentServiceRegistration (services, componentRenderMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="componentRenderMode" Type="Microsoft.AspNetCore.Components.IComponentRenderMode" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The service type to register for persistence.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="componentRenderMode">The <see cref="T:Microsoft.AspNetCore.Components.IComponentRenderMode" /> to register the service for.</param>
        <summary>
            Saves <typeparamref name="TService" /> state when the application is persisting state and restores it at the appropriate time automatically.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>
            Only public properties annotated with <see cref="T:Microsoft.AspNetCore.Components.PersistentStateAttribute" /> are persisted and restored.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
