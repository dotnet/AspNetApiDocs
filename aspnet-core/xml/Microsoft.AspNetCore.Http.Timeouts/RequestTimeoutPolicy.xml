<Type Name="RequestTimeoutPolicy" FullName="Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy">
  <TypeSignature Language="C#" Value="public sealed class RequestTimeoutPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RequestTimeoutPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RequestTimeoutPolicy" />
  <TypeSignature Language="F#" Value="type RequestTimeoutPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines the policy for request timeouts middleware.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestTimeoutPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan? Timeout { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The timeout to apply.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutStatusCode">
      <MemberSignature Language="C#" Value="public int? TimeoutStatusCode { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TimeoutStatusCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.TimeoutStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeoutStatusCode As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TimeoutStatusCode : Nullable&lt;int&gt; with get, set" Usage="Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.TimeoutStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Status code to be set in response when a timeout results in an <see cref="T:System.OperationCanceledException" /> being caught by the middleware.
            The status code cannot be applied if the response has already started.
            504 will be used if none is specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeoutResponse">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.RequestDelegate? WriteTimeoutResponse { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.RequestDelegate WriteTimeoutResponse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.WriteTimeoutResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteTimeoutResponse As RequestDelegate" />
      <MemberSignature Language="F#" Value="member this.WriteTimeoutResponse : Microsoft.AspNetCore.Http.RequestDelegate with get, set" Usage="Microsoft.AspNetCore.Http.Timeouts.RequestTimeoutPolicy.WriteTimeoutResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.RequestDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A callback for creating a timeout response.
            This is called if a timeout results in an <see cref="T:System.OperationCanceledException" /> being caught by the middleware.
            The status code will be set first.
            The status code and callback cannot be applied if the response has already started.
            The default behavior is an empty response with only the status code.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
