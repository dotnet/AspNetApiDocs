<Type Name="IAuthenticatedEncryptor" FullName="Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor">
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthenticatedEncryptor" />
  <TypeSignature Language="C#" Value="public interface IAuthenticatedEncryptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthenticatedEncryptor" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthenticatedEncryptor" />
  <TypeSignature Language="F#" Value="type IAuthenticatedEncryptor = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAuthenticatedEncryptor" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The basic interface for providing an authenticated encryption and decryption routine.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(ArraySegment&lt;System::Byte&gt; ciphertext, ArraySegment&lt;System::Byte&gt; additionalAuthenticatedData);" />
      <MemberSignature Language="C#" Value="public byte[] Decrypt (ArraySegment&lt;byte&gt; ciphertext, ArraySegment&lt;byte&gt; additionalAuthenticatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Decrypt(valuetype System.ArraySegment`1&lt;unsigned int8&gt; ciphertext, valuetype System.ArraySegment`1&lt;unsigned int8&gt; additionalAuthenticatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (ciphertext As ArraySegment(Of Byte), additionalAuthenticatedData As ArraySegment(Of Byte)) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Decrypt : ArraySegment&lt;byte&gt; * ArraySegment&lt;byte&gt; -&gt; byte[]" Usage="iAuthenticatedEncryptor.Decrypt (ciphertext, additionalAuthenticatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ciphertext" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="additionalAuthenticatedData" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="ciphertext">The ciphertext (including authentication tag) to decrypt.</param>
        <param name="additionalAuthenticatedData">Any ancillary data which was used during computation
            of the authentication tag. The same AAD must have been specified in the corresponding
            call to 'Encrypt'.</param>
        <summary>
            Validates the authentication tag of and decrypts a blob of encrypted data.
            </summary>
        <returns>The original plaintext data (if the authentication tag was validated and decryption succeeded).</returns>
        <remarks>All cryptography-related exceptions should be homogenized to CryptographicException.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ArraySegment&lt;System::Byte&gt; plaintext, ArraySegment&lt;System::Byte&gt; additionalAuthenticatedData);" />
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ArraySegment&lt;byte&gt; plaintext, ArraySegment&lt;byte&gt; additionalAuthenticatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Encrypt(valuetype System.ArraySegment`1&lt;unsigned int8&gt; plaintext, valuetype System.ArraySegment`1&lt;unsigned int8&gt; additionalAuthenticatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (plaintext As ArraySegment(Of Byte), additionalAuthenticatedData As ArraySegment(Of Byte)) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Encrypt : ArraySegment&lt;byte&gt; * ArraySegment&lt;byte&gt; -&gt; byte[]" Usage="iAuthenticatedEncryptor.Encrypt (plaintext, additionalAuthenticatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="additionalAuthenticatedData" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="plaintext">The plaintext to encrypt. This input may be zero bytes in length.</param>
        <param name="additionalAuthenticatedData">A piece of data which will not be included in
            the returned ciphertext but which will still be covered by the authentication tag.
            This input may be zero bytes in length. The same AAD must be specified in the corresponding
            call to Decrypt.</param>
        <summary>
            Encrypts and tamper-proofs a piece of data.
            </summary>
        <returns>The ciphertext blob, including authentication tag.</returns>
        <remarks>All cryptography-related exceptions should be homogenized to CryptographicException.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
