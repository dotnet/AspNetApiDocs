<Type Name="RazorCodeLanguage" FullName="Microsoft.AspNetCore.Razor.RazorCodeLanguage">
  <TypeSignature Language="C++ CLI" Value="public ref class RazorCodeLanguage abstract" />
  <TypeSignature Language="C#" Value="public abstract class RazorCodeLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RazorCodeLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.RazorCodeLanguage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RazorCodeLanguage" />
  <TypeSignature Language="F#" Value="type RazorCodeLanguage = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a code language in Razor.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RazorCodeLanguage();" />
      <MemberSignature Language="C#" Value="protected RazorCodeLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorCodeLanguage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChunkGenerator">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::AspNetCore::Razor::Chunks::Generators::RazorChunkGenerator ^ CreateChunkGenerator(System::String ^ className, System::String ^ rootNamespaceName, System::String ^ sourceFileName, Microsoft::AspNetCore::Razor::RazorEngineHost ^ host);" />
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator CreateChunkGenerator (string className, string rootNamespaceName, string sourceFileName, Microsoft.AspNetCore.Razor.RazorEngineHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator CreateChunkGenerator(string className, string rootNamespaceName, string sourceFileName, class Microsoft.AspNetCore.Razor.RazorEngineHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorCodeLanguage.CreateChunkGenerator(System.String,System.String,System.String,Microsoft.AspNetCore.Razor.RazorEngineHost)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateChunkGenerator (className As String, rootNamespaceName As String, sourceFileName As String, host As RazorEngineHost) As RazorChunkGenerator" />
      <MemberSignature Language="F#" Value="abstract member CreateChunkGenerator : string * string * string * Microsoft.AspNetCore.Razor.RazorEngineHost -&gt; Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator" Usage="razorCodeLanguage.CreateChunkGenerator (className, rootNamespaceName, sourceFileName, host)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespaceName" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="host" Type="Microsoft.AspNetCore.Razor.RazorEngineHost" />
      </Parameters>
      <Docs>
        <param name="className">To be added.</param>
        <param name="rootNamespaceName">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <param name="host">To be added.</param>
        <summary>
            Constructs the chunk generator.  Must return a new instance on EVERY call to ensure thread-safety
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCodeGenerator">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator ^ CreateCodeGenerator(Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext ^ chunkGeneratorContext);" />
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator CreateCodeGenerator (Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext chunkGeneratorContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator CreateCodeGenerator(class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext chunkGeneratorContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorCodeLanguage.CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCodeGenerator (chunkGeneratorContext As CodeGeneratorContext) As CodeGenerator" />
      <MemberSignature Language="F#" Value="abstract member CreateCodeGenerator : Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" Usage="razorCodeLanguage.CreateCodeGenerator chunkGeneratorContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunkGeneratorContext" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
      </Parameters>
      <Docs>
        <param name="chunkGeneratorContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCodeParser">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::AspNetCore::Razor::Parser::ParserBase ^ CreateCodeParser();" />
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Razor.Parser.ParserBase CreateCodeParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Parser.ParserBase CreateCodeParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorCodeLanguage.CreateCodeParser" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCodeParser () As ParserBase" />
      <MemberSignature Language="F#" Value="abstract member CreateCodeParser : unit -&gt; Microsoft.AspNetCore.Razor.Parser.ParserBase" Usage="razorCodeLanguage.CreateCodeParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Constructs the code parser.  Must return a new instance on EVERY call to ensure thread-safety
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLanguageByExtension">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::AspNetCore::Razor::RazorCodeLanguage ^ GetLanguageByExtension(System::String ^ fileExtension);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Razor.RazorCodeLanguage GetLanguageByExtension (string fileExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Razor.RazorCodeLanguage GetLanguageByExtension(string fileExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorCodeLanguage.GetLanguageByExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageByExtension (fileExtension As String) As RazorCodeLanguage" />
      <MemberSignature Language="F#" Value="static member GetLanguageByExtension : string -&gt; Microsoft.AspNetCore.Razor.RazorCodeLanguage" Usage="Microsoft.AspNetCore.Razor.RazorCodeLanguage.GetLanguageByExtension fileExtension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.RazorCodeLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileExtension">The extension, with or without a "."</param>
        <summary>
            Gets the RazorCodeLanguage registered for the specified file extension
            </summary>
        <returns>The language registered for that extension</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LanguageName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract string LanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LanguageName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorCodeLanguage.LanguageName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LanguageName As String" />
      <MemberSignature Language="F#" Value="member this.LanguageName : string" Usage="Microsoft.AspNetCore.Razor.RazorCodeLanguage.LanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the language (for use in System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Languages">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::AspNetCore::Razor::RazorCodeLanguage ^&gt; ^ Languages { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::AspNetCore::Razor::RazorCodeLanguage ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,Microsoft.AspNetCore.Razor.RazorCodeLanguage&gt; Languages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.AspNetCore.Razor.RazorCodeLanguage&gt; Languages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorCodeLanguage.Languages" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Languages As IDictionary(Of String, RazorCodeLanguage)" />
      <MemberSignature Language="F#" Value="static member Languages : System.Collections.Generic.IDictionary&lt;string, Microsoft.AspNetCore.Razor.RazorCodeLanguage&gt;" Usage="Microsoft.AspNetCore.Razor.RazorCodeLanguage.Languages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.AspNetCore.Razor.RazorCodeLanguage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of registered languages mapped to file extensions (without a ".")
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
