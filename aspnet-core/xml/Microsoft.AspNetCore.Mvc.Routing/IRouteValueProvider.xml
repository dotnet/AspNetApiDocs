<Type Name="IRouteValueProvider" FullName="Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider">
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteValueProvider" />
  <TypeSignature Language="C#" Value="public interface IRouteValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteValueProvider" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteValueProvider" />
  <TypeSignature Language="F#" Value="type IRouteValueProvider = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRouteValueProvider" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
             A metadata interface which specifies a route value which is required for the action selector to
             choose an action. When applied to an action using attribute routing, the route value will be added
             to the <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values" /> when the action is selected.
             </para>
      <para>
             When an <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider" /> is used to provide a new route value to an action, all
             actions in the application must also have a value associated with that key, or have an implicit value
             of <c>null</c>. See remarks for more details.
             </para>
    </summary>
    <remarks>
      <para>
             The typical scheme for action selection in an MVC application is that an action will require the
             matching values for its <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ControllerName" /> and
             <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ActionName" /></para>
      <example>
             For an action like <c>MyApp.Controllers.HomeController.Index()</c>, in order to be selected, the
             <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values" /> must contain the values
             {
                 "action": "Index",
                 "controller": "Home"
             }
             </example>
      <para>
             If areas are in use in the application (see <see cref="T:Microsoft.AspNetCore.Mvc.AreaAttribute" /> which implements
             <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider" />) then all actions are consider either in an area by having a
             non-<c>null</c> area value (specified by <see cref="T:Microsoft.AspNetCore.Mvc.AreaAttribute" /> or another
             <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider" />) or are considered 'outside' of areas by having the value <c>null</c>.
             </para>
      <example>
             Consider an application with two controllers, each with an <c>Index</c> action method:
                 - <c>MyApp.Controllers.HomeController.Index()</c>
                 - <c>MyApp.Areas.Blog.Controllers.HomeController.Index()</c>
             where <c>MyApp.Areas.Blog.Controllers.HomeController</c> has an area attribute
             <c>[Area("Blog")]</c>.
            
             For <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values" /> like:
             {
                 "action": "Index",
                 "controller": "Home"
             }
            
             <c>MyApp.Controllers.HomeController.Index()</c> will be selected.
             <c>MyApp.Area.Blog.Controllers.HomeController.Index()</c> is not considered eligible because the
             <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values" /> does not contain the value 'Blog' for 'area'.
            
             For <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values" /> like:
             {
                 "area": "Blog",
                 "action": "Index",
                 "controller": "Home"
             }
            
             <c>MyApp.Area.Blog.Controllers.HomeController.Index()</c> will be selected.
             <c>MyApp.Controllers.HomeController.Index()</c> is not considered eligible because the route values
             contain a value for 'area'. <c>MyApp.Controllers.HomeController.Index()</c> cannot match any value
             for 'area' other than <c>null</c>.
             </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="RouteKey">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RouteKey { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string RouteKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteKey As String" />
      <MemberSignature Language="F#" Value="member this.RouteKey : string" Usage="Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The route value key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteValue">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RouteValue { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string RouteValue { get; }" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteValue As String" />
      <MemberSignature Language="F#" Value="member this.RouteValue : string" Usage="Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteValue" />
      <MemberSignature Language="C#" Value="public string? RouteValue { get; }" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The route value. If <c>null</c> or empty, requires the route value associated with <see cref="P:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteKey" />
            to be missing or <c>null</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
