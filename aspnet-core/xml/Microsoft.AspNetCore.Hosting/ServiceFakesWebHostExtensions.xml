<Type Name="ServiceFakesWebHostExtensions" FullName="Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceFakesWebHostExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceFakesWebHostExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceFakesWebHostExtensions" />
  <TypeSignature Language="F#" Value="type ServiceFakesWebHostExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods supporting Kestrel server unit testing scenarios.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ListenHttpOnAnyPort">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Hosting.IWebHostBuilder ListenHttpOnAnyPort (this Microsoft.AspNetCore.Hosting.IWebHostBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Hosting.IWebHostBuilder ListenHttpOnAnyPort(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions.ListenHttpOnAnyPort(Microsoft.AspNetCore.Hosting.IWebHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListenHttpOnAnyPort (builder As IWebHostBuilder) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="static member ListenHttpOnAnyPort : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions.ListenHttpOnAnyPort builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> instance.</param>
        <summary>
            Adds Kestrel server instance listening on the given HTTP port.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>When a concrete port is set by caller, it's not further validated if the port is really free.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenHttpsOnAnyPort">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Hosting.IWebHostBuilder ListenHttpsOnAnyPort (this Microsoft.AspNetCore.Hosting.IWebHostBuilder builder, System.Security.Cryptography.X509Certificates.X509Certificate2? sslCertificate = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Hosting.IWebHostBuilder ListenHttpsOnAnyPort(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder, class System.Security.Cryptography.X509Certificates.X509Certificate2 sslCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions.ListenHttpsOnAnyPort(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListenHttpsOnAnyPort (builder As IWebHostBuilder, Optional sslCertificate As X509Certificate2 = Nothing) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="static member ListenHttpsOnAnyPort : Microsoft.AspNetCore.Hosting.IWebHostBuilder * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions.ListenHttpsOnAnyPort (builder, sslCertificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" RefType="this" />
        <Parameter Name="sslCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> instance.</param>
        <param name="sslCertificate">An SSL certificate for the port. If null, a self-signed certificate is created and used.</param>
        <summary>
            Adds Kestrel server instance listening on a random HTTPS port.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>When a concrete port is set by caller, it's not further validated if the port is really free.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFakeStartup">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Hosting.IWebHostBuilder UseFakeStartup (this Microsoft.AspNetCore.Hosting.IWebHostBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Hosting.IWebHostBuilder UseFakeStartup(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions.UseFakeStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseFakeStartup (builder As IWebHostBuilder) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="static member UseFakeStartup : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="Microsoft.AspNetCore.Hosting.ServiceFakesWebHostExtensions.UseFakeStartup builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Testing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">An <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> instance.</param>
        <summary>
            Adds an empty Startup class to satisfy ASP.NET check.
            </summary>
        <returns>The value of <paramref name="builder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
