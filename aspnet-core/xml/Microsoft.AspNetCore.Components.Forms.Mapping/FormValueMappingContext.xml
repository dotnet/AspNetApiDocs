<Type Name="FormValueMappingContext" FullName="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext">
  <TypeSignature Language="C#" Value="public sealed class FormValueMappingContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormValueMappingContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormValueMappingContext" />
  <TypeSignature Language="F#" Value="type FormValueMappingContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A context that tracks information about mapping a single value from form data.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormValueMappingContext (string acceptMappingScopeName, string? acceptFormName, Type valueType, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string acceptMappingScopeName, string acceptFormName, class System.Type valueType, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.#ctor(System.String,System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (acceptMappingScopeName As String, acceptFormName As String, valueType As Type, parameterName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext : string * string * Type * string -&gt; Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext" Usage="new Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext (acceptMappingScopeName, acceptFormName, valueType, parameterName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="acceptMappingScopeName" Type="System.String" />
        <Parameter Name="acceptFormName" Type="System.String" />
        <Parameter Name="valueType" Type="System.Type" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="acceptMappingScopeName">The name of a <see cref="T:Microsoft.AspNetCore.Components.Forms.FormMappingScope" />. Values will only be mapped if the incoming data corresponds to this scope name.</param>
        <param name="acceptFormName">If set, indicates that the mapping should only receive values if the incoming form matches this name. If null, the mapping should receive data from any form in the mapping scope.</param>
        <param name="valueType">The <see cref="T:System.Type" /> of the value to map.</param>
        <param name="parameterName">The name of the parameter to map data to.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptFormName">
      <MemberSignature Language="C#" Value="public string? AcceptFormName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceptFormName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.AcceptFormName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptFormName As String" />
      <MemberSignature Language="F#" Value="member this.AcceptFormName : string" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.AcceptFormName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set, indicates that the mapping should only receive values if the incoming form matches this name. If null, the mapping should receive data from any form in the mapping scope.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptMappingScopeName">
      <MemberSignature Language="C#" Value="public string AcceptMappingScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceptMappingScopeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.AcceptMappingScopeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptMappingScopeName As String" />
      <MemberSignature Language="F#" Value="member this.AcceptMappingScopeName : string" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.AcceptMappingScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of <see cref="T:Microsoft.AspNetCore.Components.Forms.FormMappingScope" /> that is allowed to supply data in this context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapErrorToContainer">
      <MemberSignature Language="C#" Value="public Action&lt;string,object&gt;? MapErrorToContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`2&lt;string, object&gt; MapErrorToContainer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.MapErrorToContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property MapErrorToContainer As Action(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.MapErrorToContainer : Action&lt;string, obj&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.MapErrorToContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maps a set of errors to a concrete containing instance.
            </summary>
        <value>To be added.</value>
        <remarks>
            For example, maps errors for a given property in a class to the class instance.
            This is required so that validation can work without the need of the full identifier.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public Action&lt;string,FormattableString,string?&gt;? OnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`3&lt;string, class System.FormattableString, string&gt; OnError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.OnError" />
      <MemberSignature Language="VB.NET" Value="Public Property OnError As Action(Of String, FormattableString, String)" />
      <MemberSignature Language="F#" Value="member this.OnError : Action&lt;string, FormattableString, string&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.OnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 2 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String,System.FormattableString,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the callback to invoke when an error occurs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterName As String" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the parameter to map data to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object? Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the result of the mapping operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (object? result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.SetResult(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResult (result As Object)" />
      <MemberSignature Language="F#" Value="member this.SetResult : obj -&gt; unit" Usage="formValueMappingContext.SetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">The result of the mapping operation.</param>
        <summary>
            Sets the result of the mapping operation.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the result has already been set.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueType As Type" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the value to map.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
