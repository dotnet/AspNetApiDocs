<Type Name="IFormValueMapper" FullName="Microsoft.AspNetCore.Components.Forms.Mapping.IFormValueMapper">
  <TypeSignature Language="C#" Value="public interface IFormValueMapper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IFormValueMapper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Forms.Mapping.IFormValueMapper" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormValueMapper" />
  <TypeSignature Language="F#" Value="type IFormValueMapper = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Maps form data values to a model.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanMap">
      <MemberSignature Language="C#" Value="public bool CanMap (Type valueType, string scopeName, string? formName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanMap(class System.Type valueType, string scopeName, string formName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.Mapping.IFormValueMapper.CanMap(System.Type,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanMap (valueType As Type, scopeName As String, formName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanMap : Type * string * string -&gt; bool" Usage="iFormValueMapper.CanMap (valueType, scopeName, formName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueType" Type="System.Type" />
        <Parameter Name="scopeName" Type="System.String" />
        <Parameter Name="formName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueType">The <see cref="T:System.Type" /> for the value to map.</param>
        <param name="scopeName">The name of the current <see cref="T:Microsoft.AspNetCore.Components.Forms.FormMappingScope" />.</param>
        <param name="formName">The form name, if values should only be provided for that form, or null to allow values from any form within the scope.</param>
        <summary>
            Determines whether the specified value type can be mapped.
            </summary>
        <returns>
          <c>true</c> if the value type can be mapped; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map">
      <MemberSignature Language="C#" Value="public void Map (Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Map(class Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.Mapping.IFormValueMapper.Map(Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Map (context As FormValueMappingContext)" />
      <MemberSignature Language="F#" Value="abstract member Map : Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext -&gt; unit" Usage="iFormValueMapper.Map context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Maps the form value with the specified name to a value of the specified type.
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Components.Forms.Mapping.FormValueMappingContext" />.</param></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
