<Type Name="HybridCacheEntryOptions" FullName="Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions">
  <TypeSignature Language="C#" Value="public sealed class HybridCacheEntryOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HybridCacheEntryOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HybridCacheEntryOptions" />
  <TypeSignature Language="F#" Value="type HybridCacheEntryOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Additional options (expiration, etc.) that apply to a <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" /> operation. When options
            can be specified at multiple levels (for example, globally and per-call), the values are composed; the
            most granular non-null value is used, with null values being inherited. If no value is specified at
            any level, the implementation may choose a reasonable default.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HybridCacheEntryOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expiration">
      <MemberSignature Language="C#" Value="public TimeSpan? Expiration { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; Expiration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.Expiration" />
      <MemberSignature Language="VB.NET" Value="Public Property Expiration As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Expiration : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.Expiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Overall cache duration of this entry, passed to the backend distributed cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryFlags? Flags { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryFlags&gt; Flags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As Nullable(Of HybridCacheEntryFlags)" />
      <MemberSignature Language="F#" Value="member this.Flags : Nullable&lt;Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryFlags&gt; with get, set" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryFlags&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Additional flags that apply to this usage.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalCacheExpiration">
      <MemberSignature Language="C#" Value="public TimeSpan? LocalCacheExpiration { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; LocalCacheExpiration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.LocalCacheExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalCacheExpiration As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.LocalCacheExpiration : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.Extensions.Caching.Hybrid.HybridCacheEntryOptions.LocalCacheExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Hybrid</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Cache duration in local cache; when retrieving a cached value
            from an external cache store, this value will be used to calculate the local
            cache expiration, not exceeding the remaining overall cache lifetime.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
