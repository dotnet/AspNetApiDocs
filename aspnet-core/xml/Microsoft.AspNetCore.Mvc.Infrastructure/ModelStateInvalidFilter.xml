<Type Name="ModelStateInvalidFilter" FullName="Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter">
  <TypeSignature Language="C++ CLI" Value="public ref class ModelStateInvalidFilter : Microsoft::AspNetCore::Mvc::Filters::IActionFilter, Microsoft::AspNetCore::Mvc::Filters::IOrderedFilter" />
  <TypeSignature Language="C#" Value="public class ModelStateInvalidFilter : Microsoft.AspNetCore.Mvc.Filters.IActionFilter, Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModelStateInvalidFilter extends System.Object implements class Microsoft.AspNetCore.Mvc.Filters.IActionFilter, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class ModelStateInvalidFilter&#xA;Implements IActionFilter, IOrderedFilter" />
  <TypeSignature Language="F#" Value="type ModelStateInvalidFilter = class&#xA;    interface IActionFilter&#xA;    interface IFilterMetadata&#xA;    interface IOrderedFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IActionFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter" /> that responds to invalid <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" />. This filter is
            added to all types and actions annotated with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute" />.
            See <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions" /> for ways to configure this filter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ModelStateInvalidFilter(Microsoft::AspNetCore::Mvc::ApiBehaviorOptions ^ apiBehaviorOptions, Microsoft::Extensions::Logging::ILogger ^ logger);" />
      <MemberSignature Language="C#" Value="public ModelStateInvalidFilter (Microsoft.AspNetCore.Mvc.ApiBehaviorOptions apiBehaviorOptions, Microsoft.Extensions.Logging.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.ApiBehaviorOptions apiBehaviorOptions, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.#ctor(Microsoft.AspNetCore.Mvc.ApiBehaviorOptions,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (apiBehaviorOptions As ApiBehaviorOptions, logger As ILogger)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter : Microsoft.AspNetCore.Mvc.ApiBehaviorOptions * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter" Usage="new Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (apiBehaviorOptions, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="apiBehaviorOptions" Type="Microsoft.AspNetCore.Mvc.ApiBehaviorOptions" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="apiBehaviorOptions">The api behavior options.</param>
        <param name="logger">The logger.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuted">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnActionExecuted(Microsoft::AspNetCore::Mvc::Filters::ActionExecutedContext ^ context);" />
      <MemberSignature Language="C#" Value="public void OnActionExecuted (Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionExecuted(class Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnActionExecuted (context As ActionExecutedContext)" />
      <MemberSignature Language="F#" Value="abstract member OnActionExecuted : Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext -&gt; unit&#xA;override this.OnActionExecuted : Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext -&gt; unit" Usage="modelStateInvalidFilter.OnActionExecuted context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext" />.</param>
        <summary>
            Invoked when an action is executed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecuting">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnActionExecuting(Microsoft::AspNetCore::Mvc::Filters::ActionExecutingContext ^ context);" />
      <MemberSignature Language="C#" Value="public void OnActionExecuting (Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionExecuting(class Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnActionExecuting (context As ActionExecutingContext)" />
      <MemberSignature Language="F#" Value="abstract member OnActionExecuting : Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext -&gt; unit&#xA;override this.OnActionExecuting : Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext -&gt; unit" Usage="modelStateInvalidFilter.OnActionExecuting context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" />.</param>
        <summary>
            Invoked when an action is executing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); };" />
      <MemberSignature Language="C#" Value="public int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int" Usage="Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order" /> property.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Filters are executed in a sequence determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order" /> property.
            </para>
          <para>
            The default Order for this attribute is -2000 so that it runs early in the pipeline.
            </para>
          <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order" /> for more detailed info.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
