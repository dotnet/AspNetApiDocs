<Type Name="IActionResultExecutor&lt;TResult&gt;" FullName="Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor&lt;TResult&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA; where TResult : IActionResultpublic interface class IActionResultExecutor" />
  <TypeSignature Language="C#" Value="public interface IActionResultExecutor&lt;in TResult&gt; where TResult : IActionResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActionResultExecutor`1&lt;(class Microsoft.AspNetCore.Mvc.IActionResult) - TResult&gt;" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActionResultExecutor(Of In TResult)" />
  <TypeSignature Language="F#" Value="type IActionResultExecutor&lt;'Result (requires 'Result :&gt; IActionResult)&gt; = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IActionResultExecutor`1&lt;(class Microsoft.AspNetCore.Mvc.IActionResult) - TResult&gt;" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
        <InterfaceName>Microsoft.AspNetCore.Mvc.IActionResult</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">The type of <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" />.</typeparam>
    <summary>
            Defines an interface for a service which can execute a particular kind of <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" /> by
            manipulating the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse" />.
            </summary>
    <remarks>
            Implementations of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1" /> are typically called by the
            <see cref="M:Microsoft.AspNetCore.Mvc.IActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)" /> method of the corresponding action result type.
            Implementations should be registered as singleton services.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExecuteAsync (Microsoft.AspNetCore.Mvc.ActionContext context, TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecuteAsync(class Microsoft.AspNetCore.Mvc.ActionContext context, !TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAsync (context As ActionContext, result As TResult) As Task" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : Microsoft.AspNetCore.Mvc.ActionContext * 'Result -&gt; System.Threading.Tasks.Task" Usage="iActionResultExecutor.ExecuteAsync (context, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> associated with the current request."/&gt;</param>
        <param name="result">The action result to execute.</param>
        <summary>
            Asynchronously executes the action result, by modifying the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> which represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
