<Type Name="MvcCompatibilityOptions" FullName="Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class MvcCompatibilityOptions" />
  <TypeSignature Language="C#" Value="public class MvcCompatibilityOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MvcCompatibilityOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class MvcCompatibilityOptions" />
  <TypeSignature Language="F#" Value="type MvcCompatibilityOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
      <AttributeName Language="C#">[System.Obsolete("This API is obsolete and will be removed in a future version. Consider removing usages.", DiagnosticId="ASP5001", UrlFormat="https://aka.ms/aspnetcore-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This API is obsolete and will be removed in a future version. Consider removing usages.", DiagnosticId="ASP5001", UrlFormat="https://aka.ms/aspnetcore-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An options type for configuring the application <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </summary>
    <remarks>
            The primary way to configure the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> is by
            calling <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)" />
            or <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MvcCompatibilityOptions();" />
      <MemberSignature Language="C#" Value="public MvcCompatibilityOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibilityVersion">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::CompatibilityVersion CompatibilityVersion { Microsoft::AspNetCore::Mvc::CompatibilityVersion get(); void set(Microsoft::AspNetCore::Mvc::CompatibilityVersion value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.CompatibilityVersion CompatibilityVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Mvc.CompatibilityVersion CompatibilityVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions.CompatibilityVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property CompatibilityVersion As CompatibilityVersion" />
      <MemberSignature Language="F#" Value="member this.CompatibilityVersion : Microsoft.AspNetCore.Mvc.CompatibilityVersion with get, set" Usage="Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions.CompatibilityVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CompatibilityVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the application's configured <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </summary>
        <value>the default value is <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_3_0" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
