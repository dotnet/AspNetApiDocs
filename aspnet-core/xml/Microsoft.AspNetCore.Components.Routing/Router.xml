<Type Name="Router" FullName="Microsoft.AspNetCore.Components.Routing.Router">
  <TypeSignature Language="C++ CLI" Value="public ref class Router : IDisposable, Microsoft::AspNetCore::Components::IComponent, Microsoft::AspNetCore::Components::IHandleAfterRender" />
  <TypeSignature Language="C#" Value="public class Router : IDisposable, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleAfterRender" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Router extends System.Object implements class Microsoft.AspNetCore.Components.IComponent, class Microsoft.AspNetCore.Components.IHandleAfterRender, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Routing.Router" />
  <TypeSignature Language="VB.NET" Value="Public Class Router&#xA;Implements IComponent, IDisposable, IHandleAfterRender" />
  <TypeSignature Language="F#" Value="type Router = class&#xA;    interface IComponent&#xA;    interface IHandleAfterRender&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IHandleAfterRender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A component that supplies route data corresponding to the current navigation state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Router();" />
      <MemberSignature Language="C#" Value="public Router ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalAssemblies">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ AdditionalAssemblies { System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; AdditionalAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; AdditionalAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalAssemblies As IEnumerable(Of Assembly)" />
      <MemberSignature Language="F#" Value="member this.AdditionalAssemblies : seq&lt;System.Reflection.Assembly&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a collection of additional assemblies that should be searched for components
            that can match URIs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppAssembly">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ AppAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly AppAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly AppAssembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property AppAssembly As Assembly" />
      <MemberSignature Language="F#" Value="member this.AppAssembly : System.Reflection.Assembly with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.AppAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.EditorRequired]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.EditorRequired&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the assembly that should be searched for components matching the URI.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Attach(Microsoft::AspNetCore::Components::RenderHandle renderHandle);" />
      <MemberSignature Language="C#" Value="public void Attach (Microsoft.AspNetCore.Components.RenderHandle renderHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(valuetype Microsoft.AspNetCore.Components.RenderHandle renderHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.Attach(Microsoft.AspNetCore.Components.RenderHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (renderHandle As RenderHandle)" />
      <MemberSignature Language="F#" Value="abstract member Attach : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit&#xA;override this.Attach : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit" Usage="router.Attach renderHandle" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderHandle" Type="Microsoft.AspNetCore.Components.RenderHandle" />
      </Parameters>
      <Docs>
        <param name="renderHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="router.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Found">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment&lt;Microsoft::AspNetCore::Components::RouteData ^&gt; ^ Found { Microsoft::AspNetCore::Components::RenderFragment&lt;Microsoft::AspNetCore::Components::RouteData ^&gt; ^ get(); void set(Microsoft::AspNetCore::Components::RenderFragment&lt;Microsoft::AspNetCore::Components::RouteData ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment&lt;Microsoft.AspNetCore.Components.RouteData&gt; Found { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment`1&lt;class Microsoft.AspNetCore.Components.RouteData&gt; Found" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.Found" />
      <MemberSignature Language="VB.NET" Value="Public Property Found As RenderFragment(Of RouteData)" />
      <MemberSignature Language="F#" Value="member this.Found : Microsoft.AspNetCore.Components.RenderFragment&lt;Microsoft.AspNetCore.Components.RouteData&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.Found" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.EditorRequired]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.EditorRequired&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment&lt;Microsoft.AspNetCore.Components.RouteData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content to display when a match is found for the requested route.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync">
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Task ^ Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() = Microsoft::AspNetCore::Components::IHandleAfterRender::OnAfterRenderAsync;" />
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IHandleAfterRender.OnAfterRenderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync" />
      <MemberSignature Language="VB.NET" Value="Function OnAfterRenderAsync () As Task Implements IHandleAfterRender.OnAfterRenderAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync : unit -&gt; System.Threading.Tasks.Task" Usage="router.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment ^ Navigating { Microsoft::AspNetCore::Components::RenderFragment ^ get(); void set(Microsoft::AspNetCore::Components::RenderFragment ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment? Navigating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment Navigating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Property Navigating As RenderFragment" />
      <MemberSignature Language="F#" Value="member this.Navigating : Microsoft.AspNetCore.Components.RenderFragment with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.Navigating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get or sets the content to display when asynchronous navigation is in progress.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFound">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment ^ NotFound { Microsoft::AspNetCore::Components::RenderFragment ^ get(); void set(Microsoft::AspNetCore::Components::RenderFragment ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment NotFound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment NotFound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.NotFound" />
      <MemberSignature Language="VB.NET" Value="Public Property NotFound As RenderFragment" />
      <MemberSignature Language="F#" Value="member this.NotFound : Microsoft.AspNetCore.Components.RenderFragment with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.NotFound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.EditorRequired]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.EditorRequired&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content to display when no match is found for the requested route.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigateAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::EventCallback&lt;Microsoft::AspNetCore::Components::Routing::NavigationContext ^&gt; OnNavigateAsync { Microsoft::AspNetCore::Components::EventCallback&lt;Microsoft::AspNetCore::Components::Routing::NavigationContext ^&gt; get(); void set(Microsoft::AspNetCore::Components::EventCallback&lt;Microsoft::AspNetCore::Components::Routing::NavigationContext ^&gt; value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.EventCallback&lt;Microsoft.AspNetCore.Components.Routing.NavigationContext&gt; OnNavigateAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Components.EventCallback`1&lt;class Microsoft.AspNetCore.Components.Routing.NavigationContext&gt; OnNavigateAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNavigateAsync As EventCallback(Of NavigationContext)" />
      <MemberSignature Language="F#" Value="member this.OnNavigateAsync : Microsoft.AspNetCore.Components.EventCallback&lt;Microsoft.AspNetCore.Components.Routing.NavigationContext&gt; with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.EventCallback&lt;Microsoft.AspNetCore.Components.Routing.NavigationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a handler that should be called before navigating to a new page.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferExactMatches">
      <MemberSignature Language="C#" Value="public bool PreferExactMatches { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferExactMatches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferExactMatches As Boolean" />
      <MemberSignature Language="F#" Value="member this.PreferExactMatches : bool with get, set" Usage="Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag to indicate whether route matching should prefer exact matches
            over wildcards.
            <para>This property is obsolete and configuring it does nothing.</para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterView parameters);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterView parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterView parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetParametersAsync (parameters As ParameterView) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task&#xA;override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterView -&gt; System.Threading.Tasks.Task" Usage="router.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterView" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
