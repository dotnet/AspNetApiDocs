<Type Name="TagHelperDescriptorFactory" FullName="Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory">
  <TypeSignature Language="C++ CLI" Value="public ref class TagHelperDescriptorFactory : Microsoft::AspNetCore::Razor::Runtime::TagHelpers::ITagHelperDescriptorFactory" />
  <TypeSignature Language="C#" Value="public class TagHelperDescriptorFactory : Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TagHelperDescriptorFactory extends System.Object implements class Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TagHelperDescriptorFactory&#xA;Implements ITagHelperDescriptorFactory" />
  <TypeSignature Language="F#" Value="type TagHelperDescriptorFactory = class&#xA;    interface ITagHelperDescriptorFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Factory for <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s from <see cref="T:System.Type" />s.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagHelperDescriptorFactory(bool designTime);" />
      <MemberSignature Language="C#" Value="public TagHelperDescriptorFactory (bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designTime As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory : bool -&gt; Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory" Usage="new Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory designTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designTime" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designTime">
            Indicates if <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s should be created for design time.
            </param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescriptors">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Compilation::TagHelpers::TagHelperDescriptor ^&gt; ^ CreateDescriptors(System::String ^ assemblyName, Type ^ type, Microsoft::AspNetCore::Razor::ErrorSink ^ errorSink);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt; CreateDescriptors (string assemblyName, Type type, Microsoft.AspNetCore.Razor.ErrorSink errorSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt; CreateDescriptors(string assemblyName, class System.Type type, class Microsoft.AspNetCore.Razor.ErrorSink errorSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDescriptors (assemblyName As String, type As Type, errorSink As ErrorSink) As IEnumerable(Of TagHelperDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member CreateDescriptors : string * Type * Microsoft.AspNetCore.Razor.ErrorSink -&gt; seq&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;&#xA;override this.CreateDescriptors : string * Type * Microsoft.AspNetCore.Razor.ErrorSink -&gt; seq&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;" Usage="tagHelperDescriptorFactory.CreateDescriptors (assemblyName, type, errorSink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="errorSink" Type="Microsoft.AspNetCore.Razor.ErrorSink" />
      </Parameters>
      <Docs>
        <param name="assemblyName">To be added.</param>
        <param name="type">To be added.</param>
        <param name="errorSink">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="InvalidNonWhitespaceNameCharacters">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::ICollection&lt;char&gt; ^ InvalidNonWhitespaceNameCharacters { System::Collections::Generic::ICollection&lt;char&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;char&gt; InvalidNonWhitespaceNameCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.ICollection`1&lt;char&gt; InvalidNonWhitespaceNameCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidNonWhitespaceNameCharacters As ICollection(Of Char)" />
      <MemberSignature Language="F#" Value="static member InvalidNonWhitespaceNameCharacters : System.Collections.Generic.ICollection&lt;char&gt;" Usage="Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHtmlCase">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToHtmlCase(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public static string ToHtmlCase (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToHtmlCase(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.ToHtmlCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToHtmlCase (name As String) As String" />
      <MemberSignature Language="F#" Value="static member ToHtmlCase : string -&gt; string" Usage="Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.ToHtmlCase name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Converts from pascal/camel case to lower kebab-case.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code>
            SomeThing =&gt; some-thing
            capsONInside =&gt; caps-on-inside
            CAPSOnOUTSIDE =&gt; caps-on-outside
            ALLCAPS =&gt; allcaps
            One1Two2Three3 =&gt; one1-two2-three3
            ONE1TWO2THREE3 =&gt; one1two2three3
            First_Second_ThirdHi =&gt; first_second_third-hi
            </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
