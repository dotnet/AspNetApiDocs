<Type Name="EndpointMetadataComparer&lt;TMetadata&gt;" FullName="Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer&lt;TMetadata&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TMetadata&gt;&#xA; where TMetadata : classpublic ref class EndpointMetadataComparer abstract : System::Collections::Generic::IComparer&lt;Microsoft::AspNetCore::Http::Endpoint ^&gt;" />
  <TypeSignature Language="C#" Value="public abstract class EndpointMetadataComparer&lt;TMetadata&gt; : System.Collections.Generic.IComparer&lt;Microsoft.AspNetCore.Http.Endpoint&gt; where TMetadata : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EndpointMetadataComparer`1&lt;class TMetadata&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class Microsoft.AspNetCore.Http.Endpoint&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EndpointMetadataComparer(Of TMetadata)&#xA;Implements IComparer(Of Endpoint)" />
  <TypeSignature Language="F#" Value="type EndpointMetadataComparer&lt;'Metadata (requires 'Metadata : null)&gt; = class&#xA;    interface IComparer&lt;Endpoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TMetadata">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;Microsoft.AspNetCore.Http.Endpoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TMetadata">
            The type of metadata to compare. Typically this is a type of metadata related
            to the application concern being handled.
            </typeparam>
    <summary>
            A base class for <see cref="T:System.Collections.Generic.IComparer`1" /> implementations that use
            a specific type of metadata from <see cref="P:Microsoft.AspNetCore.Http.Endpoint.Metadata" /> for comparison.
            Useful for implementing <see cref="P:Microsoft.AspNetCore.Routing.Matching.IEndpointComparerPolicy.Comparer" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EndpointMetadataComparer();" />
      <MemberSignature Language="C#" Value="protected EndpointMetadataComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(Microsoft::AspNetCore::Http::Endpoint ^ x, Microsoft::AspNetCore::Http::Endpoint ^ y);" />
      <MemberSignature Language="C#" Value="public int Compare (Microsoft.AspNetCore.Http.Endpoint x, Microsoft.AspNetCore.Http.Endpoint y);" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class Microsoft.AspNetCore.Http.Endpoint x, class Microsoft.AspNetCore.Http.Endpoint y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1.Compare(Microsoft.AspNetCore.Http.Endpoint,Microsoft.AspNetCore.Http.Endpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Endpoint, y As Endpoint) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : Microsoft.AspNetCore.Http.Endpoint * Microsoft.AspNetCore.Http.Endpoint -&gt; int&#xA;override this.Compare : Microsoft.AspNetCore.Http.Endpoint * Microsoft.AspNetCore.Http.Endpoint -&gt; int" Usage="endpointMetadataComparer.Compare (x, y)" />
      <MemberSignature Language="C#" Value="public int Compare (Microsoft.AspNetCore.Http.Endpoint? x, Microsoft.AspNetCore.Http.Endpoint? y);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.AspNetCore.Http.Endpoint" />
        <Parameter Name="y" Type="Microsoft.AspNetCore.Http.Endpoint" />
      </Parameters>
      <Docs>
        <param name="x">The first object to compare.</param>
        <param name="y">The second object to compare.</param>
        <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to,
            or greater than the other.
            </summary>
        <returns>
            An implementation of this method must return a value less than zero if
            x is less than y, zero if x is equal to y, or a value greater than zero if x is
            greater than y.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareMetadata">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int CompareMetadata(TMetadata x, TMetadata y);" />
      <MemberSignature Language="C#" Value="protected virtual int CompareMetadata (TMetadata x, TMetadata y);" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 CompareMetadata(!TMetadata x, !TMetadata y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1.CompareMetadata(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CompareMetadata (x As TMetadata, y As TMetadata) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareMetadata : 'Metadata * 'Metadata -&gt; int&#xA;override this.CompareMetadata : 'Metadata * 'Metadata -&gt; int" Usage="endpointMetadataComparer.CompareMetadata (x, y)" />
      <MemberSignature Language="C#" Value="protected virtual int CompareMetadata (TMetadata? x, TMetadata? y);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="TMetadata" />
        <Parameter Name="y" Type="TMetadata" />
      </Parameters>
      <Docs>
        <param name="x">The first object to compare.</param>
        <param name="y">The second object to compare.</param>
        <summary>
            Compares two <typeparamref name="TMetadata" /> instances.
            </summary>
        <returns>
            An implementation of this method must return a value less than zero if
            x is less than y, zero if x is equal to y, or a value greater than zero if x is
            greater than y.
            </returns>
        <remarks>
            The base-class implementation of this method will compare metadata based on whether
            or not they are <c>null</c>. The effect of this is that when endpoints are being
            compared, the endpoint that defines an instance of <typeparamref name="TMetadata" />
            will be considered higher priority.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::AspNetCore::Routing::Matching::EndpointMetadataComparer&lt;TMetadata&gt; ^ Default;" />
      <MemberSignature Language="C#" Value="public static readonly Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer&lt;TMetadata&gt; Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1&lt;!TMetadata&gt; Default" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As EndpointMetadataComparer(Of TMetadata) " />
      <MemberSignature Language="F#" Value=" staticval mutable Default : Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer&lt;'Metadata (requires 'Metadata : null)&gt;" Usage="Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer&lt;'Metadata (requires 'Metadata : null)&gt;.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer&lt;TMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A default instance of the <see cref="T:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TMetadata GetMetadata(Microsoft::AspNetCore::Http::Endpoint ^ endpoint);" />
      <MemberSignature Language="C#" Value="protected virtual TMetadata GetMetadata (Microsoft.AspNetCore.Http.Endpoint endpoint);" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TMetadata GetMetadata(class Microsoft.AspNetCore.Http.Endpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.EndpointMetadataComparer`1.GetMetadata(Microsoft.AspNetCore.Http.Endpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetMetadata (endpoint As Endpoint) As TMetadata" />
      <MemberSignature Language="F#" Value="abstract member GetMetadata : Microsoft.AspNetCore.Http.Endpoint -&gt; 'Metadata&#xA;override this.GetMetadata : Microsoft.AspNetCore.Http.Endpoint -&gt; 'Metadata" Usage="endpointMetadataComparer.GetMetadata endpoint" />
      <MemberSignature Language="C#" Value="protected virtual TMetadata? GetMetadata (Microsoft.AspNetCore.Http.Endpoint endpoint);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Microsoft.AspNetCore.Http.Endpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">The <see cref="T:Microsoft.AspNetCore.Http.Endpoint" />.</param>
        <summary>
            Gets the metadata of type <typeparamref name="TMetadata" /> from the provided endpoint.
            </summary>
        <returns>The <typeparamref name="TMetadata" /> instance or <c>null</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
