<Type Name="IDynamicEndpointMetadata" FullName="Microsoft.AspNetCore.Routing.IDynamicEndpointMetadata">
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicEndpointMetadata" />
  <TypeSignature Language="C#" Value="public interface IDynamicEndpointMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicEndpointMetadata" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.IDynamicEndpointMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicEndpointMetadata" />
  <TypeSignature Language="F#" Value="type IDynamicEndpointMetadata = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDynamicEndpointMetadata" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A metadata interface that can be used to specify that the associated <see cref="T:Microsoft.AspNetCore.Http.Endpoint" />
            will be dynamically replaced during matching.
            </summary>
    <remarks>
      <para>
        <see cref="T:Microsoft.AspNetCore.Routing.IDynamicEndpointMetadata" /> and related derived interfaces signal to
            <see cref="T:Microsoft.AspNetCore.Routing.MatcherPolicy" /> implementations that an <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> has dynamic behavior
            and thus cannot have its characteristics cached.
            </para>
      <para>
            Using dynamic endpoints can be useful because the default matcher implementation does not
            supply extensibility for how URLs are processed. Routing implementations that have dynamic
            behavior can apply their dynamic logic after URL processing, by replacing a endpoints as
            part of a <see cref="T:Microsoft.AspNetCore.Routing.Matching.CandidateSet" />.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.IDynamicEndpointMetadata.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="Microsoft.AspNetCore.Routing.IDynamicEndpointMetadata.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a value that indicates whether the associated endpoint has dynamic matching
            behavior.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
