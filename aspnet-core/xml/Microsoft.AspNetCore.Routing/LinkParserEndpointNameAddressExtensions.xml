<Type Name="LinkParserEndpointNameAddressExtensions" FullName="Microsoft.AspNetCore.Routing.LinkParserEndpointNameAddressExtensions">
  <TypeSignature Language="C++ CLI" Value="public ref class LinkParserEndpointNameAddressExtensions abstract sealed" />
  <TypeSignature Language="C#" Value="public static class LinkParserEndpointNameAddressExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LinkParserEndpointNameAddressExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.LinkParserEndpointNameAddressExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LinkParserEndpointNameAddressExtensions" />
  <TypeSignature Language="F#" Value="type LinkParserEndpointNameAddressExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for using <see cref="T:Microsoft.AspNetCore.Routing.LinkParser" /> with an endpoint name.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ParsePathByEndpointName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Routing::RouteValueDictionary ^ ParsePathByEndpointName(Microsoft::AspNetCore::Routing::LinkParser ^ parser, System::String ^ endpointName, Microsoft::AspNetCore::Http::PathString path);" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Routing.RouteValueDictionary ParsePathByEndpointName (this Microsoft.AspNetCore.Routing.LinkParser parser, string endpointName, Microsoft.AspNetCore.Http.PathString path);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Routing.RouteValueDictionary ParsePathByEndpointName(class Microsoft.AspNetCore.Routing.LinkParser parser, string endpointName, valuetype Microsoft.AspNetCore.Http.PathString path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkParserEndpointNameAddressExtensions.ParsePathByEndpointName(Microsoft.AspNetCore.Routing.LinkParser,System.String,Microsoft.AspNetCore.Http.PathString)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ParsePathByEndpointName (parser As LinkParser, endpointName As String, path As PathString) As RouteValueDictionary" />
      <MemberSignature Language="F#" Value="static member ParsePathByEndpointName : Microsoft.AspNetCore.Routing.LinkParser * string * Microsoft.AspNetCore.Http.PathString -&gt; Microsoft.AspNetCore.Routing.RouteValueDictionary" Usage="Microsoft.AspNetCore.Routing.LinkParserEndpointNameAddressExtensions.ParsePathByEndpointName (parser, endpointName, path)" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Routing.RouteValueDictionary? ParsePathByEndpointName (this Microsoft.AspNetCore.Routing.LinkParser parser, string endpointName, Microsoft.AspNetCore.Http.PathString path);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="Microsoft.AspNetCore.Routing.LinkParser" RefType="this" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="path" Type="Microsoft.AspNetCore.Http.PathString" />
      </Parameters>
      <Docs>
        <param name="parser">The <see cref="T:Microsoft.AspNetCore.Routing.LinkParser" />.</param>
        <param name="endpointName">The endpoint name. Used to resolve endpoints.</param>
        <param name="path">The URI path to parse.</param>
        <summary>
            Attempts to parse the provided <paramref name="path" /> using the route pattern
            specified by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> matching <paramref name="endpointName" />.
            </summary>
        <returns>
            A <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary" /> with the parsed values if parsing is successful;
            otherwise <c>null</c>.
            </returns>
        <remarks>
          <para>
            <see cref="M:Microsoft.AspNetCore.Routing.LinkParserEndpointNameAddressExtensions.ParsePathByEndpointName(Microsoft.AspNetCore.Routing.LinkParser,System.String,Microsoft.AspNetCore.Http.PathString)" /> will attempt to first resolve
            <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> instances that match <paramref name="endpointName" /> and then use the route
            pattern associated with each endpoint to parse the URL path.
            </para>
          <para>
            The parsing operation will fail and return <c>null</c> if either no endpoints are found or none
            of the route patterns match the provided URI path.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
