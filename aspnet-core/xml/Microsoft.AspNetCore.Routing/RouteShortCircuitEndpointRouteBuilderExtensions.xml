<Type Name="RouteShortCircuitEndpointRouteBuilderExtensions" FullName="Microsoft.AspNetCore.Routing.RouteShortCircuitEndpointRouteBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RouteShortCircuitEndpointRouteBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RouteShortCircuitEndpointRouteBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.RouteShortCircuitEndpointRouteBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RouteShortCircuitEndpointRouteBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RouteShortCircuitEndpointRouteBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides extension methods for <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add short circuited endpoints.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MapShortCircuit">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapShortCircuit (this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder, int statusCode, params string[] routePrefixes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IEndpointConventionBuilder MapShortCircuit(class Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder, int32 statusCode, string[] routePrefixes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteShortCircuitEndpointRouteBuilderExtensions.MapShortCircuit(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Int32,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapShortCircuit (builder As IEndpointRouteBuilder, statusCode As Integer, ParamArray routePrefixes As String()) As IEndpointConventionBuilder" />
      <MemberSignature Language="F#" Value="static member MapShortCircuit : Microsoft.AspNetCore.Routing.IEndpointRouteBuilder * int * string[] -&gt; Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" Usage="Microsoft.AspNetCore.Routing.RouteShortCircuitEndpointRouteBuilderExtensions.MapShortCircuit (builder, statusCode, routePrefixes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IEndpointConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="routePrefixes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> to add the route to.</param>
        <param name="statusCode">The status code to set in the response.</param>
        <param name="routePrefixes">An array of route prefixes to be short circuited.</param>
        <summary>
             Adds a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint" /> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder" /> that matches HTTP requests (all verbs)
             for the specified prefixes.
             </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Builder.IEndpointConventionBuilder" /> that can be used to further customize the endpoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
