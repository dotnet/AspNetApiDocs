<Type Name="IEndpointAddressScheme&lt;TAddress&gt;" FullName="Microsoft.AspNetCore.Routing.IEndpointAddressScheme&lt;TAddress&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TAddress&gt;&#xA;public interface class IEndpointAddressScheme" />
  <TypeSignature Language="C#" Value="public interface IEndpointAddressScheme&lt;TAddress&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEndpointAddressScheme`1&lt;TAddress&gt;" FrameworkAlternate="aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.IEndpointAddressScheme`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEndpointAddressScheme(Of TAddress)" />
  <TypeSignature Language="F#" Value="type IEndpointAddressScheme&lt;'Address&gt; = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEndpointAddressScheme`1&lt;TAddress&gt;" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAddress" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TAddress">The address type to look up endpoints.</typeparam>
    <summary>
            Defines a contract to find endpoints based on the provided address.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindEndpoints">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Http::Endpoint ^&gt; ^ FindEndpoints(TAddress address);" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Http.Endpoint&gt; FindEndpoints (TAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Http.Endpoint&gt; FindEndpoints(!TAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.IEndpointAddressScheme`1.FindEndpoints(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEndpoints (address As TAddress) As IEnumerable(Of Endpoint)" />
      <MemberSignature Language="F#" Value="abstract member FindEndpoints : 'Address -&gt; seq&lt;Microsoft.AspNetCore.Http.Endpoint&gt;" Usage="iEndpointAddressScheme.FindEndpoints address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Http.Endpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="TAddress" />
      </Parameters>
      <Docs>
        <param name="address">The information used to look up endpoints.</param>
        <summary>
            Finds endpoints based on the provided <paramref name="address" />.
            </summary>
        <returns>A collection of <see cref="T:Microsoft.AspNetCore.Http.Endpoint" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
