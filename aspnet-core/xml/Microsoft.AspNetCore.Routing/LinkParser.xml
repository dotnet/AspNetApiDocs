<Type Name="LinkParser" FullName="Microsoft.AspNetCore.Routing.LinkParser">
  <TypeSignature Language="C++ CLI" Value="public ref class LinkParser abstract" />
  <TypeSignature Language="C#" Value="public abstract class LinkParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LinkParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.LinkParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LinkParser" />
  <TypeSignature Language="F#" Value="type LinkParser = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines a contract to parse URIs using information from routing.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinkParser();" />
      <MemberSignature Language="C#" Value="protected LinkParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParsePathByAddress&lt;TAddress&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAddress&gt;&#xA; abstract Microsoft::AspNetCore::Routing::RouteValueDictionary ^ ParsePathByAddress(TAddress address, Microsoft::AspNetCore::Http::PathString path);" />
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Routing.RouteValueDictionary ParsePathByAddress&lt;TAddress&gt; (TAddress address, Microsoft.AspNetCore.Http.PathString path);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Routing.RouteValueDictionary ParsePathByAddress&lt;TAddress&gt;(!!TAddress address, valuetype Microsoft.AspNetCore.Http.PathString path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkParser.ParsePathByAddress``1(``0,Microsoft.AspNetCore.Http.PathString)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParsePathByAddress(Of TAddress) (address As TAddress, path As PathString) As RouteValueDictionary" />
      <MemberSignature Language="F#" Value="abstract member ParsePathByAddress : 'Address * Microsoft.AspNetCore.Http.PathString -&gt; Microsoft.AspNetCore.Routing.RouteValueDictionary" Usage="linkParser.ParsePathByAddress (address, path)" />
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Routing.RouteValueDictionary? ParsePathByAddress&lt;TAddress&gt; (TAddress address, Microsoft.AspNetCore.Http.PathString path);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAddress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="address" Type="TAddress">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="path" Type="Microsoft.AspNetCore.Http.PathString" />
      </Parameters>
      <Docs>
        <typeparam name="TAddress">The address type.</typeparam>
        <param name="address">The address value. Used to resolve endpoints.</param>
        <param name="path">The URI path to parse.</param>
        <summary>
            Attempts to parse the provided <paramref name="path" /> using the route pattern
            specified by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> matching <paramref name="address" />.
            </summary>
        <returns>
            A <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary" /> with the parsed values if parsing is successful;
            otherwise <c>null</c>.
            </returns>
        <remarks>
          <para>
            <see cref="M:Microsoft.AspNetCore.Routing.LinkParser.ParsePathByAddress``1(``0,Microsoft.AspNetCore.Http.PathString)" /> will attempt to first resolve
            <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> instances that match <paramref name="address" /> and then use the route
            pattern associated with each endpoint to parse the URL path.
            </para>
          <para>
            The parsing operation will fail and return <c>null</c> if either no endpoints are found or none
            of the route patterns match the provided URI path.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
