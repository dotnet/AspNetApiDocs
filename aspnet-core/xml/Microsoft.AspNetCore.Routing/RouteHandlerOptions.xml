<Type Name="RouteHandlerOptions" FullName="Microsoft.AspNetCore.Routing.RouteHandlerOptions">
  <TypeSignature Language="C#" Value="public sealed class RouteHandlerOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RouteHandlerOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.RouteHandlerOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RouteHandlerOptions" />
  <TypeSignature Language="F#" Value="type RouteHandlerOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for controlling the behavior of <see cref="M:Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGet(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Delegate)" />
            and similar methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteHandlerOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteHandlerOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnBadRequest">
      <MemberSignature Language="C#" Value="public bool ThrowOnBadRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnBadRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.RouteHandlerOptions.ThrowOnBadRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowOnBadRequest As Boolean" />
      <MemberSignature Language="F#" Value="member this.ThrowOnBadRequest : bool with get, set" Usage="Microsoft.AspNetCore.Routing.RouteHandlerOptions.ThrowOnBadRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls whether endpoints should throw a <see cref="T:Microsoft.AspNetCore.Http.BadHttpRequestException" /> in addition to
            writing a <see cref="F:Microsoft.Extensions.Logging.LogLevel.Debug" /> log when handling invalid requests.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to <see cref="M:Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions.IsDevelopment(Microsoft.Extensions.Hosting.IHostEnvironment)" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
