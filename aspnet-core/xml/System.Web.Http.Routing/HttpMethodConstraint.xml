<Type Name="HttpMethodConstraint" FullName="System.Web.Http.Routing.HttpMethodConstraint">
  <TypeSignature Language="C#" Value="public class HttpMethodConstraint : System.Web.Http.Routing.IHttpRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpMethodConstraint extends System.Object implements class System.Web.Http.Routing.IHttpRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Routing.HttpMethodConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpMethodConstraint&#xA;Implements IHttpRouteConstraint" />
  <TypeSignature Language="F#" Value="type HttpMethodConstraint = class&#xA;    interface IHttpRouteConstraint" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.Routing.IHttpRouteConstraint</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enables you to define which HTTP verbs are allowed when ASP.NET routing determines whether a URL matches a route.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMethodConstraint (params System.Net.Http.HttpMethod[] allowedMethods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMethod[] allowedMethods) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray allowedMethods As HttpMethod())" />
      <MemberSignature Language="F#" Value="new System.Web.Http.Routing.HttpMethodConstraint : System.Net.Http.HttpMethod[] -&gt; System.Web.Http.Routing.HttpMethodConstraint" Usage="new System.Web.Http.Routing.HttpMethodConstraint allowedMethods" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedMethods" Type="System.Net.Http.HttpMethod[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="allowedMethods">The HTTP verbs that are valid for the route.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" /> class by using the HTTP verbs that are allowed for the route.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Net.Http.HttpMethod&gt; AllowedMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Net.Http.HttpMethod&gt; AllowedMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedMethods As Collection(Of HttpMethod)" />
      <MemberSignature Language="F#" Value="member this.AllowedMethods : System.Collections.ObjectModel.Collection&lt;System.Net.Http.HttpMethod&gt;" Usage="System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Net.Http.HttpMethod&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the collection of allowed HTTP verbs for the route.</summary>
        <value>A collection of allowed HTTP verbs for the route.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="protected virtual bool Match (System.Net.Http.HttpRequestMessage request, System.Web.Http.Routing.IHttpRoute route, string parameterName, System.Collections.Generic.IDictionary&lt;string,object&gt; values, System.Web.Http.Routing.HttpRouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Match(class System.Net.Http.HttpRequestMessage request, class System.Web.Http.Routing.IHttpRoute route, string parameterName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; values, valuetype System.Web.Http.Routing.HttpRouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Match (request As HttpRequestMessage, route As IHttpRoute, parameterName As String, values As IDictionary(Of String, Object), routeDirection As HttpRouteDirection) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Match : System.Net.Http.HttpRequestMessage * System.Web.Http.Routing.IHttpRoute * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Web.Http.Routing.HttpRouteDirection -&gt; bool&#xA;override this.Match : System.Net.Http.HttpRequestMessage * System.Web.Http.Routing.IHttpRoute * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Web.Http.Routing.HttpRouteDirection -&gt; bool" Usage="httpMethodConstraint.Match (request, route, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="route" Type="System.Web.Http.Routing.IHttpRoute" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="routeDirection" Type="System.Web.Http.Routing.HttpRouteDirection" />
      </Parameters>
      <Docs>
        <param name="request">The request that is being checked to determine whether it matches the URL.</param>
        <param name="route">The object that is being checked to determine whether it matches the URL.</param>
        <param name="parameterName">The name of the parameter that is being checked.</param>
        <param name="values">An object that contains the parameters for a route.</param>
        <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is processed or when a URL is generated.</param>
        <summary>Determines whether the request was made with an HTTP verb that is one of the allowed verbs for the route.</summary>
        <returns>When ASP.NET routing is processing a request, true if the request was made by using an allowed HTTP verb; otherwise, false. When ASP.NET routing is constructing a URL, true if the supplied values contain an HTTP verb that matches one of the allowed HTTP verbs; otherwise, false. The default is true.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Http.Routing.IHttpRouteConstraint.Match">
      <MemberSignature Language="C#" Value="bool IHttpRouteConstraint.Match (System.Net.Http.HttpRequestMessage request, System.Web.Http.Routing.IHttpRoute route, string parameterName, System.Collections.Generic.IDictionary&lt;string,object&gt; values, System.Web.Http.Routing.HttpRouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.Http.Routing.IHttpRouteConstraint.Match(class System.Net.Http.HttpRequestMessage request, class System.Web.Http.Routing.IHttpRoute route, string parameterName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; values, valuetype System.Web.Http.Routing.HttpRouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)" />
      <MemberSignature Language="VB.NET" Value="Function Match (request As HttpRequestMessage, route As IHttpRoute, parameterName As String, values As IDictionary(Of String, Object), routeDirection As HttpRouteDirection) As Boolean Implements IHttpRouteConstraint.Match" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Http.Routing.IHttpRouteConstraint.Match : System.Net.Http.HttpRequestMessage * System.Web.Http.Routing.IHttpRoute * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Web.Http.Routing.HttpRouteDirection -&gt; bool&#xA;override this.System.Web.Http.Routing.IHttpRouteConstraint.Match : System.Net.Http.HttpRequestMessage * System.Web.Http.Routing.IHttpRoute * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Web.Http.Routing.HttpRouteDirection -&gt; bool" Usage="httpMethodConstraint.System.Web.Http.Routing.IHttpRouteConstraint.Match (request, route, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="route" Type="System.Web.Http.Routing.IHttpRoute" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="routeDirection" Type="System.Web.Http.Routing.HttpRouteDirection" />
      </Parameters>
      <Docs>
        <param name="request">The request that is being checked to determine whether it matches the URL.</param>
        <param name="route">The object that is being checked to determine whether it matches the URL.</param>
        <param name="parameterName">The name of the parameter that is being checked.</param>
        <param name="values">An object that contains the parameters for a route.</param>
        <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is processed or when a URL is generated.</param>
        <summary>Determines whether the request was made with an HTTP verb that is one of the allowed verbs for the route.</summary>
        <returns>When ASP.NET routing is processing a request, true if the request was made by using an allowed HTTP verb; otherwise, false. When ASP.NET routing is constructing a URL, true if the supplied values contain an HTTP verb that matches one of the allowed HTTP verbs; otherwise, false. The default is true.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
