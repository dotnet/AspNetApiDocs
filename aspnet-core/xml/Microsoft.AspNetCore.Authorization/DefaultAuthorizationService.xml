<Type Name="DefaultAuthorizationService" FullName="Microsoft.AspNetCore.Authorization.DefaultAuthorizationService">
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAuthorizationService : Microsoft::AspNetCore::Authorization::IAuthorizationService" />
  <TypeSignature Language="C#" Value="public class DefaultAuthorizationService : Microsoft.AspNetCore.Authorization.IAuthorizationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultAuthorizationService extends System.Object implements class Microsoft.AspNetCore.Authorization.IAuthorizationService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultAuthorizationService&#xA;Implements IAuthorizationService" />
  <TypeSignature Language="F#" Value="type DefaultAuthorizationService = class&#xA;    interface IAuthorizationService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Authorization.IAuthorizationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The default implementation of an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthorizationService(Microsoft::AspNetCore::Authorization::IAuthorizationPolicyProvider ^ policyProvider, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationHandler ^&gt; ^ handlers, Microsoft::Extensions::Logging::ILogger&lt;Microsoft::AspNetCore::Authorization::DefaultAuthorizationService ^&gt; ^ logger);" />
      <MemberSignature Language="C#" Value="public DefaultAuthorizationService (Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt; handlers, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt; handlers, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationHandler},Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Authorization.DefaultAuthorizationService})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policyProvider As IAuthorizationPolicyProvider, handlers As IEnumerable(Of IAuthorizationHandler), logger As ILogger(Of DefaultAuthorizationService))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Authorization.DefaultAuthorizationService : Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider * seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt; * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; -&gt; Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" Usage="new Microsoft.AspNetCore.Authorization.DefaultAuthorizationService (policyProvider, handlers, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policyProvider" Type="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt;" Index="1" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt;" Index="2" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="policyProvider">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" /> used to provide policies.</param>
        <param name="handlers">The handlers used to fulfill <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />s.</param>
        <param name="logger">The logger used to log messages, warnings and errors.</param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthorizationService(Microsoft::AspNetCore::Authorization::IAuthorizationPolicyProvider ^ policyProvider, Microsoft::AspNetCore::Authorization::IAuthorizationHandlerProvider ^ handlers, Microsoft::Extensions::Logging::ILogger&lt;Microsoft::AspNetCore::Authorization::DefaultAuthorizationService ^&gt; ^ logger, Microsoft::AspNetCore::Authorization::IAuthorizationHandlerContextFactory ^ contextFactory, Microsoft::AspNetCore::Authorization::IAuthorizationEvaluator ^ evaluator, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Authorization::AuthorizationOptions ^&gt; ^ options);" />
      <MemberSignature Language="C#" Value="public DefaultAuthorizationService (Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider handlers, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; logger, Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory contextFactory, Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator evaluator, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, class Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider handlers, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; logger, class Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory contextFactory, class Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator evaluator, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Authorization.DefaultAuthorizationService},Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory,Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policyProvider As IAuthorizationPolicyProvider, handlers As IAuthorizationHandlerProvider, logger As ILogger(Of DefaultAuthorizationService), contextFactory As IAuthorizationHandlerContextFactory, evaluator As IAuthorizationEvaluator, options As IOptions(Of AuthorizationOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Authorization.DefaultAuthorizationService : Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider * Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; * Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory * Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt; -&gt; Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" Usage="new Microsoft.AspNetCore.Authorization.DefaultAuthorizationService (policyProvider, handlers, logger, contextFactory, evaluator, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policyProvider" Type="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="handlers" Type="Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt;" Index="2" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="contextFactory" Type="Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory" Index="3" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="evaluator" Type="Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" Index="4" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt;" Index="5" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      </Parameters>
      <Docs>
        <param name="policyProvider">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" /> used to provide policies.</param>
        <param name="handlers">The handlers used to fulfill <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />s.</param>
        <param name="logger">The logger used to log messages, warnings and errors.</param>
        <param name="contextFactory">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory" /> used to create the context to handle the authorization.</param>
        <param name="evaluator">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" /> used to determine if authorization was successful.</param>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationOptions" /> used.</param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthorizationService(Microsoft::AspNetCore::Authorization::IAuthorizationPolicyProvider ^ policyProvider, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationHandler ^&gt; ^ handlers, Microsoft::Extensions::Logging::ILogger&lt;Microsoft::AspNetCore::Authorization::DefaultAuthorizationService ^&gt; ^ logger, Microsoft::AspNetCore::Authorization::IAuthorizationHandlerContextFactory ^ contextFactory, Microsoft::AspNetCore::Authorization::IAuthorizationEvaluator ^ evaluator, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Authorization::AuthorizationOptions ^&gt; ^ options);" />
      <MemberSignature Language="C#" Value="public DefaultAuthorizationService (Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt; handlers, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; logger, Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory contextFactory, Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator evaluator, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider policyProvider, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt; handlers, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; logger, class Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory contextFactory, class Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator evaluator, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationHandler},Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Authorization.DefaultAuthorizationService},Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory,Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policyProvider As IAuthorizationPolicyProvider, handlers As IEnumerable(Of IAuthorizationHandler), logger As ILogger(Of DefaultAuthorizationService), contextFactory As IAuthorizationHandlerContextFactory, evaluator As IAuthorizationEvaluator, options As IOptions(Of AuthorizationOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Authorization.DefaultAuthorizationService : Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider * seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt; * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt; * Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory * Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt; -&gt; Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" Usage="new Microsoft.AspNetCore.Authorization.DefaultAuthorizationService (policyProvider, handlers, logger, contextFactory, evaluator, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policyProvider" Type="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" Index="0" FrameworkAlternate="aspnetcore-1.1" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationHandler&gt;" Index="1" FrameworkAlternate="aspnetcore-1.1" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Authorization.DefaultAuthorizationService&gt;" Index="2" FrameworkAlternate="aspnetcore-1.1" />
        <Parameter Name="contextFactory" Type="Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory" Index="3" FrameworkAlternate="aspnetcore-1.1" />
        <Parameter Name="evaluator" Type="Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" Index="4" FrameworkAlternate="aspnetcore-1.1" />
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Authorization.AuthorizationOptions&gt;" Index="5" FrameworkAlternate="aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <param name="policyProvider">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" /> used to provide policies.</param>
        <param name="handlers">The handlers used to fulfill <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />s.</param>
        <param name="logger">The logger used to log messages, warnings and errors.</param>
        <param name="contextFactory">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory" /> used to create the context to handle the authorization.</param>
        <param name="evaluator">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" /> used to determine if authorzation was successful.</param>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationOptions" /> used.</param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ AuthorizeAsync(System::Security::Claims::ClaimsPrincipal ^ user, System::Object ^ resource, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ requirements);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Authorization::AuthorizationResult ^&gt; ^ AuthorizeAsync(System::Security::Claims::ClaimsPrincipal ^ user, System::Object ^ resource, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ requirements);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; AuthorizeAsync (System.Security.Claims.ClaimsPrincipal user, object resource, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; AuthorizeAsync(class System.Security.Claims.ClaimsPrincipal user, object resource, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements) cil managed" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement})" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthorizeAsync (user As ClaimsPrincipal, resource As Object, requirements As IEnumerable(Of IAuthorizationRequirement)) As Task(Of Boolean)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="defaultAuthorizationService.AuthorizeAsync (user, resource, requirements)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (System.Security.Claims.ClaimsPrincipal user, object resource, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync(class System.Security.Claims.ClaimsPrincipal user, object resource, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements) cil managed" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthorizeAsync (user As ClaimsPrincipal, resource As Object, requirements As IEnumerable(Of IAuthorizationRequirement)) As Task(Of AuthorizationResult)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;&#xA;override this.AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;" Usage="defaultAuthorizationService.AuthorizeAsync (user, resource, requirements)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (System.Security.Claims.ClaimsPrincipal user, object? resource, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthorizeAsync (user As ClaimsPrincipal, resource As Object, requirements As IEnumerable(Of IAuthorizationRequirement)) As Task(Of AuthorizationResult)" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="requirements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;" />
      </Parameters>
      <Docs>
        <param name="user">The user to evaluate the requirements against.</param>
        <param name="resource">The resource to evaluate the requirements against.</param>
        <param name="requirements">The requirements to evaluate.</param>
        <summary>
            Checks if a user meets a specific set of requirements for the specified resource.
            </summary>
        <returns>
            A flag indicating whether authorization has succeeded.
            This value is <c>true</c> when the user fulfills the policy, otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ AuthorizeAsync(System::Security::Claims::ClaimsPrincipal ^ user, System::Object ^ resource, System::String ^ policyName);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Authorization::AuthorizationResult ^&gt; ^ AuthorizeAsync(System::Security::Claims::ClaimsPrincipal ^ user, System::Object ^ resource, System::String ^ policyName);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; AuthorizeAsync (System.Security.Claims.ClaimsPrincipal user, object resource, string policyName);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; AuthorizeAsync(class System.Security.Claims.ClaimsPrincipal user, object resource, string policyName) cil managed" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthorizeAsync (user As ClaimsPrincipal, resource As Object, policyName As String) As Task(Of Boolean)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * string -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="defaultAuthorizationService.AuthorizeAsync (user, resource, policyName)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (System.Security.Claims.ClaimsPrincipal user, object resource, string policyName);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync(class System.Security.Claims.ClaimsPrincipal user, object resource, string policyName) cil managed" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthorizeAsync (user As ClaimsPrincipal, resource As Object, policyName As String) As Task(Of AuthorizationResult)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;&#xA;override this.AuthorizeAsync : System.Security.Claims.ClaimsPrincipal * obj * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;" Usage="defaultAuthorizationService.AuthorizeAsync (user, resource, policyName)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt; AuthorizeAsync (System.Security.Claims.ClaimsPrincipal user, object? resource, string policyName);" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthorizeAsync (user As ClaimsPrincipal, resource As Object, policyName As String) As Task(Of AuthorizationResult)" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1">System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        <ReturnType FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authorization.AuthorizationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="user">The user to check the policy against.</param>
        <param name="resource">The resource the policy should be checked with.</param>
        <param name="policyName">The name of the policy to check against a specific context.</param>
        <summary>
            Checks if a user meets a specific authorization policy.
            </summary>
        <returns>
            A flag indicating whether authorization has succeeded.
            This value is <c>true</c> when the user fulfills the policy otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
