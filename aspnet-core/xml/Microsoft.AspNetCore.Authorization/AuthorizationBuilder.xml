<Type Name="AuthorizationBuilder" FullName="Microsoft.AspNetCore.Authorization.AuthorizationBuilder">
  <TypeSignature Language="C#" Value="public class AuthorizationBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.AuthorizationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationBuilder" />
  <TypeSignature Language="F#" Value="type AuthorizationBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Used to configure authorization
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (services As IServiceCollection)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Authorization.AuthorizationBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="new Microsoft.AspNetCore.Authorization.AuthorizationBuilder services" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">The services being configured.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddDefaultPolicy (string name, Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddDefaultPolicy(string name, class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.AddDefaultPolicy(System.String,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDefaultPolicy (name As String, policy As AuthorizationPolicy) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddDefaultPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.AddDefaultPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.AddDefaultPolicy (name, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="name">The name of the default policy.</param>
        <param name="policy">The default <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />.&gt;</param>
        <summary>
            Add a policy that is built from a delegate with the provided name and used as the default policy.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddDefaultPolicy (string name, Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddDefaultPolicy(string name, class System.Action`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.AddDefaultPolicy(System.String,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDefaultPolicy (name As String, configurePolicy As Action(Of AuthorizationPolicyBuilder)) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddDefaultPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.AddDefaultPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.AddDefaultPolicy (name, configurePolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurePolicy" Type="System.Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the DefaultPolicy.</param>
        <param name="configurePolicy">The delegate that will be used to build the DefaultPolicy.</param>
        <summary>
            Add a policy that is built from a delegate with the provided name and used as the DefaultPolicy.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddFallbackPolicy (string name, Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddFallbackPolicy(string name, class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.AddFallbackPolicy(System.String,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddFallbackPolicy (name As String, policy As AuthorizationPolicy) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddFallbackPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.AddFallbackPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.AddFallbackPolicy (name, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="name">The name of the FallbackPolicy.</param>
        <param name="policy">The Fallback <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />.&gt;</param>
        <summary>
            Add a policy that is built from a delegate with the provided name and used as the FallbackPolicy.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFallbackPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddFallbackPolicy (string name, Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddFallbackPolicy(string name, class System.Action`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.AddFallbackPolicy(System.String,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddFallbackPolicy (name As String, configurePolicy As Action(Of AuthorizationPolicyBuilder)) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddFallbackPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.AddFallbackPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.AddFallbackPolicy (name, configurePolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurePolicy" Type="System.Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the Fallback policy.</param>
        <param name="configurePolicy">The delegate that will be used to build the Fallback policy.</param>
        <summary>
            Add a policy that is built from a delegate with the provided name and used as the FallbackPolicy.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddPolicy (string name, Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddPolicy(string name, class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.AddPolicy(System.String,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPolicy (name As String, policy As AuthorizationPolicy) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.AddPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.AddPolicy (name, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="name">The name of this policy.</param>
        <param name="policy">The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />.&gt;</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy" /> which can be used by <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" />.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddPolicy (string name, Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder AddPolicy(string name, class System.Action`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.AddPolicy(System.String,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPolicy (name As String, configurePolicy As Action(Of AuthorizationPolicyBuilder)) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.AddPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.AddPolicy (name, configurePolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurePolicy" Type="System.Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the policy.</param>
        <param name="configurePolicy">The delegate that will be used to build the policy.</param>
        <summary>
            Add a policy that is built from a delegate with the provided name.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.DependencyInjection.IServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.Services" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Services As IServiceCollection" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Authorization.AuthorizationBuilder.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The services being configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder SetDefaultPolicy (Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder SetDefaultPolicy(class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.SetDefaultPolicy(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetDefaultPolicy (policy As AuthorizationPolicy) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultPolicy : Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.SetDefaultPolicy : Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.SetDefaultPolicy policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">To be added.</param>
        <summary>
            Sets the default authorization policy. Defaults to require authenticated users.
            </summary>
        <returns>The builder.</returns>
        <remarks>
            The default policy used when evaluating <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" /> with no policy name specified.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFallbackPolicy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder SetFallbackPolicy (Microsoft.AspNetCore.Authorization.AuthorizationPolicy? policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder SetFallbackPolicy(class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.SetFallbackPolicy(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetFallbackPolicy (policy As AuthorizationPolicy) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetFallbackPolicy : Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.SetFallbackPolicy : Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.SetFallbackPolicy policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="policy">To be added.</param>
        <summary>
            Sets the fallback authorization policy used by <see cref="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})" />
            when no IAuthorizeData have been provided. As a result, the AuthorizationMiddleware uses the fallback policy
            if there are no <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" /> instances for a resource. If a resource has any <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData" />
            then they are evaluated instead of the fallback policy. By default the fallback policy is null, and usually will have no
            effect unless you have the AuthorizationMiddleware in your pipeline. It is not used in any way by the
            default <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" />.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInvokeHandlersAfterFailure">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Authorization.AuthorizationBuilder SetInvokeHandlersAfterFailure (bool invoke);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Authorization.AuthorizationBuilder SetInvokeHandlersAfterFailure(bool invoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationBuilder.SetInvokeHandlersAfterFailure(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetInvokeHandlersAfterFailure (invoke As Boolean) As AuthorizationBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetInvokeHandlersAfterFailure : bool -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder&#xA;override this.SetInvokeHandlersAfterFailure : bool -&gt; Microsoft.AspNetCore.Authorization.AuthorizationBuilder" Usage="authorizationBuilder.SetInvokeHandlersAfterFailure invoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invoke" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invoke">To be added.</param>
        <summary>
            Determines whether authorization handlers should be invoked after <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed" />.
            Defaults to true.
            </summary>
        <returns>The builder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
