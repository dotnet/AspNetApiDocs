<Type Name="WebRenderer" FullName="Microsoft.AspNetCore.Components.RenderTree.WebRenderer">
  <TypeSignature Language="C#" Value="public abstract class WebRenderer : Microsoft.AspNetCore.Components.RenderTree.Renderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebRenderer extends Microsoft.AspNetCore.Components.RenderTree.Renderer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.RenderTree.WebRenderer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRenderer&#xA;Inherits Renderer" />
  <TypeSignature Language="F#" Value="type WebRenderer = class&#xA;    inherit Renderer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Components.RenderTree.Renderer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Microsoft.AspNetCore.Components.RenderTree.Renderer" /> that attaches its components to a browser DOM.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebRenderer (IServiceProvider serviceProvider, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, System.Text.Json.JsonSerializerOptions jsonOptions, Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop jsComponentInterop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class System.Text.Json.JsonSerializerOptions jsonOptions, class Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop jsComponentInterop) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Json.JsonSerializerOptions,Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider, loggerFactory As ILoggerFactory, jsonOptions As JsonSerializerOptions, jsComponentInterop As JSComponentInterop)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.RenderTree.WebRenderer : IServiceProvider * Microsoft.Extensions.Logging.ILoggerFactory * System.Text.Json.JsonSerializerOptions * Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop -&gt; Microsoft.AspNetCore.Components.RenderTree.WebRenderer" Usage="new Microsoft.AspNetCore.Components.RenderTree.WebRenderer (serviceProvider, loggerFactory, jsonOptions, jsComponentInterop)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="jsonOptions" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="jsComponentInterop" Type="Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to be used when initializing components.</param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <param name="jsonOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" />.</param>
        <param name="jsComponentInterop">The <see cref="T:Microsoft.AspNetCore.Components.Web.Infrastructure.JSComponentInterop" />.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.RenderTree.WebRenderer" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRootComponent">
      <MemberSignature Language="C#" Value="protected internal int AddRootComponent (Type componentType, string domElementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance int32 AddRootComponent(class System.Type componentType, string domElementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.AddRootComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function AddRootComponent (componentType As Type, domElementSelector As String) As Integer" />
      <MemberSignature Language="F#" Value="member this.AddRootComponent : Type * string -&gt; int" Usage="webRenderer.AddRootComponent (componentType, domElementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="domElementSelector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentType">The type of the component.</param>
        <param name="domElementSelector">A CSS selector that uniquely identifies a DOM element.</param>
        <summary>
            Instantiates a root component and attaches it to the browser within the specified element.
            </summary>
        <returns>The new component ID.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachRootComponentToBrowser">
      <MemberSignature Language="C#" Value="protected abstract void AttachRootComponentToBrowser (int componentId, string domElementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AttachRootComponentToBrowser(int32 componentId, string domElementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.AttachRootComponentToBrowser(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AttachRootComponentToBrowser (componentId As Integer, domElementSelector As String)" />
      <MemberSignature Language="F#" Value="abstract member AttachRootComponentToBrowser : int * string -&gt; unit" Usage="webRenderer.AttachRootComponentToBrowser (componentId, domElementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentId" Type="System.Int32" />
        <Parameter Name="domElementSelector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentId">The component ID.</param>
        <param name="domElementSelector">A CSS selector that uniquely identifies a DOM element.</param>
        <summary>
            Called by the framework to give a location for the specified root component in the browser DOM.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="webRenderer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetWebRendererId">
      <MemberSignature Language="C#" Value="protected virtual int GetWebRendererId ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetWebRendererId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.GetWebRendererId" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRendererId () As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetWebRendererId : unit -&gt; int&#xA;override this.GetWebRendererId : unit -&gt; int" Usage="webRenderer.GetWebRendererId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Allocates an identifier for the renderer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendererId">
      <MemberSignature Language="C#" Value="protected int RendererId { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RendererId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.RendererId" />
      <MemberSignature Language="VB.NET" Value="Protected Property RendererId As Integer" />
      <MemberSignature Language="F#" Value="member this.RendererId : int with get, set" Usage="Microsoft.AspNetCore.Components.RenderTree.WebRenderer.RendererId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0">
          <AttributeName Language="C#">[set: System.Obsolete("The renderer ID can be assigned by overriding 'GetWebRendererId'.")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Obsolete("The renderer ID can be assigned by overriding 'GetWebRendererId'.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the identifier for the renderer.
            </summary>
        <value>To be added.</value>
        <remarks>
            Accessing <see cref="P:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.RendererId" /> before the renderer is attached will throw an <see cref="T:System.InvalidOperationException" />. Call
            <see cref="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.WaitUntilAttachedAsync" /> to wait until the renderer gets attached to the browser.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRootComponents">
      <MemberSignature Language="C#" Value="protected virtual void UpdateRootComponents (string operationsJson);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateRootComponents(string operationsJson) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.WebRenderer.UpdateRootComponents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateRootComponents (operationsJson As String)" />
      <MemberSignature Language="F#" Value="abstract member UpdateRootComponents : string -&gt; unit&#xA;override this.UpdateRootComponents : string -&gt; unit" Usage="webRenderer.UpdateRootComponents operationsJson" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Web</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationsJson" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="operationsJson">A JSON-serialized list of operations to perform on the renderer's root components.</param>
        <summary>
            Performs the specified operations on the renderer's root components.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
