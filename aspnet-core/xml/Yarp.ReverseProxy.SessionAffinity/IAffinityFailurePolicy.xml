<Type Name="IAffinityFailurePolicy" FullName="Yarp.ReverseProxy.SessionAffinity.IAffinityFailurePolicy">
  <TypeSignature Language="C#" Value="public interface IAffinityFailurePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAffinityFailurePolicy" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.SessionAffinity.IAffinityFailurePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAffinityFailurePolicy" />
  <TypeSignature Language="F#" Value="type IAffinityFailurePolicy = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAffinityFailurePolicy" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Affinity failures handling policy.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; Handle (Microsoft.AspNetCore.Http.HttpContext context, Yarp.ReverseProxy.Model.ClusterState cluster, Yarp.ReverseProxy.SessionAffinity.AffinityStatus affinityStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; Handle(class Microsoft.AspNetCore.Http.HttpContext context, class Yarp.ReverseProxy.Model.ClusterState cluster, valuetype Yarp.ReverseProxy.SessionAffinity.AffinityStatus affinityStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.SessionAffinity.IAffinityFailurePolicy.Handle(Microsoft.AspNetCore.Http.HttpContext,Yarp.ReverseProxy.Model.ClusterState,Yarp.ReverseProxy.SessionAffinity.AffinityStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Function Handle (context As HttpContext, cluster As ClusterState, affinityStatus As AffinityStatus) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Handle : Microsoft.AspNetCore.Http.HttpContext * Yarp.ReverseProxy.Model.ClusterState * Yarp.ReverseProxy.SessionAffinity.AffinityStatus -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iAffinityFailurePolicy.Handle (context, cluster, affinityStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Model.ClusterState" />
        <Parameter Name="affinityStatus" Type="Yarp.ReverseProxy.SessionAffinity.AffinityStatus" />
      </Parameters>
      <Docs>
        <param name="context">Current request's context.</param>
        <param name="cluster">The associated cluster for the request.</param>
        <param name="affinityStatus">Affinity resolution status.</param>
        <summary>
            Handles affinity failures. This method assumes the full control on <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />
            and can change it in any way.
            </summary>
        <returns>
            'true' if the failure is considered recoverable and the request processing can proceed.
            Otherwise, 'false' indicating that an error response has been generated and the request's processing must be terminated.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.SessionAffinity.IAffinityFailurePolicy.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Yarp.ReverseProxy.SessionAffinity.IAffinityFailurePolicy.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A unique identifier for this failure policy. This will be referenced from config.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
