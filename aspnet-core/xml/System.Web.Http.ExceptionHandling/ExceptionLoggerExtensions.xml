<Type Name="ExceptionLoggerExtensions" FullName="System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class ExceptionLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ExceptionLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ExceptionLoggerExtensions" />
  <TypeSignature Language="F#" Value="type ExceptionLoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides extension methods for <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LogAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task LogAsync (this System.Web.Http.ExceptionHandling.IExceptionLogger logger, System.Web.Http.ExceptionHandling.ExceptionContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task LogAsync(class System.Web.Http.ExceptionHandling.IExceptionLogger logger, class System.Web.Http.ExceptionHandling.ExceptionContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions.LogAsync(System.Web.Http.ExceptionHandling.IExceptionLogger,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LogAsync (logger As IExceptionLogger, context As ExceptionContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="static member LogAsync : System.Web.Http.ExceptionHandling.IExceptionLogger * System.Web.Http.ExceptionHandling.ExceptionContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions.LogAsync (logger, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="System.Web.Http.ExceptionHandling.IExceptionLogger" RefType="this" />
        <Parameter Name="context" Type="System.Web.Http.ExceptionHandling.ExceptionContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="logger">The unhandled exception logger.</param>
        <param name="context">The exception context.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>Calls an exception logger.</summary>
        <returns>A task representing the asynchronous exception logging operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
