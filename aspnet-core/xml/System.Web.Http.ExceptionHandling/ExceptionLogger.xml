<Type Name="ExceptionLogger" FullName="System.Web.Http.ExceptionHandling.ExceptionLogger">
  <TypeSignature Language="C#" Value="public abstract class ExceptionLogger : System.Web.Http.ExceptionHandling.IExceptionLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExceptionLogger extends System.Object implements class System.Web.Http.ExceptionHandling.IExceptionLogger" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.ExceptionHandling.ExceptionLogger" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExceptionLogger&#xA;Implements IExceptionLogger" />
  <TypeSignature Language="F#" Value="type ExceptionLogger = class&#xA;    interface IExceptionLogger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.ExceptionHandling.IExceptionLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents an unhandled exception logger.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExceptionLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.ExceptionHandling.ExceptionLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLogger" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (System.Web.Http.ExceptionHandling.ExceptionLoggerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class System.Web.Http.ExceptionHandling.ExceptionLoggerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.ExceptionHandling.ExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log (context As ExceptionLoggerContext)" />
      <MemberSignature Language="F#" Value="abstract member Log : System.Web.Http.ExceptionHandling.ExceptionLoggerContext -&gt; unit&#xA;override this.Log : System.Web.Http.ExceptionHandling.ExceptionLoggerContext -&gt; unit" Usage="exceptionLogger.Log context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.ExceptionHandling.ExceptionLoggerContext" />
      </Parameters>
      <Docs>
        <param name="context">The exception logger context.</param>
        <summary>When overridden in a derived class, logs the exception synchronously.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task LogAsync (System.Web.Http.ExceptionHandling.ExceptionLoggerContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LogAsync(class System.Web.Http.ExceptionHandling.ExceptionLoggerContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LogAsync (context As ExceptionLoggerContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member LogAsync : System.Web.Http.ExceptionHandling.ExceptionLoggerContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.LogAsync : System.Web.Http.ExceptionHandling.ExceptionLoggerContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="exceptionLogger.LogAsync (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.ExceptionHandling.ExceptionLoggerContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The exception logger context.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>When overridden in a derived class, logs the exception asynchronously.</summary>
        <returns>A task representing the asynchronous exception logging operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLog">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLog (System.Web.Http.ExceptionHandling.ExceptionLoggerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLog(class System.Web.Http.ExceptionHandling.ExceptionLoggerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLog (context As ExceptionLoggerContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLog : System.Web.Http.ExceptionHandling.ExceptionLoggerContext -&gt; bool&#xA;override this.ShouldLog : System.Web.Http.ExceptionHandling.ExceptionLoggerContext -&gt; bool" Usage="exceptionLogger.ShouldLog context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.ExceptionHandling.ExceptionLoggerContext" />
      </Parameters>
      <Docs>
        <param name="context">The exception logger context.</param>
        <summary>Determines whether the exception should be logged.</summary>
        <returns>true if the exception should be logged; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IExceptionLogger.LogAsync (System.Web.Http.ExceptionHandling.ExceptionLoggerContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync(class System.Web.Http.ExceptionHandling.ExceptionLoggerContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.ExceptionHandling.ExceptionLogger.System#Web#Http#ExceptionHandling#IExceptionLogger#LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function LogAsync (context As ExceptionLoggerContext, cancellationToken As CancellationToken) As Task Implements IExceptionLogger.LogAsync" />
      <MemberSignature Language="F#" Value="abstract member System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync : System.Web.Http.ExceptionHandling.ExceptionLoggerContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync : System.Web.Http.ExceptionHandling.ExceptionLoggerContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="exceptionLogger.System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.ExceptionHandling.ExceptionLoggerContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
