<Type Name="ElmScope" FullName="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope">
  <TypeSignature Language="C++ CLI" Value="public ref class ElmScope" />
  <TypeSignature Language="C#" Value="public class ElmScope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElmScope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope" />
  <TypeSignature Language="VB.NET" Value="Public Class ElmScope" />
  <TypeSignature Language="F#" Value="type ElmScope = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElmScope(System::String ^ name, System::Object ^ state);" />
      <MemberSignature Language="C#" Value="public ElmScope (string name, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, state As Object)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Diagnostics.Elm.ElmScope : string * obj -&gt; Microsoft.AspNetCore.Diagnostics.Elm.ElmScope" Usage="new Microsoft.AspNetCore.Diagnostics.Elm.ElmScope (name, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Diagnostics::Elm::ActivityContext ^ Context { Microsoft::AspNetCore::Diagnostics::Elm::ActivityContext ^ get(); void set(Microsoft::AspNetCore::Diagnostics::Elm::ActivityContext ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As ActivityContext" />
      <MemberSignature Language="F#" Value="member this.Context : Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext with get, set" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ Current { Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ get(); void set(Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ value); };" />
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Diagnostics.Elm.ElmScope Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.AspNetCore.Diagnostics.Elm.ElmScope Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As ElmScope" />
      <MemberSignature Language="F#" Value="static member Current : Microsoft.AspNetCore.Diagnostics.Elm.ElmScope with get, set" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Diagnostics.Elm.ElmScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Diagnostics::Elm::ScopeNode ^ Node { Microsoft::AspNetCore::Diagnostics::Elm::ScopeNode ^ get(); void set(Microsoft::AspNetCore::Diagnostics::Elm::ScopeNode ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode Node { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode Node" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Node" />
      <MemberSignature Language="VB.NET" Value="Public Property Node As ScopeNode" />
      <MemberSignature Language="F#" Value="member this.Node : Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode with get, set" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ Parent { Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ get(); void set(Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Diagnostics.Elm.ElmScope Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Diagnostics.Elm.ElmScope Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As ElmScope" />
      <MemberSignature Language="F#" Value="member this.Parent : Microsoft.AspNetCore.Diagnostics.Elm.ElmScope with get, set" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Diagnostics.Elm.ElmScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Push(Microsoft::AspNetCore::Diagnostics::Elm::ElmScope ^ scope, Microsoft::AspNetCore::Diagnostics::Elm::ElmStore ^ store);" />
      <MemberSignature Language="C#" Value="public static IDisposable Push (Microsoft.AspNetCore.Diagnostics.Elm.ElmScope scope, Microsoft.AspNetCore.Diagnostics.Elm.ElmStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Push(class Microsoft.AspNetCore.Diagnostics.Elm.ElmScope scope, class Microsoft.AspNetCore.Diagnostics.Elm.ElmStore store) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Push(Microsoft.AspNetCore.Diagnostics.Elm.ElmScope,Microsoft.AspNetCore.Diagnostics.Elm.ElmStore)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Push (scope As ElmScope, store As ElmStore) As IDisposable" />
      <MemberSignature Language="F#" Value="static member Push : Microsoft.AspNetCore.Diagnostics.Elm.ElmScope * Microsoft.AspNetCore.Diagnostics.Elm.ElmStore -&gt; IDisposable" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Push (scope, store)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Microsoft.AspNetCore.Diagnostics.Elm.ElmScope" />
        <Parameter Name="store" Type="Microsoft.AspNetCore.Diagnostics.Elm.ElmStore" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="store">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
