<Type Name="IKeyManager" FullName="Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager">
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyManager" />
  <TypeSignature Language="C#" Value="public interface IKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyManager" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyManager" />
  <TypeSignature Language="F#" Value="type IKeyManager = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IKeyManager" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The basic interface for performing key management operations.
            </summary>
    <remarks>
            Instantiations of this interface are expected to be thread-safe.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateNewKey">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::DataProtection::KeyManagement::IKey ^ CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.DataProtection.KeyManagement.IKey CreateNewKey (DateTimeOffset activationDate, DateTimeOffset expirationDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.DataProtection.KeyManagement.IKey CreateNewKey(valuetype System.DateTimeOffset activationDate, valuetype System.DateTimeOffset expirationDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager.CreateNewKey(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNewKey (activationDate As DateTimeOffset, expirationDate As DateTimeOffset) As IKey" />
      <MemberSignature Language="F#" Value="abstract member CreateNewKey : DateTimeOffset * DateTimeOffset -&gt; Microsoft.AspNetCore.DataProtection.KeyManagement.IKey" Usage="iKeyManager.CreateNewKey (activationDate, expirationDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.DataProtection.KeyManagement.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationDate" Type="System.DateTimeOffset" />
        <Parameter Name="expirationDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="activationDate">The date on which encryptions to this key may begin.</param>
        <param name="expirationDate">The date after which encryptions to this key may no longer take place.</param>
        <summary>
            Creates a new key with the specified activation and expiration dates and persists
            the new key to the underlying repository.
            </summary>
        <returns>The newly-created IKey instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllKeys">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::AspNetCore::DataProtection::KeyManagement::IKey ^&gt; ^ GetAllKeys();" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.AspNetCore.DataProtection.KeyManagement.IKey&gt; GetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.AspNetCore.DataProtection.KeyManagement.IKey&gt; GetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager.GetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllKeys () As IReadOnlyCollection(Of IKey)" />
      <MemberSignature Language="F#" Value="abstract member GetAllKeys : unit -&gt; System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.AspNetCore.DataProtection.KeyManagement.IKey&gt;" Usage="iKeyManager.GetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.AspNetCore.DataProtection.KeyManagement.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Fetches all keys from the underlying repository.
            </summary>
        <returns>The collection of all keys.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheExpirationToken">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationToken GetCacheExpirationToken();" />
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken GetCacheExpirationToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.CancellationToken GetCacheExpirationToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager.GetCacheExpirationToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheExpirationToken () As CancellationToken" />
      <MemberSignature Language="F#" Value="abstract member GetCacheExpirationToken : unit -&gt; System.Threading.CancellationToken" Usage="iKeyManager.GetCacheExpirationToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves a token that signals that callers who have cached the return value of
            GetAllKeys should clear their caches. This could be in response to a call to
            CreateNewKey or RevokeKey, or it could be in response to some other external notification.
            Callers who are interested in observing this token should call this method before the
            corresponding call to GetAllKeys.
            </summary>
        <returns>
            The cache expiration token. When an expiration notification is triggered, any
            tokens previously returned by this method will become canceled, and tokens returned by
            future invocations of this method will themselves not trigger until the next expiration
            event.
            </returns>
        <remarks>
            Implementations are free to return 'CancellationToken.None' from this method.
            Since this token is never guaranteed to fire, callers should still manually
            clear their caches at a regular interval.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeAllKeys">
      <MemberSignature Language="C#" Value="public void RevokeAllKeys (DateTimeOffset revocationDate, string reason = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeAllKeys(valuetype System.DateTimeOffset revocationDate, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager.RevokeAllKeys(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeAllKeys (revocationDate As DateTimeOffset, Optional reason As String = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member RevokeAllKeys : DateTimeOffset * string -&gt; unit" Usage="iKeyManager.RevokeAllKeys (revocationDate, reason)" />
      <MemberSignature Language="C#" Value="public void RevokeAllKeys (DateTimeOffset revocationDate, string? reason = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="revocationDate" Type="System.DateTimeOffset" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="revocationDate">The revocation date. All keys with a creation date before
            this value will be revoked.</param>
        <param name="reason">An optional human-readable reason for revocation.</param>
        <summary>
            Revokes all keys created before a specified date and persists the revocation to the
            underlying repository.
            </summary>
        <remarks>
            This method will not mutate existing IKey instances. After calling this method,
            all existing IKey instances should be discarded, and GetAllKeys should be called again.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeKey">
      <MemberSignature Language="C#" Value="public void RevokeKey (Guid keyId, string reason = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeKey(valuetype System.Guid keyId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager.RevokeKey(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeKey (keyId As Guid, Optional reason As String = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member RevokeKey : Guid * string -&gt; unit" Usage="iKeyManager.RevokeKey (keyId, reason)" />
      <MemberSignature Language="C#" Value="public void RevokeKey (Guid keyId, string? reason = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.DataProtection</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyId">The id of the key to revoke.</param>
        <param name="reason">An optional human-readable reason for revocation.</param>
        <summary>
            Revokes a specific key and persists the revocation to the underlying repository.
            </summary>
        <remarks>
            This method will not mutate existing IKey instances. After calling this method,
            all existing IKey instances should be discarded, and GetAllKeys should be called again.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
