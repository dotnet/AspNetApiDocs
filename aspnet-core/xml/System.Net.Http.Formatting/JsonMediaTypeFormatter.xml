<Type Name="JsonMediaTypeFormatter" FullName="System.Net.Http.Formatting.JsonMediaTypeFormatter">
  <TypeSignature Language="C#" Value="public class JsonMediaTypeFormatter : System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonMediaTypeFormatter extends System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonMediaTypeFormatter&#xA;Inherits BaseJsonMediaTypeFormatter" />
  <TypeSignature Language="F#" Value="type JsonMediaTypeFormatter = class&#xA;    inherit BaseJsonMediaTypeFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.Formatting.BaseJsonMediaTypeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to handle Json.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonMediaTypeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonMediaTypeFormatter (System.Net.Http.Formatting.JsonMediaTypeFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.Formatting.JsonMediaTypeFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.JsonMediaTypeFormatter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatter As JsonMediaTypeFormatter)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.Formatting.JsonMediaTypeFormatter : System.Net.Http.Formatting.JsonMediaTypeFormatter -&gt; System.Net.Http.Formatting.JsonMediaTypeFormatter" Usage="new System.Net.Http.Formatting.JsonMediaTypeFormatter formatter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.JsonMediaTypeFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">The <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> instance to copy settings from.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadType">
      <MemberSignature Language="C#" Value="public override bool CanReadType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CanReadType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadType (type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanReadType : Type -&gt; bool" Usage="jsonMediaTypeFormatter.CanReadType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteType">
      <MemberSignature Language="C#" Value="public override bool CanWriteType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CanWriteType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanWriteType (type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanWriteType : Type -&gt; bool" Usage="jsonMediaTypeFormatter.CanWriteType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataContractSerializer">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Serialization.Json.DataContractJsonSerializer CreateDataContractSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Serialization.Json.DataContractJsonSerializer CreateDataContractSerializer(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CreateDataContractSerializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataContractSerializer (type As Type) As DataContractJsonSerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateDataContractSerializer : Type -&gt; System.Runtime.Serialization.Json.DataContractJsonSerializer&#xA;override this.CreateDataContractSerializer : Type -&gt; System.Runtime.Serialization.Json.DataContractJsonSerializer" Usage="jsonMediaTypeFormatter.CreateDataContractSerializer type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Json.DataContractJsonSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public override Newtonsoft.Json.JsonReader CreateJsonReader (Type type, System.IO.Stream readStream, System.Text.Encoding effectiveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Newtonsoft.Json.JsonReader CreateJsonReader(class System.Type type, class System.IO.Stream readStream, class System.Text.Encoding effectiveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateJsonReader (type As Type, readStream As Stream, effectiveEncoding As Encoding) As JsonReader" />
      <MemberSignature Language="F#" Value="override this.CreateJsonReader : Type * System.IO.Stream * System.Text.Encoding -&gt; Newtonsoft.Json.JsonReader" Usage="jsonMediaTypeFormatter.CreateJsonReader (type, readStream, effectiveEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="readStream">To be added.</param>
        <param name="effectiveEncoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public override Newtonsoft.Json.JsonWriter CreateJsonWriter (Type type, System.IO.Stream writeStream, System.Text.Encoding effectiveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Newtonsoft.Json.JsonWriter CreateJsonWriter(class System.Type type, class System.IO.Stream writeStream, class System.Text.Encoding effectiveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateJsonWriter (type As Type, writeStream As Stream, effectiveEncoding As Encoding) As JsonWriter" />
      <MemberSignature Language="F#" Value="override this.CreateJsonWriter : Type * System.IO.Stream * System.Text.Encoding -&gt; Newtonsoft.Json.JsonWriter" Usage="jsonMediaTypeFormatter.CreateJsonWriter (type, writeStream, effectiveEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="writeStream">To be added.</param>
        <param name="effectiveEncoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DefaultMediaType">
      <MemberSignature Language="C#" Value="public static System.Net.Http.Headers.MediaTypeHeaderValue DefaultMediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Http.Headers.MediaTypeHeaderValue DefaultMediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.DefaultMediaType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMediaType As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="static member DefaultMediaType : System.Net.Http.Headers.MediaTypeHeaderValue" Usage="System.Net.Http.Formatting.JsonMediaTypeFormatter.DefaultMediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the default media type for Json, namely "application/json".
            </summary>
        <value>
            Because <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> is mutable, the value
            returned will be a new instance every time.
            </value>
        <remarks>
            The default media type does not have any <c>charset</c> parameter as
            the <see cref="T:System.Text.Encoding" /> can be configured on a per <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" />
            instance basis.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Net.Http.Formatting.JsonMediaTypeFormatter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to indent elements when writing data. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public override sealed int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property MaxDepth As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Net.Http.Formatting.JsonMediaTypeFormatter.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStream">
      <MemberSignature Language="C#" Value="public override object ReadFromStream (Type type, System.IO.Stream readStream, System.Text.Encoding effectiveEncoding, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadFromStream(class System.Type type, class System.IO.Stream readStream, class System.Text.Encoding effectiveEncoding, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadFromStream (type As Type, readStream As Stream, effectiveEncoding As Encoding, formatterLogger As IFormatterLogger) As Object" />
      <MemberSignature Language="F#" Value="override this.ReadFromStream : Type * System.IO.Stream * System.Text.Encoding * System.Net.Http.Formatting.IFormatterLogger -&gt; obj" Usage="jsonMediaTypeFormatter.ReadFromStream (type, readStream, effectiveEncoding, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="readStream">To be added.</param>
        <param name="effectiveEncoding">To be added.</param>
        <param name="formatterLogger">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDataContractJsonSerializer">
      <MemberSignature Language="C#" Value="public bool UseDataContractJsonSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDataContractJsonSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.UseDataContractJsonSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDataContractJsonSerializer As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseDataContractJsonSerializer : bool with get, set" Usage="System.Net.Http.Formatting.JsonMediaTypeFormatter.UseDataContractJsonSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStream">
      <MemberSignature Language="C#" Value="public override void WriteToStream (Type type, object value, System.IO.Stream writeStream, System.Text.Encoding effectiveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToStream(class System.Type type, object value, class System.IO.Stream writeStream, class System.Text.Encoding effectiveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToStream (type As Type, value As Object, writeStream As Stream, effectiveEncoding As Encoding)" />
      <MemberSignature Language="F#" Value="override this.WriteToStream : Type * obj * System.IO.Stream * System.Text.Encoding -&gt; unit" Usage="jsonMediaTypeFormatter.WriteToStream (type, value, writeStream, effectiveEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <param name="writeStream">To be added.</param>
        <param name="effectiveEncoding">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStreamAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToStreamAsync (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content, System.Net.TransportContext transportContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToStreamAsync(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content, class System.Net.TransportContext transportContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteToStreamAsync (type As Type, value As Object, writeStream As Stream, content As HttpContent, transportContext As TransportContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="override this.WriteToStreamAsync : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Net.TransportContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="jsonMediaTypeFormatter.WriteToStreamAsync (type, value, writeStream, content, transportContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <param name="writeStream">To be added.</param>
        <param name="content">To be added.</param>
        <param name="transportContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
