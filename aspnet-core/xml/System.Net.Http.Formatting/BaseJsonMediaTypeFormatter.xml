<Type Name="BaseJsonMediaTypeFormatter" FullName="System.Net.Http.Formatting.BaseJsonMediaTypeFormatter">
  <TypeSignature Language="C#" Value="public abstract class BaseJsonMediaTypeFormatter : System.Net.Http.Formatting.MediaTypeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseJsonMediaTypeFormatter extends System.Net.Http.Formatting.MediaTypeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseJsonMediaTypeFormatter&#xA;Inherits MediaTypeFormatter" />
  <TypeSignature Language="F#" Value="type BaseJsonMediaTypeFormatter = class&#xA;    inherit MediaTypeFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.Formatting.MediaTypeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Abstract <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to support Bson and Json.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseJsonMediaTypeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseJsonMediaTypeFormatter (System.Net.Http.Formatting.BaseJsonMediaTypeFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.Formatting.BaseJsonMediaTypeFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BaseJsonMediaTypeFormatter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatter As BaseJsonMediaTypeFormatter)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.Formatting.BaseJsonMediaTypeFormatter : System.Net.Http.Formatting.BaseJsonMediaTypeFormatter -&gt; System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" Usage="new System.Net.Http.Formatting.BaseJsonMediaTypeFormatter formatter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">The <see cref="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" /> instance to copy settings from.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadType">
      <MemberSignature Language="C#" Value="public override bool CanReadType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.CanReadType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadType (type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanReadType : Type -&gt; bool" Usage="baseJsonMediaTypeFormatter.CanReadType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object that will be read.</param>
        <summary>
            Determines whether this <see cref="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" /> can read objects
            of the specified <paramref name="type" />.
            </summary>
        <returns>
          <c>true</c> if objects of this <paramref name="type" /> can be read, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteType">
      <MemberSignature Language="C#" Value="public override bool CanWriteType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.CanWriteType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanWriteType (type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanWriteType : Type -&gt; bool" Usage="baseJsonMediaTypeFormatter.CanWriteType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object that will be written.</param>
        <summary>
            Determines whether this <see cref="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" /> can write objects
            of the specified <paramref name="type" />.
            </summary>
        <returns>
          <c>true</c> if objects of this <paramref name="type" /> can be written, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultSerializerSettings">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.JsonSerializerSettings CreateDefaultSerializerSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Newtonsoft.Json.JsonSerializerSettings CreateDefaultSerializerSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.CreateDefaultSerializerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultSerializerSettings () As JsonSerializerSettings" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultSerializerSettings : unit -&gt; Newtonsoft.Json.JsonSerializerSettings" Usage="baseJsonMediaTypeFormatter.CreateDefaultSerializerSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializerSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> instance with the default settings used by the <see cref="T:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public abstract Newtonsoft.Json.JsonReader CreateJsonReader (Type type, System.IO.Stream readStream, System.Text.Encoding effectiveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.JsonReader CreateJsonReader(class System.Type type, class System.IO.Stream readStream, class System.Text.Encoding effectiveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateJsonReader (type As Type, readStream As Stream, effectiveEncoding As Encoding) As JsonReader" />
      <MemberSignature Language="F#" Value="abstract member CreateJsonReader : Type * System.IO.Stream * System.Text.Encoding -&gt; Newtonsoft.Json.JsonReader" Usage="baseJsonMediaTypeFormatter.CreateJsonReader (type, readStream, effectiveEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object to read.</param>
        <param name="readStream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
        <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding" /> to use when reading.</param>
        <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonReader" />.
            </summary>
        <returns>The <see cref="T:Newtonsoft.Json.JsonWriter" /> used during deserialization.</returns>
        <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonSerializer">
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.JsonSerializer CreateJsonSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.JsonSerializer CreateJsonSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.CreateJsonSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJsonSerializer () As JsonSerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateJsonSerializer : unit -&gt; Newtonsoft.Json.JsonSerializer&#xA;override this.CreateJsonSerializer : unit -&gt; Newtonsoft.Json.JsonSerializer" Usage="baseJsonMediaTypeFormatter.CreateJsonSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called during serialization and deserialization to get the <see cref="T:Newtonsoft.Json.JsonSerializer" />.
            </summary>
        <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer" /> used during serialization and deserialization.</returns>
        <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" /> and <see cref="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public abstract Newtonsoft.Json.JsonWriter CreateJsonWriter (Type type, System.IO.Stream writeStream, System.Text.Encoding effectiveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.JsonWriter CreateJsonWriter(class System.Type type, class System.IO.Stream writeStream, class System.Text.Encoding effectiveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateJsonWriter (type As Type, writeStream As Stream, effectiveEncoding As Encoding) As JsonWriter" />
      <MemberSignature Language="F#" Value="abstract member CreateJsonWriter : Type * System.IO.Stream * System.Text.Encoding -&gt; Newtonsoft.Json.JsonWriter" Usage="baseJsonMediaTypeFormatter.CreateJsonWriter (type, writeStream, effectiveEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object to write.</param>
        <param name="writeStream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
        <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding" /> to use when writing.</param>
        <summary>
            Called during serialization to get the <see cref="T:Newtonsoft.Json.JsonWriter" />.
            </summary>
        <returns>The <see cref="T:Newtonsoft.Json.JsonWriter" /> used during serialization.</returns>
        <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public virtual int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxDepth As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStream">
      <MemberSignature Language="C#" Value="public virtual object ReadFromStream (Type type, System.IO.Stream readStream, System.Text.Encoding effectiveEncoding, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadFromStream(class System.Type type, class System.IO.Stream readStream, class System.Text.Encoding effectiveEncoding, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadFromStream (type As Type, readStream As Stream, effectiveEncoding As Encoding, formatterLogger As IFormatterLogger) As Object" />
      <MemberSignature Language="F#" Value="abstract member ReadFromStream : Type * System.IO.Stream * System.Text.Encoding * System.Net.Http.Formatting.IFormatterLogger -&gt; obj&#xA;override this.ReadFromStream : Type * System.IO.Stream * System.Text.Encoding * System.Net.Http.Formatting.IFormatterLogger -&gt; obj" Usage="baseJsonMediaTypeFormatter.ReadFromStream (type, readStream, effectiveEncoding, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object to read.</param>
        <param name="readStream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
        <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding" /> to use when reading.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary>
            Called during deserialization to read an object of the specified <paramref name="type" />
            from the specified <paramref name="readStream" />.
            </summary>
        <returns>The <see cref="T:System.Object" /> instance that has been read.</returns>
        <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStreamAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ReadFromStreamAsync (Type type, System.IO.Stream readStream, System.Net.Http.HttpContent content, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadFromStreamAsync(class System.Type type, class System.IO.Stream readStream, class System.Net.Http.HttpContent content, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadFromStreamAsync (type As Type, readStream As Stream, content As HttpContent, formatterLogger As IFormatterLogger) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="override this.ReadFromStreamAsync : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="baseJsonMediaTypeFormatter.ReadFromStreamAsync (type, readStream, content, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object to read.</param>
        <param name="readStream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being written.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary>
            Called during deserialization to read an object of the specified <paramref name="type" />
            from the specified <paramref name="readStream" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> whose result will be the object instance that has been read.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerSettings">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.JsonSerializerSettings SerializerSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.JsonSerializerSettings SerializerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.SerializerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializerSettings As JsonSerializerSettings" />
      <MemberSignature Language="F#" Value="member this.SerializerSettings : Newtonsoft.Json.JsonSerializerSettings with get, set" Usage="System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.SerializerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStream">
      <MemberSignature Language="C#" Value="public virtual void WriteToStream (Type type, object value, System.IO.Stream writeStream, System.Text.Encoding effectiveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToStream(class System.Type type, object value, class System.IO.Stream writeStream, class System.Text.Encoding effectiveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToStream (type As Type, value As Object, writeStream As Stream, effectiveEncoding As Encoding)" />
      <MemberSignature Language="F#" Value="abstract member WriteToStream : Type * obj * System.IO.Stream * System.Text.Encoding -&gt; unit&#xA;override this.WriteToStream : Type * obj * System.IO.Stream * System.Text.Encoding -&gt; unit" Usage="baseJsonMediaTypeFormatter.WriteToStream (type, value, writeStream, effectiveEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="effectiveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Type" /> of object to write.</param>
        <param name="value">The object to write.</param>
        <param name="writeStream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
        <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding" /> to use when writing.</param>
        <summary>
            Called during serialization to write an object of the specified <paramref name="type" />
            to the specified <paramref name="writeStream" />.
            </summary>
        <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStreamAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToStreamAsync (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content, System.Net.TransportContext transportContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToStreamAsync(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content, class System.Net.TransportContext transportContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteToStreamAsync (type As Type, value As Object, writeStream As Stream, content As HttpContent, transportContext As TransportContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="override this.WriteToStreamAsync : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Net.TransportContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="baseJsonMediaTypeFormatter.WriteToStreamAsync (type, value, writeStream, content, transportContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <param name="writeStream">To be added.</param>
        <param name="content">To be added.</param>
        <param name="transportContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
