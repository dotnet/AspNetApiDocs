<Type Name="ICorsService" FullName="Microsoft.AspNetCore.Cors.Infrastructure.ICorsService">
  <TypeSignature Language="C++ CLI" Value="public interface class ICorsService" />
  <TypeSignature Language="C#" Value="public interface ICorsService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICorsService" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICorsService" />
  <TypeSignature Language="F#" Value="type ICorsService = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICorsService" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A type which can evaluate a policy for a particular <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyResult">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyResult(Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ result, Microsoft::AspNetCore::Http::HttpResponse ^ response);" />
      <MemberSignature Language="C#" Value="public void ApplyResult (Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result, Microsoft.AspNetCore.Http.HttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyResult(class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result, class Microsoft.AspNetCore.Http.HttpResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyResult (result As CorsResult, response As HttpResponse)" />
      <MemberSignature Language="F#" Value="abstract member ApplyResult : Microsoft.AspNetCore.Cors.Infrastructure.CorsResult * Microsoft.AspNetCore.Http.HttpResponse -&gt; unit" Usage="iCorsService.ApplyResult (result, response)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" />
        <Parameter Name="response" Type="Microsoft.AspNetCore.Http.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="result">The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> used to read the allowed values.</param>
        <param name="response">The <see cref="T:Microsoft.AspNetCore.Http.HttpResponse" /> associated with the current call.</param>
        <summary>
            Adds CORS-specific response headers to the given <paramref name="response" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatePolicy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ EvaluatePolicy(Microsoft::AspNetCore::Http::HttpContext ^ context, Microsoft::AspNetCore::Cors::Infrastructure::CorsPolicy ^ policy);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Cors.Infrastructure.CorsResult EvaluatePolicy (Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult EvaluatePolicy(class Microsoft.AspNetCore.Http.HttpContext context, class Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluatePolicy (context As HttpContext, policy As CorsPolicy) As CorsResult" />
      <MemberSignature Language="F#" Value="abstract member EvaluatePolicy : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy -&gt; Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" Usage="iCorsService.EvaluatePolicy (context, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Cors.Infrastructure.CorsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the call.</param>
        <param name="policy">The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" /> which needs to be evaluated.</param>
        <summary>
            Evaluates the given <paramref name="policy" /> using the passed in <paramref name="context" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> which contains the result of policy evaluation and can be
            used by the caller to set appropriate response headers.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
