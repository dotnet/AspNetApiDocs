<Type Name="CorsService" FullName="Microsoft.AspNetCore.Cors.Infrastructure.CorsService">
  <TypeSignature Language="C++ CLI" Value="public ref class CorsService : Microsoft::AspNetCore::Cors::Infrastructure::ICorsService" />
  <TypeSignature Language="C#" Value="public class CorsService : Microsoft.AspNetCore.Cors.Infrastructure.ICorsService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CorsService extends System.Object implements class Microsoft.AspNetCore.Cors.Infrastructure.ICorsService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsService" />
  <TypeSignature Language="VB.NET" Value="Public Class CorsService&#xA;Implements ICorsService" />
  <TypeSignature Language="F#" Value="type CorsService = class&#xA;    interface ICorsService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Cors.Infrastructure.ICorsService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CorsService(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Cors::Infrastructure::CorsOptions ^&gt; ^ options);" />
      <MemberSignature Language="C#" Value="public CorsService (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of CorsOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Cors.Infrastructure.CorsService : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt; -&gt; Microsoft.AspNetCore.Cors.Infrastructure.CorsService" Usage="new Microsoft.AspNetCore.Cors.Infrastructure.CorsService options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This constructor is obsolete and will be removed in a future version.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constructor is obsolete and will be removed in a future version.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt;" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
      </Parameters>
      <Docs>
        <param name="options">The option model representing <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions" />.</param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsService" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CorsService(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Cors::Infrastructure::CorsOptions ^&gt; ^ options, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberSignature Language="C#" Value="public CorsService (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt; options, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt; options, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of CorsOptions), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Cors.Infrastructure.CorsService : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Cors.Infrastructure.CorsService" Usage="new Microsoft.AspNetCore.Cors.Infrastructure.CorsService (options, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions&gt;" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="options">The option model representing <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions" />.</param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsService" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyResult">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyResult(Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ result, Microsoft::AspNetCore::Http::HttpResponse ^ response);" />
      <MemberSignature Language="C#" Value="public virtual void ApplyResult (Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result, Microsoft.AspNetCore.Http.HttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyResult(class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result, class Microsoft.AspNetCore.Http.HttpResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyResult (result As CorsResult, response As HttpResponse)" />
      <MemberSignature Language="F#" Value="abstract member ApplyResult : Microsoft.AspNetCore.Cors.Infrastructure.CorsResult * Microsoft.AspNetCore.Http.HttpResponse -&gt; unit&#xA;override this.ApplyResult : Microsoft.AspNetCore.Cors.Infrastructure.CorsResult * Microsoft.AspNetCore.Http.HttpResponse -&gt; unit" Usage="corsService.ApplyResult (result, response)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" />
        <Parameter Name="response" Type="Microsoft.AspNetCore.Http.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="response">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EvaluatePolicy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ EvaluatePolicy(Microsoft::AspNetCore::Http::HttpContext ^ context, Microsoft::AspNetCore::Cors::Infrastructure::CorsPolicy ^ policy);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Cors.Infrastructure.CorsResult EvaluatePolicy (Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult EvaluatePolicy(class Microsoft.AspNetCore.Http.HttpContext context, class Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluatePolicy (context As HttpContext, policy As CorsPolicy) As CorsResult" />
      <MemberSignature Language="F#" Value="abstract member EvaluatePolicy : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy -&gt; Microsoft.AspNetCore.Cors.Infrastructure.CorsResult&#xA;override this.EvaluatePolicy : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy -&gt; Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" Usage="corsService.EvaluatePolicy (context, policy)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Cors.Infrastructure.CorsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="policy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EvaluatePolicy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ EvaluatePolicy(Microsoft::AspNetCore::Http::HttpContext ^ context, System::String ^ policyName);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Cors.Infrastructure.CorsResult EvaluatePolicy (Microsoft.AspNetCore.Http.HttpContext context, string policyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult EvaluatePolicy(class Microsoft.AspNetCore.Http.HttpContext context, string policyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluatePolicy (context As HttpContext, policyName As String) As CorsResult" />
      <MemberSignature Language="F#" Value="member this.EvaluatePolicy : Microsoft.AspNetCore.Http.HttpContext * string -&gt; Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" Usage="corsService.EvaluatePolicy (context, policyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Cors.Infrastructure.CorsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="policyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context" />
        <param name="policyName" />
        <summary>
            Looks up a policy using the <paramref name="policyName" /> and then evaluates the policy using the passed in
            <paramref name="context" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> which contains the result of policy evaluation and can be
            used by the caller to set appropriate response headers.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatePreflightRequest">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EvaluatePreflightRequest(Microsoft::AspNetCore::Http::HttpContext ^ context, Microsoft::AspNetCore::Cors::Infrastructure::CorsPolicy ^ policy, Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ result);" />
      <MemberSignature Language="C#" Value="public virtual void EvaluatePreflightRequest (Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EvaluatePreflightRequest(class Microsoft.AspNetCore.Http.HttpContext context, class Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EvaluatePreflightRequest (context As HttpContext, policy As CorsPolicy, result As CorsResult)" />
      <MemberSignature Language="F#" Value="abstract member EvaluatePreflightRequest : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy * Microsoft.AspNetCore.Cors.Infrastructure.CorsResult -&gt; unit&#xA;override this.EvaluatePreflightRequest : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy * Microsoft.AspNetCore.Cors.Infrastructure.CorsResult -&gt; unit" Usage="corsService.EvaluatePreflightRequest (context, policy, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" />
        <Parameter Name="result" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" />
      </Parameters>
      <Docs>
        <param name="context">The current HTTP context.</param>
        <param name="policy">The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" /> to evaluate.</param>
        <param name="result">The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> to set the result on.</param>
        <summary>
            Evaluate a preflight request using the specified policy. The result is set on the specified <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateRequest">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EvaluateRequest(Microsoft::AspNetCore::Http::HttpContext ^ context, Microsoft::AspNetCore::Cors::Infrastructure::CorsPolicy ^ policy, Microsoft::AspNetCore::Cors::Infrastructure::CorsResult ^ result);" />
      <MemberSignature Language="C#" Value="public virtual void EvaluateRequest (Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EvaluateRequest(class Microsoft.AspNetCore.Http.HttpContext context, class Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, class Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EvaluateRequest (context As HttpContext, policy As CorsPolicy, result As CorsResult)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateRequest : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy * Microsoft.AspNetCore.Cors.Infrastructure.CorsResult -&gt; unit&#xA;override this.EvaluateRequest : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy * Microsoft.AspNetCore.Cors.Infrastructure.CorsResult -&gt; unit" Usage="corsService.EvaluateRequest (context, policy, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Cors</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" />
        <Parameter Name="result" Type="Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" />
      </Parameters>
      <Docs>
        <param name="context">The current HTTP context.</param>
        <param name="policy">The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" /> to evaluate.</param>
        <param name="result">The <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> to set the result on.</param>
        <summary>
            Evaluate a request using the specified policy. The result is set on the specified <see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
