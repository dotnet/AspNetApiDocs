<Type Name="InvalidModelStateResult" FullName="System.Web.Http.Results.InvalidModelStateResult">
  <TypeSignature Language="C#" Value="public class InvalidModelStateResult : System.Web.Http.IHttpActionResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvalidModelStateResult extends System.Object implements class System.Web.Http.IHttpActionResult" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Results.InvalidModelStateResult" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidModelStateResult&#xA;Implements IHttpActionResult" />
  <TypeSignature Language="F#" Value="type InvalidModelStateResult = class&#xA;    interface IHttpActionResult" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.IHttpActionResult</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents an action result that returns a <see cref="F:System.Net.HttpStatusCode.BadRequest" /> response and performs content negotiation on an <see cref="T:System.Web.Http.HttpError" /> based on a <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidModelStateResult (System.Web.Http.ModelBinding.ModelStateDictionary modelState, System.Web.Http.ApiController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Http.ModelBinding.ModelStateDictionary modelState, class System.Web.Http.ApiController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Web.Http.ApiController)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modelState As ModelStateDictionary, controller As ApiController)" />
      <MemberSignature Language="F#" Value="new System.Web.Http.Results.InvalidModelStateResult : System.Web.Http.ModelBinding.ModelStateDictionary * System.Web.Http.ApiController -&gt; System.Web.Http.Results.InvalidModelStateResult" Usage="new System.Web.Http.Results.InvalidModelStateResult (modelState, controller)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modelState" Type="System.Web.Http.ModelBinding.ModelStateDictionary" />
        <Parameter Name="controller" Type="System.Web.Http.ApiController" />
      </Parameters>
      <Docs>
        <param name="modelState">The model state to include in the error.</param>
        <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidModelStateResult (System.Web.Http.ModelBinding.ModelStateDictionary modelState, bool includeErrorDetail, System.Net.Http.Formatting.IContentNegotiator contentNegotiator, System.Net.Http.HttpRequestMessage request, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Http.ModelBinding.ModelStateDictionary modelState, bool includeErrorDetail, class System.Net.Http.Formatting.IContentNegotiator contentNegotiator, class System.Net.Http.HttpRequestMessage request, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modelState As ModelStateDictionary, includeErrorDetail As Boolean, contentNegotiator As IContentNegotiator, request As HttpRequestMessage, formatters As IEnumerable(Of MediaTypeFormatter))" />
      <MemberSignature Language="F#" Value="new System.Web.Http.Results.InvalidModelStateResult : System.Web.Http.ModelBinding.ModelStateDictionary * bool * System.Net.Http.Formatting.IContentNegotiator * System.Net.Http.HttpRequestMessage * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; -&gt; System.Web.Http.Results.InvalidModelStateResult" Usage="new System.Web.Http.Results.InvalidModelStateResult (modelState, includeErrorDetail, contentNegotiator, request, formatters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modelState" Type="System.Web.Http.ModelBinding.ModelStateDictionary" />
        <Parameter Name="includeErrorDetail" Type="System.Boolean" />
        <Parameter Name="contentNegotiator" Type="System.Net.Http.Formatting.IContentNegotiator" />
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
      </Parameters>
      <Docs>
        <param name="modelState">The model state to include in the error.</param>
        <param name="includeErrorDetail">true if the error should include exception messages; otherwise,  false.</param>
        <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
        <param name="request">The request message which led to this result.</param>
        <param name="formatters">The formatters to use to negotiate and format the content.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentNegotiator">
      <MemberSignature Language="C#" Value="public System.Net.Http.Formatting.IContentNegotiator ContentNegotiator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Formatting.IContentNegotiator ContentNegotiator" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Results.InvalidModelStateResult.ContentNegotiator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentNegotiator As IContentNegotiator" />
      <MemberSignature Language="F#" Value="member this.ContentNegotiator : System.Net.Http.Formatting.IContentNegotiator" Usage="System.Web.Http.Results.InvalidModelStateResult.ContentNegotiator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Formatting.IContentNegotiator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the content negotiator to handle content negotiation.</summary>
        <value>The content negotiator to handle content negotiation.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; ExecuteAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; ExecuteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Results.InvalidModelStateResult.ExecuteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteAsync (cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.ExecuteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="invalidModelStateResult.ExecuteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>Creates a response message asynchronously.</summary>
        <returns>A task that, when completed, contains the response message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; Formatters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; Formatters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Results.InvalidModelStateResult.Formatters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formatters As IEnumerable(Of MediaTypeFormatter)" />
      <MemberSignature Language="F#" Value="member this.Formatters : seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" Usage="System.Web.Http.Results.InvalidModelStateResult.Formatters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the formatters to use to negotiate and format the content.</summary>
        <value>The formatters to use to negotiate and format the content.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeErrorDetail">
      <MemberSignature Language="C#" Value="public bool IncludeErrorDetail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeErrorDetail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Results.InvalidModelStateResult.IncludeErrorDetail" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeErrorDetail As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeErrorDetail : bool" Usage="System.Web.Http.Results.InvalidModelStateResult.IncludeErrorDetail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the error should include exception messages.</summary>
        <value>true if the error should include exception messages; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public System.Web.Http.ModelBinding.ModelStateDictionary ModelState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Http.ModelBinding.ModelStateDictionary ModelState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Results.InvalidModelStateResult.ModelState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelState As ModelStateDictionary" />
      <MemberSignature Language="F#" Value="member this.ModelState : System.Web.Http.ModelBinding.ModelStateDictionary" Usage="System.Web.Http.Results.InvalidModelStateResult.ModelState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Http.ModelBinding.ModelStateDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the model state to include in the error.</summary>
        <value>The model state to include in the error.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpRequestMessage Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpRequestMessage Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.Results.InvalidModelStateResult.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequestMessage" />
      <MemberSignature Language="F#" Value="member this.Request : System.Net.Http.HttpRequestMessage" Usage="System.Web.Http.Results.InvalidModelStateResult.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpRequestMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the request message which led to this result.</summary>
        <value>The request message which led to this result.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
