<Type Name="ForwarderHttpClientFactory" FullName="Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory">
  <TypeSignature Language="C#" Value="public class ForwarderHttpClientFactory : Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ForwarderHttpClientFactory extends System.Object implements class Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ForwarderHttpClientFactory&#xA;Implements IForwarderHttpClientFactory" />
  <TypeSignature Language="F#" Value="type ForwarderHttpClientFactory = class&#xA;    interface IForwarderHttpClientFactory" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Default implementation of <see cref="T:Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForwarderHttpClientFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForwarderHttpClientFactory (Microsoft.Extensions.Logging.ILogger&lt;Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILogger`1&lt;class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory.#ctor(Microsoft.Extensions.Logging.ILogger{Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As ILogger(Of ForwarderHttpClientFactory))" />
      <MemberSignature Language="F#" Value="new Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory : Microsoft.Extensions.Logging.ILogger&lt;Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory&gt; -&gt; Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory" Usage="new Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory logger" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseOldClient">
      <MemberSignature Language="C#" Value="protected virtual bool CanReuseOldClient (Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReuseOldClient(class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory.CanReuseOldClient(Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanReuseOldClient (context As ForwarderHttpClientContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanReuseOldClient : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext -&gt; bool&#xA;override this.CanReuseOldClient : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext -&gt; bool" Usage="forwarderHttpClientFactory.CanReuseOldClient context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Checks if the options have changed since the old client was created. If not then the
            old client will be re-used. Re-use can avoid the latency of creating new connections.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHandler">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureHandler (Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context, System.Net.Http.SocketsHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureHandler(class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context, class System.Net.Http.SocketsHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory.ConfigureHandler(Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext,System.Net.Http.SocketsHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureHandler (context As ForwarderHttpClientContext, handler As SocketsHttpHandler)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureHandler : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext * System.Net.Http.SocketsHttpHandler -&gt; unit&#xA;override this.ConfigureHandler : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext * System.Net.Http.SocketsHttpHandler -&gt; unit" Usage="forwarderHttpClientFactory.ConfigureHandler (context, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext" />
        <Parameter Name="handler" Type="System.Net.Http.SocketsHttpHandler" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>
            Allows configuring the <see cref="T:System.Net.Http.SocketsHttpHandler" /> instance. The base implementation
            applies settings from <see cref="P:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext.NewConfig" />.
            <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" />, <see cref="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />,
            <see cref="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression" />, and <see cref="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
            are disabled prior to this call.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpMessageInvoker CreateClient (Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Http.HttpMessageInvoker CreateClient(class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory.CreateClient(Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClient (context As ForwarderHttpClientContext) As HttpMessageInvoker" />
      <MemberSignature Language="F#" Value="abstract member CreateClient : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext -&gt; System.Net.Http.HttpMessageInvoker&#xA;override this.CreateClient : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext -&gt; System.Net.Http.HttpMessageInvoker" Usage="forwarderHttpClientFactory.CreateClient context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory.CreateClient(Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpMessageInvoker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WrapHandler">
      <MemberSignature Language="C#" Value="protected virtual System.Net.Http.HttpMessageHandler WrapHandler (Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context, System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.Http.HttpMessageHandler WrapHandler(class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext context, class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory.WrapHandler(Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext,System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WrapHandler (context As ForwarderHttpClientContext, handler As HttpMessageHandler) As HttpMessageHandler" />
      <MemberSignature Language="F#" Value="abstract member WrapHandler : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext * System.Net.Http.HttpMessageHandler -&gt; System.Net.Http.HttpMessageHandler&#xA;override this.WrapHandler : Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext * System.Net.Http.HttpMessageHandler -&gt; System.Net.Http.HttpMessageHandler" Usage="forwarderHttpClientFactory.WrapHandler (context, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpMessageHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext" />
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>
            Adds any wrapping middleware around the <see cref="T:System.Net.Http.HttpMessageHandler" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
