<Type Name="ReverseProxyPropagator" FullName="Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator">
  <TypeSignature Language="C#" Value="public sealed class ReverseProxyPropagator : System.Diagnostics.DistributedContextPropagator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReverseProxyPropagator extends System.Diagnostics.DistributedContextPropagator" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReverseProxyPropagator&#xA;Inherits DistributedContextPropagator" />
  <TypeSignature Language="F#" Value="type ReverseProxyPropagator = class&#xA;    inherit DistributedContextPropagator" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.DistributedContextPropagator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Removes existing headers and then delegates to the inner propagator.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReverseProxyPropagator (System.Diagnostics.DistributedContextPropagator innerPropagator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.DistributedContextPropagator innerPropagator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator.#ctor(System.Diagnostics.DistributedContextPropagator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerPropagator As DistributedContextPropagator)" />
      <MemberSignature Language="F#" Value="new Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator : System.Diagnostics.DistributedContextPropagator -&gt; Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator" Usage="new Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator innerPropagator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerPropagator" Type="System.Diagnostics.DistributedContextPropagator" />
      </Parameters>
      <Docs>
        <param name="innerPropagator">To be added.</param>
        <summary>
            ReverseProxyPropagator removes headers pointed out in innerPropagator.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractBaggage">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string?&gt;&gt;? ExtractBaggage (object? carrier, System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback? getter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; ExtractBaggage(object carrier, class System.Diagnostics.DistributedContextPropagator/PropagatorGetterCallback getter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator.ExtractBaggage(System.Object,System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExtractBaggage (carrier As Object, getter As DistributedContextPropagator.PropagatorGetterCallback) As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="F#" Value="override this.ExtractBaggage : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="reverseProxyPropagator.ExtractBaggage (carrier, getter)" FrameworkAlternate="yarp-1.1;yarp-2.1;yarp-2.2" />
      <MemberSignature Language="F#" Value="abstract member ExtractBaggage : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;&#xA;override this.ExtractBaggage : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="reverseProxyPropagator.ExtractBaggage (carrier, getter)" FrameworkAlternate="yarp-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="carrier" Type="System.Object" />
        <Parameter Name="getter" Type="System.Diagnostics.DistributedContextPropagator+PropagatorGetterCallback" />
      </Parameters>
      <Docs>
        <param name="carrier">To be added.</param>
        <param name="getter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractTraceIdAndState">
      <MemberSignature Language="C#" Value="public override void ExtractTraceIdAndState (object? carrier, System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback? getter, out string? traceId, out string? traceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractTraceIdAndState(object carrier, class System.Diagnostics.DistributedContextPropagator/PropagatorGetterCallback getter, [out] string&amp; traceId, [out] string&amp; traceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator.ExtractTraceIdAndState(System.Object,System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractTraceIdAndState (carrier As Object, getter As DistributedContextPropagator.PropagatorGetterCallback, ByRef traceId As String, ByRef traceState As String)" />
      <MemberSignature Language="F#" Value="override this.ExtractTraceIdAndState : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback * string * string -&gt; unit" Usage="reverseProxyPropagator.ExtractTraceIdAndState (carrier, getter, traceId, traceState)" FrameworkAlternate="yarp-1.1;yarp-2.1;yarp-2.2" />
      <MemberSignature Language="F#" Value="abstract member ExtractTraceIdAndState : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback * string * string -&gt; unit&#xA;override this.ExtractTraceIdAndState : obj * System.Diagnostics.DistributedContextPropagator.PropagatorGetterCallback * string * string -&gt; unit" Usage="reverseProxyPropagator.ExtractTraceIdAndState (carrier, getter, traceId, traceState)" FrameworkAlternate="yarp-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="carrier" Type="System.Object" />
        <Parameter Name="getter" Type="System.Diagnostics.DistributedContextPropagator+PropagatorGetterCallback" />
        <Parameter Name="traceId" Type="System.String" RefType="out" />
        <Parameter Name="traceState" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="carrier">To be added.</param>
        <param name="getter">To be added.</param>
        <param name="traceId">To be added.</param>
        <param name="traceState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IReadOnlyCollection&lt;string&gt; Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; Fields" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator.Fields" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Fields As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inject">
      <MemberSignature Language="C#" Value="public override void Inject (System.Diagnostics.Activity? activity, object? carrier, System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback? setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Inject(class System.Diagnostics.Activity activity, object carrier, class System.Diagnostics.DistributedContextPropagator/PropagatorSetterCallback setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator.Inject(System.Diagnostics.Activity,System.Object,System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Inject (activity As Activity, carrier As Object, setter As DistributedContextPropagator.PropagatorSetterCallback)" />
      <MemberSignature Language="F#" Value="override this.Inject : System.Diagnostics.Activity * obj * System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback -&gt; unit" Usage="reverseProxyPropagator.Inject (activity, carrier, setter)" FrameworkAlternate="yarp-1.1;yarp-2.1;yarp-2.2" />
      <MemberSignature Language="F#" Value="abstract member Inject : System.Diagnostics.Activity * obj * System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback -&gt; unit&#xA;override this.Inject : System.Diagnostics.Activity * obj * System.Diagnostics.DistributedContextPropagator.PropagatorSetterCallback -&gt; unit" Usage="reverseProxyPropagator.Inject (activity, carrier, setter)" FrameworkAlternate="yarp-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Diagnostics.Activity" />
        <Parameter Name="carrier" Type="System.Object" />
        <Parameter Name="setter" Type="System.Diagnostics.DistributedContextPropagator+PropagatorSetterCallback" />
      </Parameters>
      <Docs>
        <param name="activity">To be added.</param>
        <param name="carrier">To be added.</param>
        <param name="setter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
