<Type Name="IHttpForwarder" FullName="Yarp.ReverseProxy.Forwarder.IHttpForwarder">
  <TypeSignature Language="C#" Value="public interface IHttpForwarder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpForwarder" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Forwarder.IHttpForwarder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpForwarder" />
  <TypeSignature Language="F#" Value="type IHttpForwarder = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHttpForwarder" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Forward an HTTP request to a chosen destination.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync (Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, System.Net.Http.HttpMessageInvoker httpClient, Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig, Yarp.ReverseProxy.Forwarder.HttpTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync(class Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, class System.Net.Http.HttpMessageInvoker httpClient, class Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig, class Yarp.ReverseProxy.Forwarder.HttpTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.IHttpForwarder.SendAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Net.Http.HttpMessageInvoker,Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig,Yarp.ReverseProxy.Forwarder.HttpTransformer)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (context As HttpContext, destinationPrefix As String, httpClient As HttpMessageInvoker, requestConfig As ForwarderRequestConfig, transformer As HttpTransformer) As ValueTask(Of ForwarderError)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker * Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig * Yarp.ReverseProxy.Forwarder.HttpTransformer -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;" Usage="iHttpForwarder.SendAsync (context, destinationPrefix, httpClient, requestConfig, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="destinationPrefix" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpMessageInvoker" />
        <Parameter Name="requestConfig" Type="Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig" />
        <Parameter Name="transformer" Type="Yarp.ReverseProxy.Forwarder.HttpTransformer" />
      </Parameters>
      <Docs>
        <param name="context">The HttpContext to forward.</param>
        <param name="destinationPrefix">The url prefix for where to forward the request to.</param>
        <param name="httpClient">The HTTP client used to forward the request.</param>
        <param name="requestConfig">Config for the outgoing request.</param>
        <param name="transformer">Request and response transforms. Use <see cref="F:Yarp.ReverseProxy.Forwarder.HttpTransformer.Default" /> if
            custom transformations are not needed.</param>
        <summary>
            Forwards the incoming request to the destination server, and the response back to the client.
            </summary>
        <returns>The result of forwarding the request and response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync (Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, System.Net.Http.HttpMessageInvoker httpClient, Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig, Yarp.ReverseProxy.Forwarder.HttpTransformer transformer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync(class Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, class System.Net.Http.HttpMessageInvoker httpClient, class Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig, class Yarp.ReverseProxy.Forwarder.HttpTransformer transformer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.IHttpForwarder.SendAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Net.Http.HttpMessageInvoker,Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig,Yarp.ReverseProxy.Forwarder.HttpTransformer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendAsync (context As HttpContext, destinationPrefix As String, httpClient As HttpMessageInvoker, requestConfig As ForwarderRequestConfig, transformer As HttpTransformer, cancellationToken As CancellationToken) As ValueTask(Of ForwarderError)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker * Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig * Yarp.ReverseProxy.Forwarder.HttpTransformer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;&#xA;override this.SendAsync : Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker * Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig * Yarp.ReverseProxy.Forwarder.HttpTransformer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;" Usage="iHttpForwarder.SendAsync (context, destinationPrefix, httpClient, requestConfig, transformer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" Index="0" FrameworkAlternate="yarp-2.0;yarp-2.1;yarp-2.2" />
        <Parameter Name="destinationPrefix" Type="System.String" Index="1" FrameworkAlternate="yarp-2.0;yarp-2.1;yarp-2.2" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpMessageInvoker" Index="2" FrameworkAlternate="yarp-2.0;yarp-2.1;yarp-2.2" />
        <Parameter Name="requestConfig" Type="Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig" Index="3" FrameworkAlternate="yarp-2.0;yarp-2.1;yarp-2.2" />
        <Parameter Name="transformer" Type="Yarp.ReverseProxy.Forwarder.HttpTransformer" Index="4" FrameworkAlternate="yarp-2.0;yarp-2.1;yarp-2.2" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="yarp-2.0;yarp-2.1;yarp-2.2" />
      </Parameters>
      <Docs>
        <param name="context">The HttpContext to forward.</param>
        <param name="destinationPrefix">The url prefix for where to forward the request to.</param>
        <param name="httpClient">The HTTP client used to forward the request.</param>
        <param name="requestConfig">Config for the outgoing request.</param>
        <param name="transformer">Request and response transforms. Use <see cref="F:Yarp.ReverseProxy.Forwarder.HttpTransformer.Default" /> if
            custom transformations are not needed.</param>
        <param name="cancellationToken">A cancellation token that can be used to abort the request.</param>
        <summary>
            Forwards the incoming request to the destination server, and the response back to the client.
            </summary>
        <returns>The result of forwarding the request and response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
