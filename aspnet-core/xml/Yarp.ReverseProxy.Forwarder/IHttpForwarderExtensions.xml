<Type Name="IHttpForwarderExtensions" FullName="Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions">
  <TypeSignature Language="C#" Value="public static class IHttpForwarderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IHttpForwarderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module IHttpForwarderExtensions" />
  <TypeSignature Language="F#" Value="type IHttpForwarderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions methods for <see cref="T:Yarp.ReverseProxy.Forwarder.IHttpForwarder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync (this Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, System.Net.Http.HttpMessageInvoker httpClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync(class Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, class Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, class System.Net.Http.HttpMessageInvoker httpClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync(Yarp.ReverseProxy.Forwarder.IHttpForwarder,Microsoft.AspNetCore.Http.HttpContext,System.String,System.Net.Http.HttpMessageInvoker)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync (forwarder As IHttpForwarder, context As HttpContext, destinationPrefix As String, httpClient As HttpMessageInvoker) As ValueTask(Of ForwarderError)" />
      <MemberSignature Language="F#" Value="static member SendAsync : Yarp.ReverseProxy.Forwarder.IHttpForwarder * Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;" Usage="Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync (forwarder, context, destinationPrefix, httpClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forwarder" Type="Yarp.ReverseProxy.Forwarder.IHttpForwarder" RefType="this" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="destinationPrefix" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpMessageInvoker" />
      </Parameters>
      <Docs>
        <param name="forwarder">The forwarder instance.</param>
        <param name="context">The HttpContext to forward.</param>
        <param name="destinationPrefix">The url prefix for where to forward the request to.</param>
        <param name="httpClient">The HTTP client used to forward the request.</param>
        <summary>
            Forwards the incoming request to the destination server, and the response back to the client.
            </summary>
        <returns>The status of a forwarding operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync (this Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, System.Net.Http.HttpMessageInvoker httpClient, Func&lt;Microsoft.AspNetCore.Http.HttpContext,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.ValueTask&gt; requestTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync(class Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, class Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, class System.Net.Http.HttpMessageInvoker httpClient, class System.Func`3&lt;class Microsoft.AspNetCore.Http.HttpContext, class System.Net.Http.HttpRequestMessage, valuetype System.Threading.Tasks.ValueTask&gt; requestTransform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync(Yarp.ReverseProxy.Forwarder.IHttpForwarder,Microsoft.AspNetCore.Http.HttpContext,System.String,System.Net.Http.HttpMessageInvoker,System.Func{Microsoft.AspNetCore.Http.HttpContext,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.ValueTask})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync (forwarder As IHttpForwarder, context As HttpContext, destinationPrefix As String, httpClient As HttpMessageInvoker, requestTransform As Func(Of HttpContext, HttpRequestMessage, ValueTask)) As ValueTask(Of ForwarderError)" />
      <MemberSignature Language="F#" Value="static member SendAsync : Yarp.ReverseProxy.Forwarder.IHttpForwarder * Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker * Func&lt;Microsoft.AspNetCore.Http.HttpContext, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.ValueTask&gt; -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;" Usage="Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync (forwarder, context, destinationPrefix, httpClient, requestTransform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forwarder" Type="Yarp.ReverseProxy.Forwarder.IHttpForwarder" RefType="this" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="destinationPrefix" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpMessageInvoker" />
        <Parameter Name="requestTransform" Type="System.Func&lt;Microsoft.AspNetCore.Http.HttpContext,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.ValueTask&gt;" />
      </Parameters>
      <Docs>
        <param name="forwarder">The forwarder instance.</param>
        <param name="context">The HttpContext to forward.</param>
        <param name="destinationPrefix">The url prefix for where to forward the request to.</param>
        <param name="httpClient">The HTTP client used to forward the request.</param>
        <param name="requestTransform">Transform function to apply to the forwarded request.</param>
        <summary>
            Forwards the incoming request to the destination server, and the response back to the client.
            </summary>
        <returns>The status of a forwarding operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync (this Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, System.Net.Http.HttpMessageInvoker httpClient, Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync(class Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, class Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, class System.Net.Http.HttpMessageInvoker httpClient, class Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync(Yarp.ReverseProxy.Forwarder.IHttpForwarder,Microsoft.AspNetCore.Http.HttpContext,System.String,System.Net.Http.HttpMessageInvoker,Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync (forwarder As IHttpForwarder, context As HttpContext, destinationPrefix As String, httpClient As HttpMessageInvoker, requestConfig As ForwarderRequestConfig) As ValueTask(Of ForwarderError)" />
      <MemberSignature Language="F#" Value="static member SendAsync : Yarp.ReverseProxy.Forwarder.IHttpForwarder * Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker * Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;" Usage="Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync (forwarder, context, destinationPrefix, httpClient, requestConfig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forwarder" Type="Yarp.ReverseProxy.Forwarder.IHttpForwarder" RefType="this" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="destinationPrefix" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpMessageInvoker" />
        <Parameter Name="requestConfig" Type="Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig" />
      </Parameters>
      <Docs>
        <param name="forwarder">The forwarder instance.</param>
        <param name="context">The HttpContext to forward.</param>
        <param name="destinationPrefix">The url prefix for where to forward the request to.</param>
        <param name="httpClient">The HTTP client used to forward the request.</param>
        <param name="requestConfig">Config for the outgoing request.</param>
        <summary>
            Forwards the incoming request to the destination server, and the response back to the client.
            </summary>
        <returns>The status of a forwarding operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync (this Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, System.Net.Http.HttpMessageInvoker httpClient, Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig, Func&lt;Microsoft.AspNetCore.Http.HttpContext,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.ValueTask&gt; requestTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Yarp.ReverseProxy.Forwarder.ForwarderError&gt; SendAsync(class Yarp.ReverseProxy.Forwarder.IHttpForwarder forwarder, class Microsoft.AspNetCore.Http.HttpContext context, string destinationPrefix, class System.Net.Http.HttpMessageInvoker httpClient, class Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig requestConfig, class System.Func`3&lt;class Microsoft.AspNetCore.Http.HttpContext, class System.Net.Http.HttpRequestMessage, valuetype System.Threading.Tasks.ValueTask&gt; requestTransform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync(Yarp.ReverseProxy.Forwarder.IHttpForwarder,Microsoft.AspNetCore.Http.HttpContext,System.String,System.Net.Http.HttpMessageInvoker,Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig,System.Func{Microsoft.AspNetCore.Http.HttpContext,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.ValueTask})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync (forwarder As IHttpForwarder, context As HttpContext, destinationPrefix As String, httpClient As HttpMessageInvoker, requestConfig As ForwarderRequestConfig, requestTransform As Func(Of HttpContext, HttpRequestMessage, ValueTask)) As ValueTask(Of ForwarderError)" />
      <MemberSignature Language="F#" Value="static member SendAsync : Yarp.ReverseProxy.Forwarder.IHttpForwarder * Microsoft.AspNetCore.Http.HttpContext * string * System.Net.Http.HttpMessageInvoker * Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig * Func&lt;Microsoft.AspNetCore.Http.HttpContext, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.ValueTask&gt; -&gt; System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;" Usage="Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions.SendAsync (forwarder, context, destinationPrefix, httpClient, requestConfig, requestTransform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Yarp.ReverseProxy.Forwarder.ForwarderError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forwarder" Type="Yarp.ReverseProxy.Forwarder.IHttpForwarder" RefType="this" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="destinationPrefix" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpMessageInvoker" />
        <Parameter Name="requestConfig" Type="Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig" />
        <Parameter Name="requestTransform" Type="System.Func&lt;Microsoft.AspNetCore.Http.HttpContext,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.ValueTask&gt;" />
      </Parameters>
      <Docs>
        <param name="forwarder">The forwarder instance.</param>
        <param name="context">The HttpContext to forward.</param>
        <param name="destinationPrefix">The url prefix for where to forward the request to.</param>
        <param name="httpClient">The HTTP client used to forward the request.</param>
        <param name="requestConfig">Config for the outgoing request.</param>
        <param name="requestTransform">Transform function to apply to the forwarded request.</param>
        <summary>
            Forwards the incoming request to the destination server, and the response back to the client.
            </summary>
        <returns>The status of a forwarding operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
