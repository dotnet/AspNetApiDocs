<Type Name="RazorViewEngineOptions" FullName="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class RazorViewEngineOptions" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class RazorViewEngineOptions : System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Mvc::Infrastructure::ICompatibilitySwitch ^&gt;" FrameworkAlternate="aspnetcore-2.2" />
  <TypeSignature Language="C#" Value="public class RazorViewEngineOptions" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RazorViewEngineOptions extends System.Object" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class RazorViewEngineOptions" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type RazorViewEngineOptions = class" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="C#" Value="public class RazorViewEngineOptions : System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;" FrameworkAlternate="aspnetcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RazorViewEngineOptions extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;, class System.Collections.IEnumerable" FrameworkAlternate="aspnetcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Class RazorViewEngineOptions&#xA;Implements IEnumerable(Of ICompatibilitySwitch)" FrameworkAlternate="aspnetcore-2.2" />
  <TypeSignature Language="F#" Value="type RazorViewEngineOptions = class&#xA;    interface seq&lt;ICompatibilitySwitch&gt;&#xA;    interface IEnumerable" FrameworkAlternate="aspnetcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="aspnetcore-2.2">
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="aspnetcore-2.2">
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides programmatic configuration for the <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RazorViewEngineOptions();" />
      <MemberSignature Language="C#" Value="public RazorViewEngineOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalCompilationReferences">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::CodeAnalysis::MetadataReference ^&gt; ^ AdditionalCompilationReferences { System::Collections::Generic::IList&lt;Microsoft::CodeAnalysis::MetadataReference ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.CodeAnalysis.MetadataReference&gt; AdditionalCompilationReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; AdditionalCompilationReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AdditionalCompilationReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalCompilationReferences As IList(Of MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.AdditionalCompilationReferences : System.Collections.Generic.IList&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AdditionalCompilationReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. See https://aka.ms/AA1x4gg for details.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. See https://aka.ms/AA1x4gg for details.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.CodeAnalysis.MetadataReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.CodeAnalysis.MetadataReference" /> instances that should be included in Razor compilation, along with
            those discovered by <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider" />s.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecompilingViewsOnFileChange">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecompilingViewsOnFileChange { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool AllowRecompilingViewsOnFileChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecompilingViewsOnFileChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AllowRecompilingViewsOnFileChange" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecompilingViewsOnFileChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowRecompilingViewsOnFileChange : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AllowRecompilingViewsOnFileChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if Razor files (Razor Views and Razor Pages) are recompiled and updated 
            if files change on disk.
            <para>
            When <see langword="true" />, MVC will use <see cref="M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)" /> to watch for changes to 
            Razor files in configured <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> instances.
            </para></summary>
        <value>
            The default value is <see langword="true" /> if the version is <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" />
            or earlier. If the version is later and <see cref="P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName" /> is <c>Development</c>,
            the default value is <see langword="true" />. Otherwise, the default value is <see langword="false" />.
            </value>
        <remarks>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take
            precedence over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            lower then this setting will have the value <see langword="true" /> unless explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2" /> or
            higher then this setting will have the value <see langword="false" /> unless
            <see cref="P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName" />  is <c>Development</c> or the value is explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaPageViewLocationFormats">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AreaPageViewLocationFormats { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AreaPageViewLocationFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AreaPageViewLocationFormats" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaPageViewLocationFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreaPageViewLocationFormats As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AreaPageViewLocationFormats : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaPageViewLocationFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the locations where <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" /> will search for views (such as layouts and partials)
             when searched from the context of rendering a Razor Page within an area.
             </summary>
        <value>To be added.</value>
        <remarks>
          <para>
             Locations are format strings (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) which may contain
             the following format items:
             </para>
          <list type="bullet">
            <item>
              <description>{0} - View Name</description>
            </item>
            <item>
              <description>{1} - Page Name</description>
            </item>
            <item>
              <description>{2} - Area Name</description>
            </item>
          </list>
          <para>
            <see cref="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaPageViewLocationFormats" /> work in tandem with a view location expander to perform hierarchical
             path lookups. For instance, given a Page like /Areas/Account/Pages/Manage/User.cshtml using /Areas as the area pages root and
             /Pages as the root, the view engine will search for views in the following locations:
            
              /Areas/Accounts/Pages/Manage/{0}.cshtml
              /Areas/Accounts/Pages/{0}.cshtml
              /Areas/Accounts/Pages/Shared/{0}.cshtml
              /Areas/Accounts/Views/Shared/{0}.cshtml
              /Pages/Shared/{0}.cshtml
              /Views/Shared/{0}.cshtml
             </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaViewLocationFormats">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AreaViewLocationFormats { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AreaViewLocationFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AreaViewLocationFormats" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreaViewLocationFormats As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AreaViewLocationFormats : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the locations where <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" /> will search for views within an
            area.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            The locations of the views returned from controllers that belong to an area.
            Locations are format strings (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) which may contain
            the following format items:
            </para>
          <list type="bullet">
            <item>
              <description>{0} - Action Name</description>
            </item>
            <item>
              <description>{1} - Controller Name</description>
            </item>
            <item>
              <description>{2} - Area Name</description>
            </item>
          </list>
          <para>
            The values for these locations are case-sensitive on case-sensitive file systems.
            For example, the view for the <c>Test</c> action of <c>HomeController</c> under <c>Admin</c> area should
            be located at <c>/Areas/Admin/Views/Home/Test.cshtml</c>.
            Locations such as <c>/areas/admin/views/home/test.cshtml</c> would not be discovered.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilationCallback">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;Microsoft::AspNetCore::Mvc::Razor::Compilation::RoslynCompilationContext ^&gt; ^ CompilationCallback { Action&lt;Microsoft::AspNetCore::Mvc::Razor::Compilation::RoslynCompilationContext ^&gt; ^ get(); void set(Action&lt;Microsoft::AspNetCore::Mvc::Razor::Compilation::RoslynCompilationContext ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public Action&lt;Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext&gt; CompilationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext&gt; CompilationCallback" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationCallback As Action(Of RoslynCompilationContext)" />
      <MemberSignature Language="F#" Value="member this.CompilationCallback : Action&lt;Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext&gt; with get, set" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. See https://aka.ms/AA1x4gg for details.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. See https://aka.ms/AA1x4gg for details.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the callback that is used to customize Razor compilation
            to change compilation settings you can update <see cref="P:Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext.Compilation" /> property.
            </summary>
        <value>To be added.</value>
        <remarks>
            Customizations made here would not reflect in tooling (Intellisense).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilationOptions">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::CSharpCompilationOptions ^ CompilationOptions { Microsoft::CodeAnalysis::CSharp::CSharpCompilationOptions ^ get(); void set(Microsoft::CodeAnalysis::CSharp::CSharpCompilationOptions ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions CompilationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions CompilationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationOptions As CSharpCompilationOptions" />
      <MemberSignature Language="F#" Value="member this.CompilationOptions : Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions with get, set" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions" /> used by Razor view compilation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileProviders">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ FileProviders { System::Collections::Generic::IList&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; FileProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.FileProviders.IFileProvider&gt; FileProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.FileProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileProviders As IList(Of IFileProvider)" />
      <MemberSignature Language="F#" Value="member this.FileProviders : System.Collections.Generic.IList&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.FileProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the sequence of <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> instances used by <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" /> to
            locate Razor files.
            </summary>
        <value>To be added.</value>
        <remarks>
            At startup, this is initialized to include an instance of
            <see cref="P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.ContentRootFileProvider" /> that is rooted at the application root.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageViewLocationFormats">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ PageViewLocationFormats { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; PageViewLocationFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; PageViewLocationFormats" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.PageViewLocationFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageViewLocationFormats As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.PageViewLocationFormats : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.PageViewLocationFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the locations where <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" /> will search for views (such as layouts and partials)
             when searched from the context of rendering a Razor Page.
             </summary>
        <value>To be added.</value>
        <remarks>
          <para>
             Locations are format strings (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) which may contain
             the following format items:
             </para>
          <list type="bullet">
            <item>
              <description>{0} - View Name</description>
            </item>
            <item>
              <description>{1} - Page Name</description>
            </item>
          </list>
          <para>
            <see cref="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.PageViewLocationFormats" /> work in tandem with a view location expander to perform hierarchical
             path lookups. For instance, given a Page like /Account/Manage/Index using /Pages as the root, the view engine
             will search for views in the following locations:
            
              /Pages/Account/Manage/{0}.cshtml
              /Pages/Account/{0}.cshtml
              /Pages/{0}.cshtml
              /Pages/Shared/{0}.cshtml
              /Views/Shared/{0}.cshtml
             </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseOptions">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::CSharpParseOptions ^ ParseOptions { Microsoft::CodeAnalysis::CSharp::CSharpParseOptions ^ get(); void set(Microsoft::CodeAnalysis::CSharp::CSharpParseOptions ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions ParseOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions ParseOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ParseOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ParseOptions As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="member this.ParseOptions : Microsoft.CodeAnalysis.CSharp.CSharpParseOptions with get, set" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ParseOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" /> options used by Razor view compilation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator">
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;Microsoft::AspNetCore::Mvc::Infrastructure::ICompatibilitySwitch ^&gt; ^ System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Mvc::Infrastructure::ICompatibilitySwitch ^&gt;::GetEnumerator;" />
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt; IEnumerable&lt;ICompatibilitySwitch&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt; System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.System#Collections#Generic#IEnumerable&lt;Microsoft#AspNetCore#Mvc#Infrastructure#ICompatibilitySwitch&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ICompatibilitySwitch) Implements IEnumerable(Of ICompatibilitySwitch).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;" Usage="razorViewEngineOptions.System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="razorViewEngineOptions.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewLocationExpanders">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Razor::IViewLocationExpander ^&gt; ^ ViewLocationExpanders { System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Razor::IViewLocationExpander ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander&gt; ViewLocationExpanders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander&gt; ViewLocationExpanders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationExpanders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewLocationExpanders As IList(Of IViewLocationExpander)" />
      <MemberSignature Language="F#" Value="member this.ViewLocationExpanders : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationExpanders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:System.Collections.Generic.IList`1" /> used by the <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewLocationFormats">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ ViewLocationFormats { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ViewLocationFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ViewLocationFormats" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewLocationFormats As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ViewLocationFormats : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the locations where <see cref="T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine" /> will search for views.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            The locations of the views returned from controllers that do not belong to an area.
            Locations are format strings (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) which may contain
            the following format items:
            </para>
          <list type="bullet">
            <item>
              <description>{0} - Action Name</description>
            </item>
            <item>
              <description>{1} - Controller Name</description>
            </item>
          </list>
          <para>
            The values for these locations are case-sensitive on case-sensitive file systems.
            For example, the view for the <c>Test</c> action of <c>HomeController</c> should be located at
            <c>/Views/Home/Test.cshtml</c>. Locations such as <c>/views/home/test.cshtml</c> would not be discovered.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
