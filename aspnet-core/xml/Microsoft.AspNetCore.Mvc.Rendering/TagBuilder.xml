<Type Name="TagBuilder" FullName="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder">
  <TypeSignature Language="C++ CLI" Value="public ref class TagBuilder : Microsoft::AspNetCore::Html::IHtmlContent" />
  <TypeSignature Language="C#" Value="public class TagBuilder : Microsoft.AspNetCore.Html.IHtmlContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TagBuilder extends System.Object implements class Microsoft.AspNetCore.Html.IHtmlContent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class TagBuilder&#xA;Implements IHtmlContent" />
  <TypeSignature Language="F#" Value="type TagBuilder = class&#xA;    interface IHtmlContent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Html.IHtmlContent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{DebuggerToString()}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{DebuggerToString()}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Contains methods and properties that are used to create HTML elements. This class is often used to write HTML
            helpers and tag helpers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagBuilder(Microsoft::AspNetCore::Mvc::Rendering::TagBuilder ^ tagBuilder);" />
      <MemberSignature Language="C#" Value="public TagBuilder (Microsoft.AspNetCore.Mvc.Rendering.TagBuilder tagBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.Rendering.TagBuilder tagBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagBuilder As TagBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Rendering.TagBuilder : Microsoft.AspNetCore.Mvc.Rendering.TagBuilder -&gt; Microsoft.AspNetCore.Mvc.Rendering.TagBuilder" Usage="new Microsoft.AspNetCore.Mvc.Rendering.TagBuilder tagBuilder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagBuilder" Type="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder" Index="0" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="tagBuilder">Tag to copy.</param>
        <summary>
            Creates a copy of the HTML tag passed as <paramref name="tagBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagBuilder(System::String ^ tagName);" />
      <MemberSignature Language="C#" Value="public TagBuilder (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Rendering.TagBuilder : string -&gt; Microsoft.AspNetCore.Mvc.Rendering.TagBuilder" Usage="new Microsoft.AspNetCore.Mvc.Rendering.TagBuilder tagName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">An HTML tag name.</param>
        <summary>
            Creates a new HTML tag that has the specified tag name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCssClass">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCssClass(System::String ^ value);" />
      <MemberSignature Language="C#" Value="public void AddCssClass (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCssClass(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.AddCssClass(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCssClass (value As String)" />
      <MemberSignature Language="F#" Value="member this.AddCssClass : string -&gt; unit" Usage="tagBuilder.AddCssClass value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The CSS class name to add.</param>
        <summary>
            Adds a CSS class to the list of CSS classes in the tag.
            If there are already CSS classes on the tag then a space character and the new class will be appended to
            the existing list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ViewFeatures::AttributeDictionary ^ Attributes { Microsoft::AspNetCore::Mvc::ViewFeatures::AttributeDictionary ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeDictionary" />
      <MemberSignature Language="F#" Value="member this.Attributes : Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary" Usage="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the set of attributes that will be written to the tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSanitizedId">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateSanitizedId(System::String ^ name, System::String ^ invalidCharReplacement);" />
      <MemberSignature Language="C#" Value="public static string CreateSanitizedId (string name, string invalidCharReplacement);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateSanitizedId(string name, string invalidCharReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSanitizedId (name As String, invalidCharReplacement As String) As String" />
      <MemberSignature Language="F#" Value="static member CreateSanitizedId : string * string -&gt; string" Usage="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId (name, invalidCharReplacement)" />
      <MemberSignature Language="C#" Value="public static string CreateSanitizedId (string? name, string invalidCharReplacement);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invalidCharReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
        <param name="invalidCharReplacement">
            The <see cref="T:System.String" /> (normally a single <see cref="T:System.Char" />) to substitute for invalid characters in
            <paramref name="name" />.
            </param>
        <summary>
            Returns a valid HTML 4.01 "id" attribute value for an element with the given <paramref name="name" />.
            </summary>
        <returns>
            Valid HTML 4.01 "id" attribute value for an element with the given <paramref name="name" />.
            </returns>
        <remarks>
            Valid "id" attributes are defined in <see href="https://www.w3.org/TR/html401/types.html#type-id" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateId">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateId(System::String ^ name, System::String ^ invalidCharReplacement);" />
      <MemberSignature Language="C#" Value="public void GenerateId (string name, string invalidCharReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateId(string name, string invalidCharReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateId (name As String, invalidCharReplacement As String)" />
      <MemberSignature Language="F#" Value="member this.GenerateId : string * string -&gt; unit" Usage="tagBuilder.GenerateId (name, invalidCharReplacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invalidCharReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
        <param name="invalidCharReplacement">
            The <see cref="T:System.String" /> (normally a single <see cref="T:System.Char" />) to substitute for invalid characters in
            <paramref name="name" />.
            </param>
        <summary>
            Adds a valid HTML 4.01 "id" attribute for an element with the given <paramref name="name" />. Does
            nothing if <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes" /> already contains an "id" attribute or the <paramref name="name" />
            is <c>null</c> or empty.
            </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasInnerHtml">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInnerHtml { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool HasInnerHtml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInnerHtml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.HasInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInnerHtml As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasInnerHtml : bool" Usage="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.HasInnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an indication <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml" /> is not empty.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Html::IHtmlContentBuilder ^ InnerHtml { Microsoft::AspNetCore::Html::IHtmlContentBuilder ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContentBuilder InnerHtml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Html.IHtmlContentBuilder InnerHtml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerHtml As IHtmlContentBuilder" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : Microsoft.AspNetCore.Html.IHtmlContentBuilder" Usage="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContentBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the inner HTML content of the element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttribute">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="C#" Value="public void MergeAttribute (string key, string value);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttribute (key As String, value As String)" />
      <MemberSignature Language="F#" Value="member this.MergeAttribute : string * string -&gt; unit" Usage="tagBuilder.MergeAttribute (key, value)" />
      <MemberSignature Language="C#" Value="public void MergeAttribute (string key, string? value);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The attribute key.</param>
        <param name="value">The attribute value.</param>
        <summary>
            Merge an attribute.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttribute">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeAttribute(System::String ^ key, System::String ^ value, bool replaceExisting);" />
      <MemberSignature Language="C#" Value="public void MergeAttribute (string key, string value, bool replaceExisting);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttribute(string key, string value, bool replaceExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttribute (key As String, value As String, replaceExisting As Boolean)" />
      <MemberSignature Language="F#" Value="member this.MergeAttribute : string * string * bool -&gt; unit" Usage="tagBuilder.MergeAttribute (key, value, replaceExisting)" />
      <MemberSignature Language="C#" Value="public void MergeAttribute (string key, string? value, bool replaceExisting);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="replaceExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">The attribute key.</param>
        <param name="value">The attribute value.</param>
        <param name="replaceExisting">Whether to replace an existing value.</param>
        <summary>
            Merge an attribute.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttributes&lt;TKey,TValue&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; void MergeAttributes(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ attributes);" />
      <MemberSignature Language="C#" Value="public void MergeAttributes&lt;TKey,TValue&gt; (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; attributes);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttributes&lt;TKey, TValue&gt;(class System.Collections.Generic.IDictionary`2&lt;!!TKey, !!TValue&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttributes(Of TKey, TValue) (attributes As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="F#" Value="member this.MergeAttributes : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; -&gt; unit" Usage="tagBuilder.MergeAttributes attributes" />
      <MemberSignature Language="C#" Value="public void MergeAttributes&lt;TKey,TValue&gt; (System.Collections.Generic.IDictionary&lt;TKey,TValue?&gt; attributes);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The key type.</typeparam>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="attributes">The attributes.</param>
        <summary>
            Merge an attribute dictionary.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAttributes&lt;TKey,TValue&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; void MergeAttributes(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ attributes, bool replaceExisting);" />
      <MemberSignature Language="C#" Value="public void MergeAttributes&lt;TKey,TValue&gt; (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; attributes, bool replaceExisting);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeAttributes&lt;TKey, TValue&gt;(class System.Collections.Generic.IDictionary`2&lt;!!TKey, !!TValue&gt; attributes, bool replaceExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeAttributes(Of TKey, TValue) (attributes As IDictionary(Of TKey, TValue), replaceExisting As Boolean)" />
      <MemberSignature Language="F#" Value="member this.MergeAttributes : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; * bool -&gt; unit" Usage="tagBuilder.MergeAttributes (attributes, replaceExisting)" />
      <MemberSignature Language="C#" Value="public void MergeAttributes&lt;TKey,TValue&gt; (System.Collections.Generic.IDictionary&lt;TKey,TValue?&gt; attributes, bool replaceExisting);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="replaceExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The key type.</typeparam>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="attributes">The attributes.</param>
        <param name="replaceExisting">Whether to replace existing attributes.</param>
        <summary>
            Merge an attribute dictionary.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ RenderBody();" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent RenderBody ();" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Html.IHtmlContent RenderBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderBody" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderBody () As IHtmlContent" />
      <MemberSignature Language="F#" Value="member this.RenderBody : unit -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="tagBuilder.RenderBody " />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent? RenderBody ();" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the body.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the body.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ RenderEndTag();" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Html.IHtmlContent RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderEndTag () As IHtmlContent" />
      <MemberSignature Language="F#" Value="member this.RenderEndTag : unit -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="tagBuilder.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the end tag.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the end tag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderSelfClosingTag">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ RenderSelfClosingTag();" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent RenderSelfClosingTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Html.IHtmlContent RenderSelfClosingTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderSelfClosingTag" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderSelfClosingTag () As IHtmlContent" />
      <MemberSignature Language="F#" Value="member this.RenderSelfClosingTag : unit -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="tagBuilder.RenderSelfClosingTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the self-closing tag.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the self-closing tag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderStartTag">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ RenderStartTag();" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent RenderStartTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Html.IHtmlContent RenderStartTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderStartTag" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderStartTag () As IHtmlContent" />
      <MemberSignature Language="F#" Value="member this.RenderStartTag : unit -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="tagBuilder.RenderStartTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the start tag.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> that renders the start tag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the tag name for this tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagRenderMode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Rendering::TagRenderMode TagRenderMode { Microsoft::AspNetCore::Mvc::Rendering::TagRenderMode get(); void set(Microsoft::AspNetCore::Mvc::Rendering::TagRenderMode value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode TagRenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode TagRenderMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TagRenderMode As TagRenderMode" />
      <MemberSignature Language="F#" Value="member this.TagRenderMode : Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode with get, set" Usage="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode" /> with which the tag is written.
            </summary>
        <value>To be added.</value>
        <remarks>Defaults to <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.Normal" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::TextWriter ^ writer, System::Text::Encodings::Web::HtmlEncoder ^ encoder);" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.TextWriter writer, System.Text.Encodings.Web.HtmlEncoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.TextWriter writer, class System.Text.Encodings.Web.HtmlEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTo (writer As TextWriter, encoder As HtmlEncoder)" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.TextWriter * System.Text.Encodings.Web.HtmlEncoder -&gt; unit&#xA;override this.WriteTo : System.IO.TextWriter * System.Text.Encodings.Web.HtmlEncoder -&gt; unit" Usage="tagBuilder.WriteTo (writer, encoder)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.HtmlEncoder" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
