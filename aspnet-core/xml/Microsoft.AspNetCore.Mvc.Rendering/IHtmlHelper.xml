<Type Name="IHtmlHelper" FullName="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper">
  <TypeSignature Language="C++ CLI" Value="public interface class IHtmlHelper" />
  <TypeSignature Language="C#" Value="public interface IHtmlHelper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHtmlHelper" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHtmlHelper" />
  <TypeSignature Language="F#" Value="type IHtmlHelper = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHtmlHelper" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Base HTML helpers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ActionLink">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ ActionLink(System::String ^ linkText, System::String ^ actionName, System::String ^ controllerName, System::String ^ protocol, System::String ^ hostname, System::String ^ fragment, System::Object ^ routeValues, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent ActionLink (string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent ActionLink(string linkText, string actionName, string controllerName, string protocol, string hostname, string fragment, object routeValues, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ActionLink(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActionLink (linkText As String, actionName As String, controllerName As String, protocol As String, hostname As String, fragment As String, routeValues As Object, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member ActionLink : string * string * string * string * string * string * obj * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.ActionLink (linkText, actionName, controllerName, protocol, hostname, fragment, routeValues, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkText" Type="System.String" />
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="protocol" Type="System.String" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="fragment" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
        <param name="actionName">The name of the action.</param>
        <param name="controllerName">The name of the controller.</param>
        <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
        <param name="hostname">The host name for the URL.</param>
        <param name="fragment">The URL fragment name (the anchor name).</param>
        <param name="routeValues">
            An <see cref="T:System.Object" /> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object" />. This <see cref="T:System.Object" /> is typically
            created using <see cref="T:System.Object" /> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the route parameters.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the anchor element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiForgeryToken">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ AntiForgeryToken();" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent AntiForgeryToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent AntiForgeryToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.AntiForgeryToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AntiForgeryToken () As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member AntiForgeryToken : unit -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.AntiForgeryToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a &lt;hidden&gt; element (antiforgery token) that will be validated when the containing
            &lt;form&gt; is submitted.
            </summary>
        <returns>
          <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;hidden&gt; element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginForm">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Mvc::Rendering::MvcForm ^ BeginForm(System::String ^ actionName, System::String ^ controllerName, System::Object ^ routeValues, Microsoft::AspNetCore::Mvc::Rendering::FormMethod method, Nullable&lt;bool&gt; antiforgery, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Rendering.MvcForm BeginForm (string actionName, string controllerName, object routeValues, Microsoft.AspNetCore.Mvc.Rendering.FormMethod method, bool? antiforgery, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.Rendering.MvcForm BeginForm(string actionName, string controllerName, object routeValues, valuetype Microsoft.AspNetCore.Mvc.Rendering.FormMethod method, valuetype System.Nullable`1&lt;bool&gt; antiforgery, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.BeginForm(System.String,System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginForm (actionName As String, controllerName As String, routeValues As Object, method As FormMethod, antiforgery As Nullable(Of Boolean), htmlAttributes As Object) As MvcForm" />
      <MemberSignature Language="F#" Value="abstract member BeginForm : string * string * obj * Microsoft.AspNetCore.Mvc.Rendering.FormMethod * Nullable&lt;bool&gt; * obj -&gt; Microsoft.AspNetCore.Mvc.Rendering.MvcForm" Usage="iHtmlHelper.BeginForm (actionName, controllerName, routeValues, method, antiforgery, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Rendering.MvcForm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="method" Type="Microsoft.AspNetCore.Mvc.Rendering.FormMethod" />
        <Parameter Name="antiforgery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action method.</param>
        <param name="controllerName">The name of the controller.</param>
        <param name="routeValues">
            An <see cref="T:System.Object" /> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object" />. This <see cref="T:System.Object" /> is typically
            created using <see cref="T:System.Object" /> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the route parameters.
            </param>
        <param name="method">The HTTP method for processing the form, either GET or POST.</param>
        <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method" /> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get" />.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName" /> will process the request.
            </summary>
        <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm" /> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
        <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRouteForm">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Mvc::Rendering::MvcForm ^ BeginRouteForm(System::String ^ routeName, System::Object ^ routeValues, Microsoft::AspNetCore::Mvc::Rendering::FormMethod method, Nullable&lt;bool&gt; antiforgery, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Rendering.MvcForm BeginRouteForm (string routeName, object routeValues, Microsoft.AspNetCore.Mvc.Rendering.FormMethod method, bool? antiforgery, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.Rendering.MvcForm BeginRouteForm(string routeName, object routeValues, valuetype Microsoft.AspNetCore.Mvc.Rendering.FormMethod method, valuetype System.Nullable`1&lt;bool&gt; antiforgery, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.BeginRouteForm(System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRouteForm (routeName As String, routeValues As Object, method As FormMethod, antiforgery As Nullable(Of Boolean), htmlAttributes As Object) As MvcForm" />
      <MemberSignature Language="F#" Value="abstract member BeginRouteForm : string * obj * Microsoft.AspNetCore.Mvc.Rendering.FormMethod * Nullable&lt;bool&gt; * obj -&gt; Microsoft.AspNetCore.Mvc.Rendering.MvcForm" Usage="iHtmlHelper.BeginRouteForm (routeName, routeValues, method, antiforgery, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Rendering.MvcForm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="method" Type="Microsoft.AspNetCore.Mvc.Rendering.FormMethod" />
        <Parameter Name="antiforgery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeValues">
            An <see cref="T:System.Object" /> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object" />. This <see cref="T:System.Object" /> is typically
            created using <see cref="T:System.Object" /> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the route parameters.
            </param>
        <param name="method">The HTTP method for processing the form, either GET or POST.</param>
        <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method" /> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get" />.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName" />
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
        <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm" /> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
        <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ CheckBox(System::String ^ expression, Nullable&lt;bool&gt; isChecked, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent CheckBox (string expression, bool? isChecked, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent CheckBox(string expression, valuetype System.Nullable`1&lt;bool&gt; isChecked, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.CheckBox(System.String,System.Nullable{System.Boolean},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBox (expression As String, isChecked As Nullable(Of Boolean), htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member CheckBox : string * Nullable&lt;bool&gt; * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.CheckBox (expression, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="isChecked" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="isChecked">If <c>true</c>, checkbox is initially checked.</param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the checkbox element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression" />. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <paramref name="htmlAttributes" /> dictionary entry with key "checked",
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name, or
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />.
            If <paramref name="isChecked" /> is non-<c>null</c>, instead uses the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name, or
            the <paramref name="isChecked" /> parameter.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;input&gt; elements.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set checkbox
            element's "name" attribute. Sanitizes <paramref name="expression" /> to set checkbox element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Display(System::String ^ expression, System::String ^ templateName, System::String ^ htmlFieldName, System::Object ^ additionalViewData);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Display (string expression, string templateName, string htmlFieldName, object additionalViewData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Display(string expression, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Display(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Display (expression As String, templateName As String, htmlFieldName As String, additionalViewData As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Display : string * string * string * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Display (expression, templateName, htmlFieldName, additionalViewData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="htmlFieldName" Type="System.String" />
        <Parameter Name="additionalViewData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object" /> that contains the properties to display.
            </param>
        <param name="templateName">The name of the template used to create the HTML markup.</param>
        <param name="htmlFieldName">
            A <see cref="T:System.String" /> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
        <param name="additionalViewData">
            An anonymous <see cref="T:System.Object" /> or <see cref="T:System.Collections.Generic.IDictionary`2" /> that can contain additional
            view data that will be merged into the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1" /> instance created for the
            template.
            </param>
        <summary>
            Returns HTML markup for the <paramref name="expression" />, using a display template, specified HTML field
            name, and additional view data. The template is found using the <paramref name="templateName" /> or the
            <paramref name="expression" />'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the created HTML.</returns>
        <remarks>
          <para>
            For example the default <see cref="T:System.Object" /> display template includes markup for each property in the
            <paramref name="expression" />'s value.
            </para>
          <para>
            Example <paramref name="expression" />s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
          <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DisplayName(System::String ^ expression);" />
      <MemberSignature Language="C#" Value="public string DisplayName (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DisplayName(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.DisplayName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayName (expression As String) As String" />
      <MemberSignature Language="F#" Value="abstract member DisplayName : string -&gt; string" Usage="iHtmlHelper.DisplayName expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <summary>
            Returns the display name for the specified <paramref name="expression" />.
            </summary>
        <returns>A <see cref="T:System.String" /> containing the display name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayText">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DisplayText(System::String ^ expression);" />
      <MemberSignature Language="C#" Value="public string DisplayText (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DisplayText(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.DisplayText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayText (expression As String) As String" />
      <MemberSignature Language="F#" Value="abstract member DisplayText : string -&gt; string" Usage="iHtmlHelper.DisplayText expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <summary>
            Returns the simple display text for the specified <paramref name="expression" />.
            </summary>
        <returns>
            A <see cref="T:System.String" /> containing the simple display text.
            If the expression result is <c>null</c>, returns <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ DropDownList(System::String ^ expression, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Mvc::Rendering::SelectListItem ^&gt; ^ selectList, System::String ^ optionLabel, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent DropDownList (string expression, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; selectList, string optionLabel, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent DropDownList(string expression, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; selectList, string optionLabel, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDownList (expression As String, selectList As IEnumerable(Of SelectListItem), optionLabel As String, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member DropDownList : string * seq&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; * string * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.DropDownList (expression, selectList, optionLabel, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt;" />
        <Parameter Name="optionLabel" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem" /> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with
            full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem" /> objects.
            </param>
        <param name="optionLabel">
            The text for a default empty item. Does not include such an item if argument is <c>null</c>.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression" />. Adds
            &lt;option&gt; elements based on <paramref name="optionLabel" /> and <paramref name="selectList" />. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value" /> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text" /> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name (unless used instead of <paramref name="selectList" />), or
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;select&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Editor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Editor(System::String ^ expression, System::String ^ templateName, System::String ^ htmlFieldName, System::Object ^ additionalViewData);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Editor (string expression, string templateName, string htmlFieldName, object additionalViewData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Editor(string expression, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Editor (expression As String, templateName As String, htmlFieldName As String, additionalViewData As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Editor : string * string * string * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Editor (expression, templateName, htmlFieldName, additionalViewData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="htmlFieldName" Type="System.String" />
        <Parameter Name="additionalViewData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object" /> that contains the properties to edit.
            </param>
        <param name="templateName">The name of the template used to create the HTML markup.</param>
        <param name="htmlFieldName">
            A <see cref="T:System.String" /> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
        <param name="additionalViewData">
            An anonymous <see cref="T:System.Object" /> or <see cref="T:System.Collections.Generic.IDictionary`2" /> that can contain additional
            view data that will be merged into the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1" /> instance created for the
            template.
            </param>
        <summary>
            Returns HTML markup for the <paramref name="expression" />, using an editor template, specified HTML field
            name, and additional view data. The template is found using the <paramref name="templateName" /> or the
            <paramref name="expression" />'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;input&gt; element(s).</returns>
        <remarks>
          <para>
            For example the default <see cref="T:System.Object" /> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression" />'s value.
            </para>
          <para>
            Example <paramref name="expression" />s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
          <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Encode(System::Object ^ value);" />
      <MemberSignature Language="C#" Value="public string Encode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Encode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (value As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member Encode : obj -&gt; string" Usage="iHtmlHelper.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Object" /> to encode.</param>
        <summary>
            Converts the <paramref name="value" /> to an HTML-encoded <see cref="T:System.String" />.
            </summary>
        <returns>The HTML-encoded <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Encode(System::String ^ value);" />
      <MemberSignature Language="C#" Value="public string Encode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (value As String) As String" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string" Usage="iHtmlHelper.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String" /> to encode.</param>
        <summary>
            Converts the specified <see cref="T:System.String" /> to an HTML-encoded <see cref="T:System.String" />.
            </summary>
        <returns>The HTML-encoded <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndForm">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndForm();" />
      <MemberSignature Language="C#" Value="public void EndForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.EndForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndForm ()" />
      <MemberSignature Language="F#" Value="abstract member EndForm : unit -&gt; unit" Usage="iHtmlHelper.EndForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Renders the &lt;/form&gt; end tag to the response.
            </summary>
        <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValue">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ FormatValue(System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="C#" Value="public string FormatValue (object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatValue(object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.FormatValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatValue (value As Object, format As String) As String" />
      <MemberSignature Language="F#" Value="abstract member FormatValue : obj * string -&gt; string" Usage="iHtmlHelper.FormatValue (value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) used to format the return
            value.
            </param>
        <summary>
            Formats the value.
            </summary>
        <returns>A <see cref="T:System.String" /> containing the formatted value.</returns>
        <remarks>
            Converts <paramref name="value" /> to a <see cref="T:System.String" /> directly if
            <paramref name="format" /> is <c>null</c> or empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIdFromName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateIdFromName(System::String ^ fullName);" />
      <MemberSignature Language="C#" Value="public string GenerateIdFromName (string fullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateIdFromName(string fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.GenerateIdFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateIdFromName (fullName As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateIdFromName : string -&gt; string" Usage="iHtmlHelper.GenerateIdFromName fullName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullName">
            Fully-qualified expression name, ignoring the current model. Must not be <c>null</c>. See
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </param>
        <summary>
            Returns an HTML element Id for the specified expression <paramref name="fullName" />.
            </summary>
        <returns>A <see cref="T:System.String" /> containing the element Id.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumSelectList">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Mvc::Rendering::SelectListItem ^&gt; ^ GetEnumSelectList(Type ^ enumType);" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; GetEnumSelectList (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; GetEnumSelectList(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.GetEnumSelectList(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumSelectList (enumType As Type) As IEnumerable(Of SelectListItem)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumSelectList : Type -&gt; seq&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt;" Usage="iHtmlHelper.GetEnumSelectList enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <see cref="T:System.Type" /> to generate a select list for.</param>
        <summary>
            Returns a select list for the given <paramref name="enumType" />.
            </summary>
        <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the select list for the given
            <paramref name="enumType" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="enumType" /> is not an <see cref="T:System.Enum" /> or if it has a
            <see cref="T:System.FlagsAttribute" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumSelectList&lt;TEnum&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Mvc::Rendering::SelectListItem ^&gt; ^ GetEnumSelectList();" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; GetEnumSelectList&lt;TEnum&gt; () where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; GetEnumSelectList&lt;struct .ctor (class System.ValueType) TEnum&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.GetEnumSelectList``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumSelectList(Of TEnum As Structure) () As IEnumerable(Of SelectListItem)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumSelectList : unit -&gt; seq&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; (requires 'Enum : struct)" Usage="iHtmlHelper.GetEnumSelectList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEnum">Type to generate a select list for.</typeparam>
        <summary>
            Returns a select list for the given <typeparamref name="TEnum" />.
            </summary>
        <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the select list for the given
            <typeparamref name="TEnum" />,
            with a decimal representation of the ordinal as <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value" />
            and the display name as <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            Thrown if <typeparamref name="TEnum" /> is not an <see cref="T:System.Enum" /> or if it has a
            <see cref="T:System.FlagsAttribute" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Hidden(System::String ^ expression, System::Object ^ value, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Hidden (string expression, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Hidden(string expression, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Hidden(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hidden (expression As String, value As Object, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Hidden : string * obj * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Hidden (expression, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="value">If non-<c>null</c>, value to include in the element.</param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an &lt;input&gt; element of type "hidden" for the specified <paramref name="expression" />. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <paramref name="value" /> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name,
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />, or
            the <paramref name="htmlAttributes" /> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;input&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Html5DateRenderingMode">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Rendering::Html5DateRenderingMode Html5DateRenderingMode { Microsoft::AspNetCore::Mvc::Rendering::Html5DateRenderingMode get(); void set(Microsoft::AspNetCore::Mvc::Rendering::Html5DateRenderingMode value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode Html5DateRenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode Html5DateRenderingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Html5DateRenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property Html5DateRenderingMode As Html5DateRenderingMode" />
      <MemberSignature Language="F#" Value="member this.Html5DateRenderingMode : Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode with get, set" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Html5DateRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set this property to <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.CurrentCulture" /> to have templated helpers such as
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)" /> render date and time
            values using the current culture. By default, these helpers render dates and times as RFC 3339 compliant strings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Id(System::String ^ expression);" />
      <MemberSignature Language="C#" Value="public string Id (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Id(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Id(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Id (expression As String) As String" />
      <MemberSignature Language="F#" Value="abstract member Id : string -&gt; string" Usage="iHtmlHelper.Id expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <summary>
            Returns the HTML element Id for the specified <paramref name="expression" />.
            </summary>
        <returns>A <see cref="T:System.String" /> containing the element Id.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdAttributeDotReplacement">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IdAttributeDotReplacement { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string IdAttributeDotReplacement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdAttributeDotReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.IdAttributeDotReplacement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdAttributeDotReplacement As String" />
      <MemberSignature Language="F#" Value="member this.IdAttributeDotReplacement : string" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.IdAttributeDotReplacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.String" /> that replaces periods in the ID attribute of an element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Label(System::String ^ expression, System::String ^ labelText, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Label (string expression, string labelText, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Label(string expression, string labelText, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Label(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Label (expression As String, labelText As String, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Label : string * string * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Label (expression, labelText, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="labelText" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="labelText">The inner text of the element.</param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression" />.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;label&gt; element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBox">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ ListBox(System::String ^ expression, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Mvc::Rendering::SelectListItem ^&gt; ^ selectList, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent ListBox (string expression, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; selectList, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent ListBox(string expression, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBox (expression As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member ListBox : string * seq&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt; * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.ListBox (expression, selectList, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Rendering.SelectListItem&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem" /> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, finds the <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem" />
            collection with name <paramref name="expression" /> in <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" />.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns a multi-selection &lt;select&gt; element for the <paramref name="expression" />. Adds
            &lt;option&gt; elements based on <paramref name="selectList" />. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value" /> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text" /> matches an entry in the first non-<c>null</c> collection found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name (unless used instead of <paramref name="selectList" />), or
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;select&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataProvider">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ MetadataProvider { Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider MetadataProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider MetadataProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.MetadataProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataProvider As IModelMetadataProvider" />
      <MemberSignature Language="F#" Value="member this.MetadataProvider : Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.MetadataProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the metadata provider. Intended for use in <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" /> extension methods.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Name(System::String ^ expression);" />
      <MemberSignature Language="C#" Value="public string Name (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Name(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Name (expression As String) As String" />
      <MemberSignature Language="F#" Value="abstract member Name : string -&gt; string" Usage="iHtmlHelper.Name expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <summary>
            Returns the full HTML element name for the specified <paramref name="expression" />. Uses
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> (if non-empty) to reflect relationship between current
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" /> and the top-level view's model.
            </summary>
        <returns>A <see cref="T:System.String" /> containing the element name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Html::IHtmlContent ^&gt; ^ PartialAsync(System::String ^ partialViewName, System::Object ^ model, Microsoft::AspNetCore::Mvc::ViewFeatures::ViewDataDictionary ^ viewData);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Html.IHtmlContent&gt; PartialAsync (string partialViewName, object model, Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary viewData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Html.IHtmlContent&gt; PartialAsync(string partialViewName, object model, class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary viewData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function PartialAsync (partialViewName As String, model As Object, viewData As ViewDataDictionary) As Task(Of IHtmlContent)" />
      <MemberSignature Language="F#" Value="abstract member PartialAsync : string * obj * Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Html.IHtmlContent&gt;" Usage="iHtmlHelper.PartialAsync (partialViewName, model, viewData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Html.IHtmlContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialViewName" Type="System.String" />
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="viewData" Type="Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" />
      </Parameters>
      <Docs>
        <param name="partialViewName">
            The name of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
        <param name="model">A model to pass into the partial view.</param>
        <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" /> to pass into the partial view.</param>
        <summary>
            Returns HTML markup for the specified partial view.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> instance containing
            the created HTML.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Password(System::String ^ expression, System::Object ^ value, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Password (string expression, object value, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Password(string expression, object value, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Password(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Password (expression As String, value As Object, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Password : string * obj * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Password (expression, value, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="value">If non-<c>null</c>, value to include in the element.</param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an &lt;input&gt; element of type "password" for the specified <paramref name="expression" />. Adds a
            "value" attribute containing the first non-<c>null</c> value in:
            the <paramref name="value" /> parameter, or
            the <paramref name="htmlAttributes" /> dictionary entry with key "value".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;input&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ RadioButton(System::String ^ expression, System::Object ^ value, Nullable&lt;bool&gt; isChecked, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent RadioButton (string expression, object value, bool? isChecked, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent RadioButton(string expression, object value, valuetype System.Nullable`1&lt;bool&gt; isChecked, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.RadioButton(System.String,System.Object,System.Nullable{System.Boolean},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadioButton (expression As String, value As Object, isChecked As Nullable(Of Boolean), htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member RadioButton : string * obj * Nullable&lt;bool&gt; * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.RadioButton (expression, value, isChecked, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="value">
            If non-<c>null</c>, value to include in the element. Must not be <c>null</c> if
            <paramref name="isChecked" /> is also <c>null</c> and no "checked" entry exists in
            <paramref name="htmlAttributes" />.
            </param>
        <param name="isChecked">
            If <c>true</c>, radio button is initially selected. Must not be <c>null</c> if
            <paramref name="value" /> is also <c>null</c> and no "checked" entry exists in
            <paramref name="htmlAttributes" />.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression" />.
            Adds a "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <paramref name="value" /> parameter, or
            the <paramref name="htmlAttributes" /> dictionary entry with key "value".
            Adds a "checked" attribute to the element if <paramref name="value" /> matches the first non-<c>null</c>
            value found in:
            the <paramref name="htmlAttributes" /> dictionary entry with key "checked",
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name, or
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />.
            If <paramref name="isChecked" /> is non-<c>null</c>, instead uses the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name, or
            the <paramref name="isChecked" /> parameter.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;input&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Raw(System::Object ^ value);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Raw (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Raw(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Raw(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Raw (value As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Raw : obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Raw value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Object" /> to wrap.</param>
        <summary>
            Wraps HTML markup from the string representation of an <see cref="T:System.Object" /> in an
            <see cref="T:Microsoft.AspNetCore.Html.HtmlString" />, without HTML-encoding the string representation.
            </summary>
        <returns>
          <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the wrapped string representation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ Raw(System::String ^ value);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent Raw (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent Raw(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Raw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Raw (value As String) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member Raw : string -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.Raw value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">HTML markup <see cref="T:System.String" />.</param>
        <summary>
            Wraps HTML markup in an <see cref="T:Microsoft.AspNetCore.Html.HtmlString" />, without HTML-encoding the specified
            <paramref name="value" />.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the wrapped <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderPartialAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ RenderPartialAsync(System::String ^ partialViewName, System::Object ^ model, Microsoft::AspNetCore::Mvc::ViewFeatures::ViewDataDictionary ^ viewData);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RenderPartialAsync (string partialViewName, object model, Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary viewData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenderPartialAsync(string partialViewName, object model, class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary viewData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.RenderPartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderPartialAsync (partialViewName As String, model As Object, viewData As ViewDataDictionary) As Task" />
      <MemberSignature Language="F#" Value="abstract member RenderPartialAsync : string * obj * Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary -&gt; System.Threading.Tasks.Task" Usage="iHtmlHelper.RenderPartialAsync (partialViewName, model, viewData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialViewName" Type="System.String" />
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="viewData" Type="Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" />
      </Parameters>
      <Docs>
        <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
        <param name="model">A model to pass into the partial view.</param>
        <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" /> to pass into the partial view.</param>
        <summary>
            Renders HTML markup for the specified partial view.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that renders the created HTML when it executes.</returns>
        <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteLink">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ RouteLink(System::String ^ linkText, System::String ^ routeName, System::String ^ protocol, System::String ^ hostName, System::String ^ fragment, System::Object ^ routeValues, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent RouteLink (string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent RouteLink(string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.RouteLink(System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RouteLink (linkText As String, routeName As String, protocol As String, hostName As String, fragment As String, routeValues As Object, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member RouteLink : string * string * string * string * string * obj * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.RouteLink (linkText, routeName, protocol, hostName, fragment, routeValues, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkText" Type="System.String" />
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="protocol" Type="System.String" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="fragment" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
        <param name="routeName">The name of the route.</param>
        <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
        <param name="hostName">The host name for the URL.</param>
        <param name="fragment">The URL fragment name (the anchor name).</param>
        <param name="routeValues">
            An <see cref="T:System.Object" /> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object" />. This <see cref="T:System.Object" /> is typically
            created using <see cref="T:System.Object" /> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the route parameters.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the anchor element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TempData">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ViewFeatures::ITempDataDictionary ^ TempData { Microsoft::AspNetCore::Mvc::ViewFeatures::ITempDataDictionary ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary TempData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary TempData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TempData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TempData As ITempDataDictionary" />
      <MemberSignature Language="F#" Value="member this.TempData : Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TempData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ TextArea(System::String ^ expression, System::String ^ value, int rows, int columns, System::Object ^ htmlAttributes);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent TextArea (string expression, string value, int rows, int columns, object htmlAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent TextArea(string expression, string value, int32 rows, int32 columns, object htmlAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextArea (expression As String, value As String, rows As Integer, columns As Integer, htmlAttributes As Object) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member TextArea : string * string * int * int * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.TextArea (expression, value, rows, columns, htmlAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="rows" Type="System.Int32" />
        <Parameter Name="columns" Type="System.Int32" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="value">If non-<c>null</c>, value to include in the element.</param>
        <param name="rows">Number of rows in the textarea.</param>
        <param name="columns">Number of columns in the textarea.</param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression" />. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <paramref name="value" /> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name, or
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;textarea&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;textarea&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ TextBox(System::String ^ current, System::Object ^ value, System::String ^ format, System::Object ^ htmlAttributes);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ TextBox(System::String ^ expression, System::Object ^ value, System::String ^ format, System::Object ^ htmlAttributes);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent TextBox (string current, object value, string format, object htmlAttributes);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent TextBox(string current, object value, string format, object htmlAttributes) cil managed" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TextBox(System.String,System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBox (current As String, value As Object, format As String, htmlAttributes As Object) As IHtmlContent" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member TextBox : string * obj * string * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.TextBox (current, value, format, htmlAttributes)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent TextBox (string expression, object value, string format, object htmlAttributes);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent TextBox(string expression, object value, string format, object htmlAttributes) cil managed" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBox (expression As String, value As Object, format As String, htmlAttributes As Object) As IHtmlContent" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member TextBox : string * obj * string * obj -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.TextBox (expression, value, format, htmlAttributes)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
        <Parameter Name="expression" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" />
        <Parameter Name="format" Type="System.String" Index="2" />
        <Parameter Name="htmlAttributes" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="current">Expression name, relative to the current model.</param>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="value">If non-<c>null</c>, value to include in the element.</param>
        <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) used to format the "value"
            attribute unless that came from model binding.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression" />. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <paramref name="value" /> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name,
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />, or
            the <paramref name="htmlAttributes" /> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing the &lt;input&gt; element.</returns>
        <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix" /> and <paramref name="expression" /> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression" /> to set element's "id"
            attribute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncoder">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encodings::Web::UrlEncoder ^ UrlEncoder { System::Text::Encodings::Web::UrlEncoder ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Text.Encodings.Web.UrlEncoder UrlEncoder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encodings.Web.UrlEncoder UrlEncoder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.UrlEncoder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlEncoder As UrlEncoder" />
      <MemberSignature Language="F#" Value="member this.UrlEncoder : System.Text.Encodings.Web.UrlEncoder" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.UrlEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encodings.Web.UrlEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.UrlEncoder" /> to be used for encoding a URL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMessage">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ ValidationMessage(System::String ^ expression, System::String ^ message, System::Object ^ htmlAttributes, System::String ^ tag);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent ValidationMessage (string expression, string message, object htmlAttributes, string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent ValidationMessage(string expression, string message, object htmlAttributes, string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationMessage (expression As String, message As String, htmlAttributes As Object, tag As String) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member ValidationMessage : string * string * obj * string -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.ValidationMessage (expression, message, htmlAttributes, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> object. Message will always be visible but client-side validation may
            update the associated CSS class.
            </param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the <paramref name="tag" /> element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <param name="tag">
            The tag to wrap the <paramref name="message" /> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement" />.
            </param>
        <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> object
            for the specified <paramref name="expression" />.
            </summary>
        <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing a <paramref name="tag" /> element. An empty
            <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> if the <paramref name="expression" /> is valid and client-side validation is
            disabled.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSummary">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Html::IHtmlContent ^ ValidationSummary(bool excludePropertyErrors, System::String ^ message, System::Object ^ htmlAttributes, System::String ^ tag);" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Html.IHtmlContent ValidationSummary (bool excludePropertyErrors, string message, object htmlAttributes, string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Html.IHtmlContent ValidationSummary(bool excludePropertyErrors, string message, object htmlAttributes, string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationSummary(System.Boolean,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidationSummary (excludePropertyErrors As Boolean, message As String, htmlAttributes As Object, tag As String) As IHtmlContent" />
      <MemberSignature Language="F#" Value="abstract member ValidationSummary : bool * string * obj * string -&gt; Microsoft.AspNetCore.Html.IHtmlContent" Usage="iHtmlHelper.ValidationSummary (excludePropertyErrors, message, htmlAttributes, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Html.IHtmlContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="htmlAttributes" Type="System.Object" />
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="excludePropertyErrors">
            If <c>true</c>, display model-level errors only; otherwise display all errors.
            </param>
        <param name="message">The message to display with the validation summary.</param>
        <param name="htmlAttributes">
            An <see cref="T:System.Object" /> that contains the HTML attributes for the topmost (&lt;div&gt;) element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance containing the HTML attributes.
            </param>
        <param name="tag">
            The tag to wrap the <paramref name="message" /> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" />.
            </param>
        <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> object.
            </summary>
        <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> containing a &lt;div&gt; element wrapping the <paramref name="tag" /> element
            and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> if the current model is valid and
            client-side validation is disabled.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Value(System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="C#" Value="public string Value (string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Value(string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Value(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Value (expression As String, format As String) As String" />
      <MemberSignature Language="F#" Value="abstract member Value : string * string -&gt; string" Usage="iHtmlHelper.Value (expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression name, relative to the current model.</param>
        <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx" />) used to format the return
            value unless that came from model binding.
            </param>
        <summary>
            Returns the formatted value for the specified <paramref name="expression" />. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState" /> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" /> entry with full name, or
            the <paramref name="expression" /> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model" />.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)" /> for more information about a "full name".
            </summary>
        <returns>A <see cref="T:System.String" /> containing the formatted value.</returns>
        <remarks>
            Converts the expression result to a <see cref="T:System.String" /> directly if
            <paramref name="format" /> is <c>null</c> or empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewBag">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewBag { System::Object ^ get(); };" />
      <MemberSignature Language="C#" Value="public dynamic ViewBag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewBag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewBag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewBag As Object" />
      <MemberSignature Language="F#" Value="member this.ViewBag : obj" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewBag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the view bag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewContext">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Rendering::ViewContext ^ ViewContext { Microsoft::AspNetCore::Mvc::Rendering::ViewContext ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Rendering.ViewContext ViewContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Rendering.ViewContext ViewContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewContext As ViewContext" />
      <MemberSignature Language="F#" Value="member this.ViewContext : Microsoft.AspNetCore.Mvc.Rendering.ViewContext" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Rendering.ViewContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the context information about the view.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewData">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ViewFeatures::ViewDataDictionary ^ ViewData { Microsoft::AspNetCore::Mvc::ViewFeatures::ViewDataDictionary ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary ViewData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary ViewData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewData As ViewDataDictionary" />
      <MemberSignature Language="F#" Value="member this.ViewData : Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" Usage="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current view data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
