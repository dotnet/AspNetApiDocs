<Type Name="DotNetInvocationResult" FullName="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult">
  <TypeSignature Language="C++ CLI" Value="public value class DotNetInvocationResult" />
  <TypeSignature Language="C#" Value="public readonly struct DotNetInvocationResult" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DotNetInvocationResult extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult" />
  <TypeSignature Language="VB.NET" Value="Public Structure DotNetInvocationResult" />
  <TypeSignature Language="F#" Value="type DotNetInvocationResult = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JSInterop</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Result of a .NET invocation that is returned to JavaScript.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DotNetInvocationResult(System::Object ^ result);" />
      <MemberSignature Language="C#" Value="public DotNetInvocationResult (object result);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="F#" Value="new Microsoft.JSInterop.Infrastructure.DotNetInvocationResult : obj -&gt; Microsoft.JSInterop.Infrastructure.DotNetInvocationResult" Usage="new Microsoft.JSInterop.Infrastructure.DotNetInvocationResult result" />
      <MemberSignature Language="C#" Value="public DotNetInvocationResult (object? result);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" Index="0" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      </Parameters>
      <Docs>
        <param name="result">The result.</param>
        <summary>
            Constructor for a successful invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DotNetInvocationResult(Exception ^ exception, System::String ^ errorKind);" />
      <MemberSignature Language="C#" Value="public DotNetInvocationResult (Exception exception, string errorKind);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, string errorKind) cil managed" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.#ctor(System.Exception,System.String)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As Exception, errorKind As String)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="F#" Value="new Microsoft.JSInterop.Infrastructure.DotNetInvocationResult : Exception * string -&gt; Microsoft.JSInterop.Infrastructure.DotNetInvocationResult" Usage="new Microsoft.JSInterop.Infrastructure.DotNetInvocationResult (exception, errorKind)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public DotNetInvocationResult (Exception exception, string? errorKind);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
        <Parameter Name="errorKind" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      </Parameters>
      <Docs>
        <param name="exception">The <see cref="T:System.Exception" /> that caused the failure.</param>
        <param name="errorKind">The error kind.</param>
        <summary>
            Constructor for a failed invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorKind">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorKind { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string ErrorKind { get; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.ErrorKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorKind As String" />
      <MemberSignature Language="F#" Value="member this.ErrorKind : string" Usage="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.ErrorKind" />
      <MemberSignature Language="C#" Value="public string? ErrorKind { get; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the error kind.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Exception" />
      <MemberSignature Language="C#" Value="public Exception? Exception { get; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Exception" /> that caused the failure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="C#" Value="public object Result { get; }" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Result" />
      <MemberSignature Language="C#" Value="public object? Result { get; }" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the result of a successful invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultJson">
      <MemberSignature Language="C#" Value="public string? ResultJson { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResultJson" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.ResultJson" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResultJson As String" />
      <MemberSignature Language="F#" Value="member this.ResultJson : string" Usage="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.ResultJson" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a JSON representation of the result of a successful invocation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see langword="true" /> if the invocation succeeded, otherwise <see langword="false" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
