<Type Name="IAvailableDestinationsPolicy" FullName="Yarp.ReverseProxy.Health.IAvailableDestinationsPolicy">
  <TypeSignature Language="C#" Value="public interface IAvailableDestinationsPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAvailableDestinationsPolicy" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Health.IAvailableDestinationsPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAvailableDestinationsPolicy" />
  <TypeSignature Language="F#" Value="type IAvailableDestinationsPolicy = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAvailableDestinationsPolicy" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Policy evaluating which destinations should be available for proxying requests to.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAvailalableDestinations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt; GetAvailalableDestinations (Yarp.ReverseProxy.Configuration.ClusterConfig config, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt; allDestinations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt; GetAvailalableDestinations(class Yarp.ReverseProxy.Configuration.ClusterConfig config, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Model.DestinationState&gt; allDestinations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Health.IAvailableDestinationsPolicy.GetAvailalableDestinations(Yarp.ReverseProxy.Configuration.ClusterConfig,System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Model.DestinationState})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAvailalableDestinations (config As ClusterConfig, allDestinations As IReadOnlyList(Of DestinationState)) As IReadOnlyList(Of DestinationState)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailalableDestinations : Yarp.ReverseProxy.Configuration.ClusterConfig * System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;" Usage="iAvailableDestinationsPolicy.GetAvailalableDestinations (config, allDestinations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Yarp.ReverseProxy.Configuration.ClusterConfig" />
        <Parameter Name="allDestinations" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Model.DestinationState&gt;" />
      </Parameters>
      <Docs>
        <param name="config">Target cluster.</param>
        <param name="allDestinations">All destinations configured for the target cluster.</param>
        <summary>
            Reviews all given destinations and returns the ones available for proxying requests to.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Health.IAvailableDestinationsPolicy.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Yarp.ReverseProxy.Health.IAvailableDestinationsPolicy.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Policy name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
