<Type Name="IDestinationHealthUpdater" FullName="Yarp.ReverseProxy.Health.IDestinationHealthUpdater">
  <TypeSignature Language="C#" Value="public interface IDestinationHealthUpdater" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationHealthUpdater" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Health.IDestinationHealthUpdater" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationHealthUpdater" />
  <TypeSignature Language="F#" Value="type IDestinationHealthUpdater = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDestinationHealthUpdater" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Updates destinations' health states when it's requested by a health check policy
            while taking into account not only the new evaluated value but also the overall current cluster's health state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SetActive">
      <MemberSignature Language="C#" Value="public void SetActive (Yarp.ReverseProxy.Model.ClusterState cluster, System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Health.NewActiveDestinationHealth&gt; newHealthStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetActive(class Yarp.ReverseProxy.Model.ClusterState cluster, class System.Collections.Generic.IEnumerable`1&lt;valuetype Yarp.ReverseProxy.Health.NewActiveDestinationHealth&gt; newHealthStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Health.IDestinationHealthUpdater.SetActive(Yarp.ReverseProxy.Model.ClusterState,System.Collections.Generic.IEnumerable{Yarp.ReverseProxy.Health.NewActiveDestinationHealth})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetActive (cluster As ClusterState, newHealthStates As IEnumerable(Of NewActiveDestinationHealth))" />
      <MemberSignature Language="F#" Value="abstract member SetActive : Yarp.ReverseProxy.Model.ClusterState * seq&lt;Yarp.ReverseProxy.Health.NewActiveDestinationHealth&gt; -&gt; unit" Usage="iDestinationHealthUpdater.SetActive (cluster, newHealthStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Model.ClusterState" />
        <Parameter Name="newHealthStates" Type="System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Health.NewActiveDestinationHealth&gt;" />
      </Parameters>
      <Docs>
        <param name="cluster">Cluster.</param>
        <param name="newHealthStates">New active health states.</param>
        <summary>
            Sets the active health values on the given destinations.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPassive">
      <MemberSignature Language="C#" Value="public void SetPassive (Yarp.ReverseProxy.Model.ClusterState cluster, Yarp.ReverseProxy.Model.DestinationState destination, Yarp.ReverseProxy.Model.DestinationHealth newHealth, TimeSpan reactivationPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPassive(class Yarp.ReverseProxy.Model.ClusterState cluster, class Yarp.ReverseProxy.Model.DestinationState destination, valuetype Yarp.ReverseProxy.Model.DestinationHealth newHealth, valuetype System.TimeSpan reactivationPeriod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Health.IDestinationHealthUpdater.SetPassive(Yarp.ReverseProxy.Model.ClusterState,Yarp.ReverseProxy.Model.DestinationState,Yarp.ReverseProxy.Model.DestinationHealth,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPassive (cluster As ClusterState, destination As DestinationState, newHealth As DestinationHealth, reactivationPeriod As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member SetPassive : Yarp.ReverseProxy.Model.ClusterState * Yarp.ReverseProxy.Model.DestinationState * Yarp.ReverseProxy.Model.DestinationHealth * TimeSpan -&gt; unit" Usage="iDestinationHealthUpdater.SetPassive (cluster, destination, newHealth, reactivationPeriod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Model.ClusterState" />
        <Parameter Name="destination" Type="Yarp.ReverseProxy.Model.DestinationState" />
        <Parameter Name="newHealth" Type="Yarp.ReverseProxy.Model.DestinationHealth" />
        <Parameter Name="reactivationPeriod" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cluster">Cluster.</param>
        <param name="destination">Destination.</param>
        <param name="newHealth">New passive health value.</param>
        <param name="reactivationPeriod">If <paramref name="newHealth" /> is <see cref="F:Yarp.ReverseProxy.Model.DestinationHealth.Unhealthy" />,
            this parameter specifies a reactivation period after which the destination's <see cref="P:Yarp.ReverseProxy.Model.DestinationHealthState.Passive" /> value
            will be reset to <see cref="F:Yarp.ReverseProxy.Model.DestinationHealth.Unknown" />. Otherwise, it's not used.</param>
        <summary>
            Sets the passive health on the given <paramref name="destination" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
