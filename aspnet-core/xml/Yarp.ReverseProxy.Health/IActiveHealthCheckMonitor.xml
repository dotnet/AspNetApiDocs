<Type Name="IActiveHealthCheckMonitor" FullName="Yarp.ReverseProxy.Health.IActiveHealthCheckMonitor">
  <TypeSignature Language="C#" Value="public interface IActiveHealthCheckMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActiveHealthCheckMonitor" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Health.IActiveHealthCheckMonitor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActiveHealthCheckMonitor" />
  <TypeSignature Language="F#" Value="type IActiveHealthCheckMonitor = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IActiveHealthCheckMonitor" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Actively monitors destinations health.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckHealthAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CheckHealthAsync (System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.ClusterState&gt; clusters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CheckHealthAsync(class System.Collections.Generic.IEnumerable`1&lt;class Yarp.ReverseProxy.Model.ClusterState&gt; clusters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Health.IActiveHealthCheckMonitor.CheckHealthAsync(System.Collections.Generic.IEnumerable{Yarp.ReverseProxy.Model.ClusterState})" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckHealthAsync (clusters As IEnumerable(Of ClusterState)) As Task" />
      <MemberSignature Language="F#" Value="abstract member CheckHealthAsync : seq&lt;Yarp.ReverseProxy.Model.ClusterState&gt; -&gt; System.Threading.Tasks.Task" Usage="iActiveHealthCheckMonitor.CheckHealthAsync clusters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusters" Type="System.Collections.Generic.IEnumerable&lt;Yarp.ReverseProxy.Model.ClusterState&gt;" />
      </Parameters>
      <Docs>
        <param name="clusters">Clusters to check the health of their destinations.</param>
        <summary>
            Checks health of all clusters' destinations.
            </summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" /> representing the health check process.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialProbeCompleted">
      <MemberSignature Language="C#" Value="public bool InitialProbeCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitialProbeCompleted" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Health.IActiveHealthCheckMonitor.InitialProbeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialProbeCompleted As Boolean" />
      <MemberSignature Language="F#" Value="member this.InitialProbeCompleted : bool" Usage="Yarp.ReverseProxy.Health.IActiveHealthCheckMonitor.InitialProbeCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that determines whether the initial round of active health checks have run, regardless of the results.
            </summary>
        <value>
          <c>false</c> until the initial round of health check requests has been processed.
            <c>true</c> when all the initially configured destinations have been queried, regardless their availability or returned status code.
            The property stays <c>true</c> for the rest of the proxy process lifetime.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
