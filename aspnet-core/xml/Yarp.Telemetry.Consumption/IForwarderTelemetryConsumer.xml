<Type Name="IForwarderTelemetryConsumer" FullName="Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer">
  <TypeSignature Language="C#" Value="public interface IForwarderTelemetryConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IForwarderTelemetryConsumer" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IForwarderTelemetryConsumer" />
  <TypeSignature Language="F#" Value="type IForwarderTelemetryConsumer = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IForwarderTelemetryConsumer" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A consumer of Yarp.ReverseProxy EventSource events.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OnContentTransferred">
      <MemberSignature Language="C#" Value="public virtual void OnContentTransferred (DateTime timestamp, bool isRequest, long contentLength, long iops, TimeSpan readTime, TimeSpan writeTime, TimeSpan firstReadTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnContentTransferred(valuetype System.DateTime timestamp, bool isRequest, int64 contentLength, int64 iops, valuetype System.TimeSpan readTime, valuetype System.TimeSpan writeTime, valuetype System.TimeSpan firstReadTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnContentTransferred(System.DateTime,System.Boolean,System.Int64,System.Int64,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnContentTransferred (timestamp As DateTime, isRequest As Boolean, contentLength As Long, iops As Long, readTime As TimeSpan, writeTime As TimeSpan, firstReadTime As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member OnContentTransferred : DateTime * bool * int64 * int64 * TimeSpan * TimeSpan * TimeSpan -&gt; unit&#xA;override this.OnContentTransferred : DateTime * bool * int64 * int64 * TimeSpan * TimeSpan * TimeSpan -&gt; unit" Usage="iForwarderTelemetryConsumer.OnContentTransferred (timestamp, isRequest, contentLength, iops, readTime, writeTime, firstReadTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="isRequest" Type="System.Boolean" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="iops" Type="System.Int64" />
        <Parameter Name="readTime" Type="System.TimeSpan" />
        <Parameter Name="writeTime" Type="System.TimeSpan" />
        <Parameter Name="firstReadTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="isRequest">Indicates whether we transfered the content from the client to the backend or vice-versa.</param>
        <param name="contentLength">Number of bytes transferred.</param>
        <param name="iops">Number of read/write pairs performed.</param>
        <param name="readTime">Time spent reading from the source.</param>
        <param name="writeTime">Time spent writing to the destination.</param>
        <param name="firstReadTime">Time spent on the first read of the source.</param>
        <summary>
            Called after transferring the request or response content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTransferring">
      <MemberSignature Language="C#" Value="public virtual void OnContentTransferring (DateTime timestamp, bool isRequest, long contentLength, long iops, TimeSpan readTime, TimeSpan writeTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnContentTransferring(valuetype System.DateTime timestamp, bool isRequest, int64 contentLength, int64 iops, valuetype System.TimeSpan readTime, valuetype System.TimeSpan writeTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnContentTransferring(System.DateTime,System.Boolean,System.Int64,System.Int64,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnContentTransferring (timestamp As DateTime, isRequest As Boolean, contentLength As Long, iops As Long, readTime As TimeSpan, writeTime As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member OnContentTransferring : DateTime * bool * int64 * int64 * TimeSpan * TimeSpan -&gt; unit&#xA;override this.OnContentTransferring : DateTime * bool * int64 * int64 * TimeSpan * TimeSpan -&gt; unit" Usage="iForwarderTelemetryConsumer.OnContentTransferring (timestamp, isRequest, contentLength, iops, readTime, writeTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="isRequest" Type="System.Boolean" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="iops" Type="System.Int64" />
        <Parameter Name="readTime" Type="System.TimeSpan" />
        <Parameter Name="writeTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="isRequest">Indicates whether we are transferring the content from the client to the backend or vice-versa.</param>
        <param name="contentLength">Number of bytes transferred.</param>
        <param name="iops">Number of read/write pairs performed.</param>
        <param name="readTime">Time spent reading from the source.</param>
        <param name="writeTime">Time spent writing to the destination.</param>
        <summary>
            Called periodically while a content transfer is active.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForwarderFailed">
      <MemberSignature Language="C#" Value="public virtual void OnForwarderFailed (DateTime timestamp, Yarp.ReverseProxy.Forwarder.ForwarderError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForwarderFailed(valuetype System.DateTime timestamp, valuetype Yarp.ReverseProxy.Forwarder.ForwarderError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnForwarderFailed(System.DateTime,Yarp.ReverseProxy.Forwarder.ForwarderError)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForwarderFailed (timestamp As DateTime, error As ForwarderError)" />
      <MemberSignature Language="F#" Value="abstract member OnForwarderFailed : DateTime * Yarp.ReverseProxy.Forwarder.ForwarderError -&gt; unit&#xA;override this.OnForwarderFailed : DateTime * Yarp.ReverseProxy.Forwarder.ForwarderError -&gt; unit" Usage="iForwarderTelemetryConsumer.OnForwarderFailed (timestamp, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="error" Type="Yarp.ReverseProxy.Forwarder.ForwarderError" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="error">
          <see cref="T:Yarp.ReverseProxy.Forwarder.ForwarderError" /> information for the forwarding failure.</param>
        <summary>
            Called before <see cref="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnForwarderStop(System.DateTime,System.Int32)" /> if forwarding the request failed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForwarderInvoke">
      <MemberSignature Language="C#" Value="public virtual void OnForwarderInvoke (DateTime timestamp, string clusterId, string routeId, string destinationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForwarderInvoke(valuetype System.DateTime timestamp, string clusterId, string routeId, string destinationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnForwarderInvoke(System.DateTime,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForwarderInvoke (timestamp As DateTime, clusterId As String, routeId As String, destinationId As String)" />
      <MemberSignature Language="F#" Value="abstract member OnForwarderInvoke : DateTime * string * string * string -&gt; unit&#xA;override this.OnForwarderInvoke : DateTime * string * string * string -&gt; unit" Usage="iForwarderTelemetryConsumer.OnForwarderInvoke (timestamp, clusterId, routeId, destinationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="clusterId" Type="System.String" />
        <Parameter Name="routeId" Type="System.String" />
        <Parameter Name="destinationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="clusterId">Cluster ID</param>
        <param name="routeId">Route ID</param>
        <param name="destinationId">Destination ID</param>
        <summary>
            Called before forwarding a request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForwarderStage">
      <MemberSignature Language="C#" Value="public virtual void OnForwarderStage (DateTime timestamp, Yarp.Telemetry.Consumption.ForwarderStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForwarderStage(valuetype System.DateTime timestamp, valuetype Yarp.Telemetry.Consumption.ForwarderStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnForwarderStage(System.DateTime,Yarp.Telemetry.Consumption.ForwarderStage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForwarderStage (timestamp As DateTime, stage As ForwarderStage)" />
      <MemberSignature Language="F#" Value="abstract member OnForwarderStage : DateTime * Yarp.Telemetry.Consumption.ForwarderStage -&gt; unit&#xA;override this.OnForwarderStage : DateTime * Yarp.Telemetry.Consumption.ForwarderStage -&gt; unit" Usage="iForwarderTelemetryConsumer.OnForwarderStage (timestamp, stage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="stage" Type="Yarp.Telemetry.Consumption.ForwarderStage" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="stage">Stage of the forwarding operation.</param>
        <summary>
            Called when reaching a given stage of forwarding a request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForwarderStart">
      <MemberSignature Language="C#" Value="public virtual void OnForwarderStart (DateTime timestamp, string destinationPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForwarderStart(valuetype System.DateTime timestamp, string destinationPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnForwarderStart(System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForwarderStart (timestamp As DateTime, destinationPrefix As String)" />
      <MemberSignature Language="F#" Value="abstract member OnForwarderStart : DateTime * string -&gt; unit&#xA;override this.OnForwarderStart : DateTime * string -&gt; unit" Usage="iForwarderTelemetryConsumer.OnForwarderStart (timestamp, destinationPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="destinationPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="destinationPrefix" />
        <summary>
            Called before forwarding a request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForwarderStop">
      <MemberSignature Language="C#" Value="public virtual void OnForwarderStop (DateTime timestamp, int statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForwarderStop(valuetype System.DateTime timestamp, int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IForwarderTelemetryConsumer.OnForwarderStop(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForwarderStop (timestamp As DateTime, statusCode As Integer)" />
      <MemberSignature Language="F#" Value="abstract member OnForwarderStop : DateTime * int -&gt; unit&#xA;override this.OnForwarderStop : DateTime * int -&gt; unit" Usage="iForwarderTelemetryConsumer.OnForwarderStop (timestamp, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTime" />
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timestamp">Timestamp when the event was fired.</param>
        <param name="statusCode">The status code returned in the response.</param>
        <summary>
            Called after forwarding a request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
