<Type Name="IMetricsConsumer&lt;TMetrics&gt;" FullName="Yarp.Telemetry.Consumption.IMetricsConsumer&lt;TMetrics&gt;">
  <TypeSignature Language="C#" Value="public interface IMetricsConsumer&lt;TMetrics&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMetricsConsumer`1&lt;TMetrics&gt;" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.Telemetry.Consumption.IMetricsConsumer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMetricsConsumer(Of TMetrics)" />
  <TypeSignature Language="F#" Value="type IMetricsConsumer&lt;'Metrics&gt; = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IMetricsConsumer`1&lt;TMetrics&gt;" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TMetrics">
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TMetrics">To be added.</typeparam>
    <summary>
            A consumer of <typeparamref name="TMetrics" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OnMetrics">
      <MemberSignature Language="C#" Value="public void OnMetrics (TMetrics previous, TMetrics current);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMetrics(!TMetrics previous, !TMetrics current) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.Telemetry.Consumption.IMetricsConsumer`1.OnMetrics(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnMetrics (previous As TMetrics, current As TMetrics)" />
      <MemberSignature Language="F#" Value="abstract member OnMetrics : 'Metrics * 'Metrics -&gt; unit" Usage="iMetricsConsumer.OnMetrics (previous, current)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.Telemetry.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="TMetrics" />
        <Parameter Name="current" Type="TMetrics" />
      </Parameters>
      <Docs>
        <param name="previous">
          <typeparamref name="TMetrics" /> collected in the previous interval.</param>
        <param name="current">
          <typeparamref name="TMetrics" /> collected in the last interval.</param>
        <summary>
            Processes <typeparamref name="TMetrics" /> from the last event counter interval.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
