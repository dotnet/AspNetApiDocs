<Type Name="HttpMeteringExtensions" FullName="Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions">
  <TypeSignature Language="C#" Value="public static class HttpMeteringExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpMeteringExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpMeteringExtensions" />
  <TypeSignature Language="F#" Value="type HttpMeteringExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods to register http metering and metric enrichers with the service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpMetering">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpMetering (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpMetering(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddHttpMetering(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMetering (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpMetering : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddHttpMetering services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">Collection of services.</param>
        <summary>
            Adds incoming request metric auto-collection to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>Enriched collection of services.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpMetering">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpMetering (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder&gt;? build);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpMetering(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder&gt; build) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddHttpMetering(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMetering (services As IServiceCollection, build As Action(Of HttpMeteringBuilder)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpMetering : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddHttpMetering (services, build)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="build" Type="System.Action&lt;Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="services">Collection of services.</param>
        <param name="build">Function to configure http metering options.</param>
        <summary>
            Adds incoming request metric auto-collection to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>Enriched collection of services.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetricEnricher">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder AddMetricEnricher (this Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder builder, Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher enricher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder AddMetricEnricher(class Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder builder, class Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher enricher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddMetricEnricher(Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder,Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMetricEnricher (builder As HttpMeteringBuilder, enricher As IIncomingRequestMetricEnricher) As HttpMeteringBuilder" />
      <MemberSignature Language="F#" Value="static member AddMetricEnricher : Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder * Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher -&gt; Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder" Usage="Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddMetricEnricher (builder, enricher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder" RefType="this" />
        <Parameter Name="enricher" Type="Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add <paramref name="enricher" /> to.</param>
        <param name="enricher">The instance of <paramref name="enricher" /> to add to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>
            Adds <paramref name="enricher" /> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to enrich incoming request metrics.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetricEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder AddMetricEnricher&lt;T&gt; (this Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder builder) where T : class, Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder AddMetricEnricher&lt;class (class Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher) T&gt;(class Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddMetricEnricher``1(Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMetricEnricher(Of T As {Class, IIncomingRequestMetricEnricher}) (builder As HttpMeteringBuilder) As HttpMeteringBuilder" />
      <MemberSignature Language="F#" Value="static member AddMetricEnricher : Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder -&gt; Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder (requires 'T : null and 'T :&gt; Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher)" Usage="Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddMetricEnricher builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of enricher.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the instance of <typeparamref name="T" /> to.</param>
        <summary>
            Adds an enricher instance of <typeparamref name="T" /> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to enrich incoming request metrics.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHttpMetering">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IApplicationBuilder UseHttpMetering (this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IApplicationBuilder UseHttpMetering(class Microsoft.AspNetCore.Builder.IApplicationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.UseHttpMetering(Microsoft.AspNetCore.Builder.IApplicationBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseHttpMetering (builder As IApplicationBuilder) As IApplicationBuilder" />
      <MemberSignature Language="F#" Value="static member UseHttpMetering : Microsoft.AspNetCore.Builder.IApplicationBuilder -&gt; Microsoft.AspNetCore.Builder.IApplicationBuilder" Usage="Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.UseHttpMetering builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Builder.IApplicationBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" /> to add the middleware to.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Telemetry.Internal.HttpMeteringMiddleware" /> middleware to the specified <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
