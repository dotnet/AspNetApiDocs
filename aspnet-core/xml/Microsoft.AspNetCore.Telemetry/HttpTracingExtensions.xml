<Type Name="HttpTracingExtensions" FullName="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions">
  <TypeSignature Language="C#" Value="public static class HttpTracingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpTracingExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpTracingExtensions" />
  <TypeSignature Language="F#" Value="type HttpTracingExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for adding and configuring trace auto collectors for incoming HTTP requests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpTraceEnricher">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpTraceEnricher (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher enricher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpTraceEnricher(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher enricher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTraceEnricher (services As IServiceCollection, enricher As IHttpTraceEnricher) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpTraceEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher (services, enricher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="enricher" Type="Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add this enricher.</param>
        <param name="enricher">Enricher to be added.</param>
        <summary>
            Adds an enricher that enriches only incoming HTTP requests traces.
            </summary>
        <returns>
          <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> for chaining.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The argument <paramref name="services" /> or <paramref name="enricher" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHttpTraceEnricher">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddHttpTraceEnricher (this OpenTelemetry.Trace.TracerProviderBuilder builder, Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher enricher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddHttpTraceEnricher(class OpenTelemetry.Trace.TracerProviderBuilder builder, class Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher enricher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher(OpenTelemetry.Trace.TracerProviderBuilder,Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTraceEnricher (builder As TracerProviderBuilder, enricher As IHttpTraceEnricher) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddHttpTraceEnricher : OpenTelemetry.Trace.TracerProviderBuilder * Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher -&gt; OpenTelemetry.Trace.TracerProviderBuilder" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher (builder, enricher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
        <Parameter Name="enricher" Type="Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add this enricher.</param>
        <param name="enricher">Enricher to be added.</param>
        <summary>
            Adds an enricher that enriches only incoming HTTP requests traces.
            </summary>
        <returns>
          <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> for chaining.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpTraceEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpTraceEnricher&lt;T&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where T : class, Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpTraceEnricher&lt;class (class Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher) T&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTraceEnricher(Of T As {Class, IHttpTraceEnricher}) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpTraceEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'T : null and 'T :&gt; Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher)" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Enricher object type.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add this enricher.</param>
        <summary>
            Adds an enricher that enriches only incoming HTTP requests traces.
            </summary>
        <returns>
          <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The argument <paramref name="services" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHttpTraceEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddHttpTraceEnricher&lt;T&gt; (this OpenTelemetry.Trace.TracerProviderBuilder builder) where T : class, Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddHttpTraceEnricher&lt;class (class Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher) T&gt;(class OpenTelemetry.Trace.TracerProviderBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher``1(OpenTelemetry.Trace.TracerProviderBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTraceEnricher(Of T As {Class, IHttpTraceEnricher}) (builder As TracerProviderBuilder) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddHttpTraceEnricher : OpenTelemetry.Trace.TracerProviderBuilder -&gt; OpenTelemetry.Trace.TracerProviderBuilder (requires 'T : null and 'T :&gt; Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher)" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTraceEnricher builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.AspNetCore.Telemetry.IHttpTraceEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Enricher object type.</typeparam>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add this enricher.</param>
        <summary>
            Adds an enricher that enriches only incoming HTTP requests traces.
            </summary>
        <returns>
          <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> for chaining.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpTracing">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddHttpTracing (this OpenTelemetry.Trace.TracerProviderBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddHttpTracing(class OpenTelemetry.Trace.TracerProviderBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTracing(OpenTelemetry.Trace.TracerProviderBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTracing (builder As TracerProviderBuilder) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddHttpTracing : OpenTelemetry.Trace.TracerProviderBuilder -&gt; OpenTelemetry.Trace.TracerProviderBuilder" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTracing builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add the tracing auto collector.</param>
        <summary>
            Adds trace auto collector for incoming HTTP requests.
            </summary>
        <returns>The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Any of the arguments is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHttpTracing">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddHttpTracing (this OpenTelemetry.Trace.TracerProviderBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddHttpTracing(class OpenTelemetry.Trace.TracerProviderBuilder builder, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTracing(OpenTelemetry.Trace.TracerProviderBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTracing (builder As TracerProviderBuilder, section As IConfigurationSection) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddHttpTracing : OpenTelemetry.Trace.TracerProviderBuilder * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; OpenTelemetry.Trace.TracerProviderBuilder" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTracing (builder, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.AspNetCore.Telemetry.HttpTracingOptions))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicDependency(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties, typeof(Microsoft.AspNetCore.Telemetry.HttpTracingOptions))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed with [DynamicDependency]")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code", Justification="Addressed with [DynamicDependency]")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add the tracing auto collector.</param>
        <param name="section">Configuration section that contains <see cref="T:Microsoft.AspNetCore.Telemetry.HttpTracingOptions" />.</param>
        <summary>
            Adds trace auto collector for incoming HTTP requests.
            </summary>
        <returns>The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Any of the arguments is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHttpTracing">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Trace.TracerProviderBuilder AddHttpTracing (this OpenTelemetry.Trace.TracerProviderBuilder builder, Action&lt;Microsoft.AspNetCore.Telemetry.HttpTracingOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Trace.TracerProviderBuilder AddHttpTracing(class OpenTelemetry.Trace.TracerProviderBuilder builder, class System.Action`1&lt;class Microsoft.AspNetCore.Telemetry.HttpTracingOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTracing(OpenTelemetry.Trace.TracerProviderBuilder,System.Action{Microsoft.AspNetCore.Telemetry.HttpTracingOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpTracing (builder As TracerProviderBuilder, configure As Action(Of HttpTracingOptions)) As TracerProviderBuilder" />
      <MemberSignature Language="F#" Value="static member AddHttpTracing : OpenTelemetry.Trace.TracerProviderBuilder * Action&lt;Microsoft.AspNetCore.Telemetry.HttpTracingOptions&gt; -&gt; OpenTelemetry.Trace.TracerProviderBuilder" Usage="Microsoft.AspNetCore.Telemetry.HttpTracingExtensions.AddHttpTracing (builder, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Trace.TracerProviderBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="OpenTelemetry.Trace.TracerProviderBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Telemetry.HttpTracingOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> to add the tracing auto collector.</param>
        <param name="configure">The <see cref="T:Microsoft.AspNetCore.Telemetry.HttpTracingOptions" /> configuration delegate.</param>
        <summary>
            Adds trace auto collector for incoming HTTP requests.
            </summary>
        <returns>The <see cref="T:OpenTelemetry.Trace.TracerProviderBuilder" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Any of the arguments is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
