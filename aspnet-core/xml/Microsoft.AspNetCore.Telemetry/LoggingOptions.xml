<Type Name="LoggingOptions" FullName="Microsoft.AspNetCore.Telemetry.LoggingOptions">
  <TypeSignature Language="C#" Value="public class LoggingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Telemetry.LoggingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggingOptions" />
  <TypeSignature Language="F#" Value="type LoggingOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Top-level model for formatting incoming HTTP requests and their corresponding responses.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Telemetry.LoggingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodySizeLimit">
      <MemberSignature Language="C#" Value="public int BodySizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodySizeLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.BodySizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property BodySizeLimit As Integer" />
      <MemberSignature Language="F#" Value="member this.BodySizeLimit : int with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.BodySizeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(1, 1572864)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(1, 1572864)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of bytes of the request/response body to be read.
            </summary>
        <value>
            The default is â‰ˆ 32K.
            </value>
        <remarks>
            The number should ideally be below 85000 bytes to not be allocated on the <see href="https://learn.microsoft.com/dotnet/standard/garbage-collection/large-object-heap">large object heap</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludePathStartsWith">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; ExcludePathStartsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; ExcludePathStartsWith" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.ExcludePathStartsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property ExcludePathStartsWith As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.ExcludePathStartsWith : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.ExcludePathStartsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of HTTP paths that should be excluded from logging.
            </summary>
        <value>
            The default value is an empty <see cref="T:System.Collections.Generic.HashSet`1" />.
            </value>
        <remarks>
            Any path added to the set will not be logged.
            Paths are case insensitive.
            </remarks>
        <example>
            A typical set of HTTP paths would be:
            <code>
            ExcludePathStartsWith = new HashSet&lt;string&gt;
            {
                "/probe/live",
                "/probe/ready"
            };
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="LogBody">
      <MemberSignature Language="C#" Value="public bool LogBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogBody" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.LogBody" />
      <MemberSignature Language="VB.NET" Value="Public Property LogBody As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogBody : bool with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.LogBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether HTTP request and response body will be logged.
            </summary>
        <value>
            The default value is <see langword="false" />.
            </value>
        <remarks>
            Avoid enabling this option in a production environment as it might lead to leaking privacy information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequestStart">
      <MemberSignature Language="C#" Value="public bool LogRequestStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogRequestStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.LogRequestStart" />
      <MemberSignature Language="VB.NET" Value="Public Property LogRequestStart As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogRequestStart : bool with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.LogRequestStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the request is logged additionally before any further processing.
            </summary>
        <value>
            The default value is <see langword="false" />.
            </value>
        <remarks>
            When enabled, two entries will be logged for each incoming request. Note, that the first log record won't be enriched.
            When disabled, only one entry will be logged for each incoming request (with corresponding response's data).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestBodyContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; RequestBodyContentTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; RequestBodyContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestBodyContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestBodyContentTypes As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.RequestBodyContentTypes : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestBodyContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of request body content types which are considered text and thus possible to log.
            </summary>
        <value>
            The default value is an empty <see cref="T:System.Collections.Generic.HashSet`1" />, which means that the request's body isn't logged.
            </value>
        <remarks>
            Don't enable body logging in a production environment, as it might impact
            performance and leak sensitive data.
            If you need to log body in production, go through compliance and security.
            </remarks>
        <example>
            A typical set of known text content-types like json, xml or text would be:
            <code>
            RequestBodyContentTypesToLog = new HashSet&lt;string&gt;
            {
                "application/*+json",
                "application/*+xml",
                "application/json",
                "application/xml",
                "text/*"
            };
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="RequestBodyReadTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan RequestBodyReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestBodyReadTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestBodyReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestBodyReadTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RequestBodyReadTimeout : TimeSpan with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestBodyReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a maximum amount of time to wait for the request body to be read.
            </summary>
        <value>
            The default value is 1 second.
            </value>
        <remarks>
            The value should be in the range of 1 millisecond to 1 minute.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeadersDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RequestHeadersDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RequestHeadersDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestHeadersDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestHeadersDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.RequestHeadersDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestHeadersDataClasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a map between request headers to be logged and their data classification.
            </summary>
        <value>
            The default value is an empty dictionary, which means that no request header is logged by default.
            </value>
        <remarks>
            Default set to an empty dictionary.
            That means that no request header will be logged by default.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPathLoggingMode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode RequestPathLoggingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode RequestPathLoggingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathLoggingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathLoggingMode As IncomingPathLoggingMode" />
      <MemberSignature Language="F#" Value="member this.RequestPathLoggingMode : Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathLoggingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a strategy how request path should be logged.
            </summary>
        <value>
            The default value is <see cref="F:Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode.Formatted" />.
            </value>
        <remarks>
            Make sure you add redactors to ensure that sensitive information doesn't find its way into your log records.
            This option only applies when the <see cref="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathParameterRedactionMode" />
            option is not set to <see cref="F:Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode.None" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPathParameterRedactionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathParameterRedactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathParameterRedactionMode As HttpRouteParameterRedactionMode" />
      <MemberSignature Language="F#" Value="member this.RequestPathParameterRedactionMode : Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathParameterRedactionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating how request path parameter should be redacted.
            </summary>
        <value>
            The default value is <see cref="F:Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode.Strict" />.
            </value>
        <remarks>
            Default set to <see cref="F:Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode.Strict" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseBodyContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; ResponseBodyContentTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; ResponseBodyContentTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.ResponseBodyContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseBodyContentTypes As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.ResponseBodyContentTypes : System.Collections.Generic.ISet&lt;string&gt; with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.ResponseBodyContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of response body content types which are considered text and thus possible to log.
            </summary>
        <value>
            The default value is an empty <see cref="T:System.Collections.Generic.HashSet`1" />, which means that the response's body isn't logged.
            </value>
        <remarks>
            Don't enable body logging in a production environment, as it might impact performance and leak sensitive data.
            If you need to log body in production, go through compliance and security.
            </remarks>
        <example>
            A typical set of known text content-types like json, xml or text would be:
            <code>
            ResponseBodyContentTypesToLog = new HashSet&lt;string&gt;
            {
                "application/*+json",
                "application/*+xml",
                "application/json",
                "application/xml",
                "text/*"
            };
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeadersDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; ResponseHeadersDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; ResponseHeadersDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.ResponseHeadersDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseHeadersDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.ResponseHeadersDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.ResponseHeadersDataClasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a map between response headers to be logged and their data classification.
            </summary>
        <value>
            The default value is an empty dictionary, which means that no response header is logged by default.
            </value>
        <remarks>
            Default set to an empty dictionary.
            That means that no response header will be logged by default.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteParameterDataClasses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RouteParameterDataClasses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype Microsoft.Extensions.Compliance.Classification.DataClassification&gt; RouteParameterDataClasses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Telemetry.LoggingOptions.RouteParameterDataClasses" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteParameterDataClasses As IDictionary(Of String, DataClassification)" />
      <MemberSignature Language="F#" Value="member this.RouteParameterDataClasses : System.Collections.Generic.IDictionary&lt;string, Microsoft.Extensions.Compliance.Classification.DataClassification&gt; with get, set" Usage="Microsoft.AspNetCore.Telemetry.LoggingOptions.RouteParameterDataClasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Telemetry.Middleware</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Required&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Extensions.Compliance.Classification.DataClassification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a map between HTTP path parameters and their data classification.
            </summary>
        <value>
            The default value is an empty dictionary.
            </value>
        <remarks>
            If a parameter within a controller's action is not annotated with a data classification attribute and
            it's not found in this map, it will be redacted as if it was <see cref="P:Microsoft.Extensions.Compliance.Classification.DataClassification.Unknown" />.
            If you don't want a parameter to be redacted, mark it as <see cref="P:Microsoft.Extensions.Compliance.Classification.DataClassification.None" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
