<Type Name="HubLifetimeManager&lt;THub&gt;" FullName="Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub&gt;&#xA; where THub : Hubpublic ref class HubLifetimeManager abstract" />
  <TypeSignature Language="C#" Value="public abstract class HubLifetimeManager&lt;THub&gt; where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HubLifetimeManager`1&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HubLifetimeManager(Of THub)" />
  <TypeSignature Language="F#" Value="type HubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Hub)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <summary>
            A lifetime manager abstraction for <see cref="T:Microsoft.AspNetCore.SignalR.Hub" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HubLifetimeManager();" />
      <MemberSignature Language="C#" Value="protected HubLifetimeManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToGroupAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task AddToGroupAsync (string connectionId, string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddToGroupAsync(string connectionId, string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.AddToGroupAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddToGroupAsync (connectionId As String, groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member AddToGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.AddToGroupAsync (connectionId, groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionId">The connection ID to add to a group.</param>
        <param name="groupName">The group name.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Adds a connection to the specified group.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous add.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeConnectionAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;T&gt; InvokeConnectionAsync&lt;T&gt; (string connectionId, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; InvokeConnectionAsync&lt;T&gt;(string connectionId, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.InvokeConnectionAsync``1(System.String,System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeConnectionAsync(Of T) (connectionId As String, methodName As String, args As Object(), cancellationToken As CancellationToken) As Task(Of T)" />
      <MemberSignature Language="F#" Value="abstract member InvokeConnectionAsync : string * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;&#xA;override this.InvokeConnectionAsync : string * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="hubLifetimeManager.InvokeConnectionAsync (connectionId, methodName, args, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="args" Type="System.Object[]" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the response expected.</typeparam>
        <param name="connectionId">The connection ID.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. It is recommended to set a max wait for expecting a result.</param>
        <summary>
            Sends an invocation message to the specified connection and waits for a response.
            </summary>
        <returns>The response from the connection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectedAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ OnConnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection);" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task OnConnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnConnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.OnConnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OnConnectedAsync (connection As HubConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnConnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.OnConnectedAsync connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <summary>
            Called when a connection is started.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous connect.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisconnectedAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ OnDisconnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection);" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task OnDisconnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnDisconnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.OnDisconnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OnDisconnectedAsync (connection As HubConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnDisconnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.OnDisconnectedAsync connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <summary>
            Called when a connection is finished.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous disconnect.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromGroupAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task RemoveFromGroupAsync (string connectionId, string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFromGroupAsync(string connectionId, string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.RemoveFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RemoveFromGroupAsync (connectionId As String, groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.RemoveFromGroupAsync (connectionId, groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionId">The connection ID to remove from a group.</param>
        <param name="groupName">The group name.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Removes a connection from the specified group.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous remove.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAllAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAllAsync (string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAllAsync(string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendAllAsync(System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendAllAsync (methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendAllAsync : string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendAllAsync (methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAllAsync (string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAllAsync (string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to all hub connections.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAllExceptAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAllExceptAsync (string methodName, object[] args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedConnectionIds, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAllExceptAsync(string methodName, object[] args, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; excludedConnectionIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendAllExceptAsync(System.String,System.Object[],System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendAllExceptAsync (methodName As String, args As Object(), excludedConnectionIds As IReadOnlyList(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendAllExceptAsync : string * obj[] * System.Collections.Generic.IReadOnlyList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendAllExceptAsync (methodName, args, excludedConnectionIds, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAllExceptAsync (string methodName, object?[]? args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedConnectionIds, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAllExceptAsync (string methodName, object?[] args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedConnectionIds, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="excludedConnectionIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="excludedConnectionIds">A collection of connection IDs to exclude.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to all hub connections excluding the specified connections.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendConnectionAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendConnectionAsync (string connectionId, string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendConnectionAsync(string connectionId, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendConnectionAsync(System.String,System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendConnectionAsync (connectionId As String, methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendConnectionAsync : string * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendConnectionAsync (connectionId, methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendConnectionAsync (string connectionId, string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendConnectionAsync (string connectionId, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionId">The connection ID.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified connection.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendConnectionsAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendConnectionsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; connectionIds, string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendConnectionsAsync(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; connectionIds, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendConnectionsAsync(System.Collections.Generic.IReadOnlyList{System.String},System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendConnectionsAsync (connectionIds As IReadOnlyList(Of String), methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendConnectionsAsync : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendConnectionsAsync (connectionIds, methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendConnectionsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; connectionIds, string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendConnectionsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; connectionIds, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionIds">The connection IDs.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified connections.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGroupAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupAsync (string groupName, string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendGroupAsync(string groupName, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendGroupAsync(System.String,System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendGroupAsync (groupName As String, methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendGroupAsync : string * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendGroupAsync (groupName, methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupAsync (string groupName, string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupAsync (string groupName, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName">The group name.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified group.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGroupExceptAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupExceptAsync (string groupName, string methodName, object[] args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedConnectionIds, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendGroupExceptAsync(string groupName, string methodName, object[] args, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; excludedConnectionIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendGroupExceptAsync(System.String,System.String,System.Object[],System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendGroupExceptAsync (groupName As String, methodName As String, args As Object(), excludedConnectionIds As IReadOnlyList(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendGroupExceptAsync : string * string * obj[] * System.Collections.Generic.IReadOnlyList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendGroupExceptAsync (groupName, methodName, args, excludedConnectionIds, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupExceptAsync (string groupName, string methodName, object?[]? args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedConnectionIds, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupExceptAsync (string groupName, string methodName, object?[] args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedConnectionIds, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="excludedConnectionIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName">The group name.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="excludedConnectionIds">A collection of connection IDs to exclude.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified group excluding the specified connections.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGroupsAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; groupNames, string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendGroupsAsync(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; groupNames, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendGroupsAsync(System.Collections.Generic.IReadOnlyList{System.String},System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendGroupsAsync (groupNames As IReadOnlyList(Of String), methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendGroupsAsync : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendGroupsAsync (groupNames, methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; groupNames, string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendGroupsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; groupNames, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupNames">The group names.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified groups.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUserAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendUserAsync (string userId, string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendUserAsync(string userId, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendUserAsync(System.String,System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendUserAsync (userId As String, methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendUserAsync : string * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendUserAsync (userId, methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendUserAsync (string userId, string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendUserAsync (string userId, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">The user ID.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified user.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUsersAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendUsersAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; userIds, string methodName, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendUsersAsync(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; userIds, string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SendUsersAsync(System.Collections.Generic.IReadOnlyList{System.String},System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendUsersAsync (userIds As IReadOnlyList(Of String), methodName As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendUsersAsync : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SendUsersAsync (userIds, methodName, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendUsersAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; userIds, string methodName, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendUsersAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; userIds, string methodName, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userIds">The user IDs.</param>
        <param name="methodName">The invocation method name.</param>
        <param name="args">The invocation arguments.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Sends an invocation message to the specified users.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous send.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConnectionResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetConnectionResultAsync (string connectionId, Microsoft.AspNetCore.SignalR.Protocol.CompletionMessage result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetConnectionResultAsync(string connectionId, class Microsoft.AspNetCore.SignalR.Protocol.CompletionMessage result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.SetConnectionResultAsync(System.String,Microsoft.AspNetCore.SignalR.Protocol.CompletionMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConnectionResultAsync (connectionId As String, result As CompletionMessage) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetConnectionResultAsync : string * Microsoft.AspNetCore.SignalR.Protocol.CompletionMessage -&gt; System.Threading.Tasks.Task&#xA;override this.SetConnectionResultAsync : string * Microsoft.AspNetCore.SignalR.Protocol.CompletionMessage -&gt; System.Threading.Tasks.Task" Usage="hubLifetimeManager.SetConnectionResultAsync (connectionId, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="result" Type="Microsoft.AspNetCore.SignalR.Protocol.CompletionMessage" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connectionId">The connection ID.</param>
        <param name="result">The result from the connection.</param>
        <summary>
            Sets the connection result for an in progress <see cref="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.InvokeConnectionAsync``1(System.String,System.String,System.Object[],System.Threading.CancellationToken)" /> call.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the result being set or being forwarded to another server.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetReturnType">
      <MemberSignature Language="C#" Value="public virtual bool TryGetReturnType (string invocationId, out Type? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetReturnType(string invocationId, [out] class System.Type&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.TryGetReturnType(System.String,System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetReturnType (invocationId As String, ByRef type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetReturnType : string * Type -&gt; bool&#xA;override this.TryGetReturnType : string * Type -&gt; bool" Usage="hubLifetimeManager.TryGetReturnType (invocationId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="type" Type="System.Type" RefType="out" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="invocationId">The ID of the in progress invocation.</param>
        <param name="type">The type the connection is expected to send. Or <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.RawResult" /> if the result is intended for another server.</param>
        <summary>
            Tells <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.IHubProtocol" /> implementations what the expected type from a connection result is.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
