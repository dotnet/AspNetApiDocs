<Type Name="IHubFilter" FullName="Microsoft.AspNetCore.SignalR.IHubFilter">
  <TypeSignature Language="C++ CLI" Value="public interface class IHubFilter" />
  <TypeSignature Language="C#" Value="public interface IHubFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHubFilter" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.IHubFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHubFilter" />
  <TypeSignature Language="F#" Value="type IHubFilter = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHubFilter" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The filter abstraction for hub method invocations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InvokeMethodAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask&lt;System::Object ^&gt; InvokeMethodAsync(Microsoft::AspNetCore::SignalR::HubInvocationContext ^ invocationContext, Func&lt;Microsoft::AspNetCore::SignalR::HubInvocationContext ^, System::Threading::Tasks::ValueTask&lt;System::Object ^&gt;&gt; ^ next);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;object?&gt; InvokeMethodAsync (Microsoft.AspNetCore.SignalR.HubInvocationContext invocationContext, Func&lt;Microsoft.AspNetCore.SignalR.HubInvocationContext,System.Threading.Tasks.ValueTask&lt;object?&gt;&gt; next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; InvokeMethodAsync(class Microsoft.AspNetCore.SignalR.HubInvocationContext invocationContext, class System.Func`2&lt;class Microsoft.AspNetCore.SignalR.HubInvocationContext, valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt;&gt; next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.IHubFilter.InvokeMethodAsync(Microsoft.AspNetCore.SignalR.HubInvocationContext,System.Func{Microsoft.AspNetCore.SignalR.HubInvocationContext,System.Threading.Tasks.ValueTask{System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeMethodAsync (invocationContext As HubInvocationContext, next As Func(Of HubInvocationContext, ValueTask(Of Object))) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member InvokeMethodAsync : Microsoft.AspNetCore.SignalR.HubInvocationContext * Func&lt;Microsoft.AspNetCore.SignalR.HubInvocationContext, System.Threading.Tasks.ValueTask&lt;obj&gt;&gt; -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;&#xA;override this.InvokeMethodAsync : Microsoft.AspNetCore.SignalR.HubInvocationContext * Func&lt;Microsoft.AspNetCore.SignalR.HubInvocationContext, System.Threading.Tasks.ValueTask&lt;obj&gt;&gt; -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="iHubFilter.InvokeMethodAsync (invocationContext, next)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationContext" Type="Microsoft.AspNetCore.SignalR.HubInvocationContext" />
        <Parameter Name="next" Type="System.Func&lt;Microsoft.AspNetCore.SignalR.HubInvocationContext,System.Threading.Tasks.ValueTask&lt;System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="invocationContext">The context for the method invocation that holds all the important information about the invoke.</param>
        <param name="next">The next filter to run, and for the final one, the Hub invocation.</param>
        <summary>
            Allows handling of all Hub method invocations.
            </summary>
        <returns>Returns the result of the Hub method invoke.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectedAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OnConnectedAsync(Microsoft::AspNetCore::SignalR::HubLifetimeContext ^ context, Func&lt;Microsoft::AspNetCore::SignalR::HubLifetimeContext ^, System::Threading::Tasks::Task ^&gt; ^ next);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnConnectedAsync (Microsoft.AspNetCore.SignalR.HubLifetimeContext context, Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Threading.Tasks.Task&gt; next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnConnectedAsync(class Microsoft.AspNetCore.SignalR.HubLifetimeContext context, class System.Func`2&lt;class Microsoft.AspNetCore.SignalR.HubLifetimeContext, class System.Threading.Tasks.Task&gt; next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.IHubFilter.OnConnectedAsync(Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Func{Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnConnectedAsync (context As HubLifetimeContext, next As Func(Of HubLifetimeContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnConnectedAsync : Microsoft.AspNetCore.SignalR.HubLifetimeContext * Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.OnConnectedAsync : Microsoft.AspNetCore.SignalR.HubLifetimeContext * Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="iHubFilter.OnConnectedAsync (context, next)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.SignalR.HubLifetimeContext" />
        <Parameter Name="next" Type="System.Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The context for OnConnectedAsync.</param>
        <param name="next">The next filter to run, and for the final one, the Hub invocation.</param>
        <summary>
            Allows handling of the <see cref="M:Microsoft.AspNetCore.SignalR.Hub.OnConnectedAsync" /> method.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisconnectedAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OnDisconnectedAsync(Microsoft::AspNetCore::SignalR::HubLifetimeContext ^ context, Exception ^ exception, Func&lt;Microsoft::AspNetCore::SignalR::HubLifetimeContext ^, Exception ^, System::Threading::Tasks::Task ^&gt; ^ next);" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnDisconnectedAsync (Microsoft.AspNetCore.SignalR.HubLifetimeContext context, Exception? exception, Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext,Exception?,System.Threading.Tasks.Task&gt; next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnDisconnectedAsync(class Microsoft.AspNetCore.SignalR.HubLifetimeContext context, class System.Exception exception, class System.Func`3&lt;class Microsoft.AspNetCore.SignalR.HubLifetimeContext, class System.Exception, class System.Threading.Tasks.Task&gt; next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.IHubFilter.OnDisconnectedAsync(Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Exception,System.Func{Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Exception,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnDisconnectedAsync (context As HubLifetimeContext, exception As Exception, next As Func(Of HubLifetimeContext, Exception, Task)) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnDisconnectedAsync : Microsoft.AspNetCore.SignalR.HubLifetimeContext * Exception * Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext, Exception, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.OnDisconnectedAsync : Microsoft.AspNetCore.SignalR.HubLifetimeContext * Exception * Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext, Exception, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="iHubFilter.OnDisconnectedAsync (context, exception, next)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.SignalR.HubLifetimeContext" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="next" Type="System.Func&lt;Microsoft.AspNetCore.SignalR.HubLifetimeContext,System.Exception,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The context for OnDisconnectedAsync.</param>
        <param name="exception">The exception, if any, for the connection closing.</param>
        <param name="next">The next filter to run, and for the final one, the Hub invocation.</param>
        <summary>
            Allows handling of the <see cref="M:Microsoft.AspNetCore.SignalR.Hub.OnDisconnectedAsync(System.Exception)" /> method.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
