<Type Name="IClientProxy" FullName="Microsoft.AspNetCore.SignalR.IClientProxy">
  <TypeSignature Language="C++ CLI" Value="public interface class IClientProxy" />
  <TypeSignature Language="C#" Value="public interface IClientProxy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientProxy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.IClientProxy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientProxy" />
  <TypeSignature Language="F#" Value="type IClientProxy = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A proxy abstraction for invoking hub methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SendCoreAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendCoreAsync (string method, object[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendCoreAsync(string method, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.IClientProxy.SendCoreAsync(System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendCoreAsync (method As String, args As Object(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendCoreAsync : string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iClientProxy.SendCoreAsync (method, args, cancellationToken)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendCoreAsync (string method, object?[]? args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendCoreAsync (string method, object?[] args, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="method">Name of the method to invoke.</param>
        <param name="args">A collection of arguments to pass to the client.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>
            Invokes a method on the connection(s) represented by the <see cref="T:Microsoft.AspNetCore.SignalR.IClientProxy" /> instance.
            Does not wait for a response from the receiver.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous invoke.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
