<Type Name="IServer" FullName="Microsoft.AspNetCore.Hosting.Server.IServer">
  <TypeSignature Language="C++ CLI" Value="public interface class IServer : IDisposable" />
  <TypeSignature Language="C#" Value="public interface IServer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServer implements class System.IDisposable" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Hosting.Server.IServer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServer&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type IServer = interface&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IServer implements class System.IDisposable" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Hosting.Server.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a server.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Features">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ Features { Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.Features.IFeatureCollection Features { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.Features.IFeatureCollection Features" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Hosting.Server.IServer.Features" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Features As IFeatureCollection" />
      <MemberSignature Language="F#" Value="member this.Features : Microsoft.AspNetCore.Http.Features.IFeatureCollection" Usage="Microsoft.AspNetCore.Hosting.Server.IServer.Features" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting.Server.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.Features.IFeatureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of HTTP features of the server.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start&lt;TContext&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContext&gt;&#xA; void Start(Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;TContext&gt; ^ application);" />
      <MemberSignature Language="C#" Value="public void Start&lt;TContext&gt; (Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt; application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start&lt;TContext&gt;(class Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1&lt;!!TContext&gt; application) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start(Of TContext) (application As IHttpApplication(Of TContext))" />
      <MemberSignature Language="F#" Value="abstract member Start : Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;'Context&gt; -&gt; unit" Usage="iServer.Start application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting.Server.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="application" Type="Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt;" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The context associated with the application.</typeparam>
        <param name="application">An instance of <see cref="T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1" />.</param>
        <summary>
            Start the server with an application.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync&lt;TContext&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContext&gt;&#xA; System::Threading::Tasks::Task ^ StartAsync(Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;TContext&gt; ^ application, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync&lt;TContext&gt; (Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt; application, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StartAsync&lt;TContext&gt;(class Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1&lt;!!TContext&gt; application, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Server.IServer.StartAsync``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync(Of TContext) (application As IHttpApplication(Of TContext), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;'Context&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iServer.StartAsync (application, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting.Server.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="application" Type="Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt;" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The context associated with the application.</typeparam>
        <param name="application">An instance of <see cref="T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1" />.</param>
        <param name="cancellationToken">Indicates if the server startup should be aborted.</param>
        <summary>
            Start the server with an application.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StopAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Server.IServer.StopAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StopAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iServer.StopAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting.Server.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Indicates if the graceful shutdown should be aborted.</param>
        <summary>
            Stop processing requests and shut down the server, gracefully if possible.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
