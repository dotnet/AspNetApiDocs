<Type Name="HttpContentExtensions" FullName="System.Net.Http.HttpContentExtensions">
  <TypeSignature Language="C#" Value="public static class HttpContentExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpContentExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpContentExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpContentExtensions" />
  <TypeSignature Language="F#" Value="type HttpContentExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods to allow strongly typed objects to be read from <see cref="T:System.Net.Http.HttpContent" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReadAsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ReadAsAsync (this System.Net.Http.HttpContent content, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ReadAsAsync(class System.Net.Http.HttpContent content, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync (content As HttpContent, type As Type) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="type">The type of the object to read.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified <paramref name="type" />
            from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>This override use the built-in collection of formatters.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ReadAsAsync (this System.Net.Http.HttpContent content, Type type, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ReadAsAsync(class System.Net.Http.HttpContent content, class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync (content As HttpContent, type As Type, formatters As IEnumerable(Of MediaTypeFormatter)) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * Type * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, type, formatters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
      </Parameters>
      <Docs>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="type">The type of the object to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified <paramref name="type" />
            from the <paramref name="content" /> instance using one of the provided <paramref name="formatters" />
            to deserialize the content.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ReadAsAsync (this System.Net.Http.HttpContent content, Type type, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ReadAsAsync(class System.Net.Http.HttpContent content, class System.Type type, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync (content As HttpContent, type As Type, cancellationToken As CancellationToken) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * Type * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, type, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="type">The type of the object to read.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified <paramref name="type" />
            from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>This override use the built-in collection of formatters.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ReadAsAsync (this System.Net.Http.HttpContent content, Type type, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ReadAsAsync(class System.Net.Http.HttpContent content, class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync (content As HttpContent, type As Type, formatters As IEnumerable(Of MediaTypeFormatter), formatterLogger As IFormatterLogger) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * Type * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; * System.Net.Http.Formatting.IFormatterLogger -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, type, formatters, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="type">The type of the object to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified <paramref name="type" />
            from the <paramref name="content" /> instance using one of the provided <paramref name="formatters" />
            to deserialize the content.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ReadAsAsync (this System.Net.Http.HttpContent content, Type type, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ReadAsAsync(class System.Net.Http.HttpContent content, class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync (content As HttpContent, type As Type, formatters As IEnumerable(Of MediaTypeFormatter), cancellationToken As CancellationToken) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * Type * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, type, formatters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="type">The type of the object to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified <paramref name="type" />
            from the <paramref name="content" /> instance using one of the provided <paramref name="formatters" />
            to deserialize the content.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ReadAsAsync (this System.Net.Http.HttpContent content, Type type, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, System.Net.Http.Formatting.IFormatterLogger formatterLogger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ReadAsAsync(class System.Net.Http.HttpContent content, class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, class System.Net.Http.Formatting.IFormatterLogger formatterLogger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync (content As HttpContent, type As Type, formatters As IEnumerable(Of MediaTypeFormatter), formatterLogger As IFormatterLogger, cancellationToken As CancellationToken) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * Type * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; * System.Net.Http.Formatting.IFormatterLogger * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, type, formatters, formatterLogger, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="type">The type of the object to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified <paramref name="type" />
            from the <paramref name="content" /> instance using one of the provided <paramref name="formatters" />
            to deserialize the content.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ReadAsAsync&lt;T&gt; (this System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadAsAsync&lt;T&gt;(class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync(Of T) (content As HttpContent) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the object to read.</typeparam>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified
            type <typeparamref name="T" /> from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>This override use the built-in collection of formatters.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ReadAsAsync&lt;T&gt; (this System.Net.Http.HttpContent content, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadAsAsync&lt;T&gt;(class System.Net.Http.HttpContent content, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync(Of T) (content As HttpContent, formatters As IEnumerable(Of MediaTypeFormatter)) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, formatters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the object to read.</typeparam>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified
            type <typeparamref name="T" /> from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ReadAsAsync&lt;T&gt; (this System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadAsAsync&lt;T&gt;(class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync(Of T) (content As HttpContent, cancellationToken As CancellationToken) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the object to read.</typeparam>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified
            type <typeparamref name="T" /> from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>This override use the built-in collection of formatters.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ReadAsAsync&lt;T&gt; (this System.Net.Http.HttpContent content, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadAsAsync&lt;T&gt;(class System.Net.Http.HttpContent content, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync(Of T) (content As HttpContent, formatters As IEnumerable(Of MediaTypeFormatter), formatterLogger As IFormatterLogger) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; * System.Net.Http.Formatting.IFormatterLogger -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, formatters, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the object to read.</typeparam>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified
            type <typeparamref name="T" /> from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ReadAsAsync&lt;T&gt; (this System.Net.Http.HttpContent content, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadAsAsync&lt;T&gt;(class System.Net.Http.HttpContent content, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync(Of T) (content As HttpContent, formatters As IEnumerable(Of MediaTypeFormatter), cancellationToken As CancellationToken) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, formatters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the object to read.</typeparam>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified
            type <typeparamref name="T" /> from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ReadAsAsync&lt;T&gt; (this System.Net.Http.HttpContent content, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, System.Net.Http.Formatting.IFormatterLogger formatterLogger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadAsAsync&lt;T&gt;(class System.Net.Http.HttpContent content, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters, class System.Net.Http.Formatting.IFormatterLogger formatterLogger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadAsAsync(Of T) (content As HttpContent, formatters As IEnumerable(Of MediaTypeFormatter), formatterLogger As IFormatterLogger, cancellationToken As CancellationToken) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member ReadAsAsync : System.Net.Http.HttpContent * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; * System.Net.Http.Formatting.IFormatterLogger * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Net.Http.HttpContentExtensions.ReadAsAsync (content, formatters, formatterLogger, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" RefType="this" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the object to read.</typeparam>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> instance from which to read.</param>
        <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> that will yield an object of the specified
            type <typeparamref name="T" /> from the <paramref name="content" /> instance.
            </summary>
        <returns>A task object representing reading the content as an object of the specified type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
