<Type Name="MultipartStreamProvider" FullName="System.Net.Http.MultipartStreamProvider">
  <TypeSignature Language="C#" Value="public abstract class MultipartStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MultipartStreamProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.MultipartStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MultipartStreamProvider" />
  <TypeSignature Language="F#" Value="type MultipartStreamProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An <see cref="T:System.Net.Http.MultipartStreamProvider" /> implementation examines the headers provided by the MIME multipart parser
            as part of the MIME multipart extension methods (see <see cref="T:System.Net.Http.HttpContentMultipartExtensions" />) and decides 
            what kind of stream to return for the body part to be written to.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultipartStreamProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartStreamProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.MultipartStreamProvider" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Net.Http.HttpContent&gt; Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Net.Http.HttpContent&gt; Contents" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.MultipartStreamProvider.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As Collection(Of HttpContent)" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Collections.ObjectModel.Collection&lt;System.Net.Http.HttpContent&gt;" Usage="System.Net.Http.MultipartStreamProvider.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Net.Http.HttpContent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collection of <see cref="T:System.Net.Http.HttpContent" /> instances where each instance represents a MIME body part.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutePostProcessingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ExecutePostProcessingAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecutePostProcessingAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartStreamProvider.ExecutePostProcessingAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecutePostProcessingAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member ExecutePostProcessingAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ExecutePostProcessingAsync : unit -&gt; System.Threading.Tasks.Task" Usage="multipartStreamProvider.ExecutePostProcessingAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Immediately upon reading the last MIME body part but before completing the read task, this method is 
            called to enable the <see cref="T:System.Net.Http.MultipartStreamProvider" /> to do any post processing on the <see cref="T:System.Net.Http.HttpContent" />
            instances that have been read. For example, it can be used to copy the data to another location, or perform
            some other kind of post processing on the data before completing the read operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the post processing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutePostProcessingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ExecutePostProcessingAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecutePostProcessingAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecutePostProcessingAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ExecutePostProcessingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ExecutePostProcessingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="multipartStreamProvider.ExecutePostProcessingAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Immediately upon reading the last MIME body part but before completing the read task, this method is 
            called to enable the <see cref="T:System.Net.Http.MultipartStreamProvider" /> to do any post processing on the <see cref="T:System.Net.Http.HttpContent" />
            instances that have been read. For example, it can be used to copy the data to another location, or perform
            some other kind of post processing on the data before completing the read operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the post processing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream GetStream (System.Net.Http.HttpContent parent, System.Net.Http.Headers.HttpContentHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(class System.Net.Http.HttpContent parent, class System.Net.Http.Headers.HttpContentHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStream (parent As HttpContent, headers As HttpContentHeaders) As Stream" />
      <MemberSignature Language="F#" Value="abstract member GetStream : System.Net.Http.HttpContent * System.Net.Http.Headers.HttpContentHeaders -&gt; System.IO.Stream" Usage="multipartStreamProvider.GetStream (parent, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Net.Http.HttpContent" />
        <Parameter Name="headers" Type="System.Net.Http.Headers.HttpContentHeaders" />
      </Parameters>
      <Docs>
        <param name="parent">The parent <see cref="T:System.Net.Http.HttpContent" /> MIME multipart instance.</param>
        <param name="headers">The header fields describing the body parts content. Looking for header fields such as 
            Content-Type and Content-Disposition can help provide the appropriate stream. In addition to using the information
            in the provided header fields, it is also possible to add new header fields or modify existing header fields. This can
            be useful to get around situations where the Content-type may say <b>application/octet-stream</b> but based on
            analyzing the <b>Content-Disposition</b> header field it is found that the content in fact is <b>application/json</b>, for example.</param>
        <summary>
            When a MIME multipart body part has been parsed this method is called to get a stream for where to write the body part to.
            </summary>
        <returns>A stream instance where the contents of a body part will be written to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
