<Type Name="HttpMessageContent" FullName="System.Net.Http.HttpMessageContent">
  <TypeSignature Language="C#" Value="public class HttpMessageContent : System.Net.Http.HttpContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpMessageContent extends System.Net.Http.HttpContent" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpMessageContent" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpMessageContent&#xA;Inherits HttpContent" />
  <TypeSignature Language="F#" Value="type HttpMessageContent = class&#xA;    inherit HttpContent" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Derived <see cref="T:System.Net.Http.HttpContent" /> class which can encapsulate an <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" />
            or an <see cref="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" /> as an entity with media type "application/http".
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMessageContent (System.Net.Http.HttpRequestMessage httpRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpRequestMessage httpRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageContent.#ctor(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpRequest As HttpRequestMessage)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpMessageContent : System.Net.Http.HttpRequestMessage -&gt; System.Net.Http.HttpMessageContent" Usage="new System.Net.Http.HttpMessageContent httpRequest" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpRequest" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="httpRequest">The <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> instance to encapsulate.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageContent" /> class encapsulating an
            <see cref="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMessageContent (System.Net.Http.HttpResponseMessage httpResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpResponseMessage httpResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageContent.#ctor(System.Net.Http.HttpResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpResponse As HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpMessageContent : System.Net.Http.HttpResponseMessage -&gt; System.Net.Http.HttpMessageContent" Usage="new System.Net.Http.HttpMessageContent httpResponse" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpResponse" Type="System.Net.Http.HttpResponseMessage" />
      </Parameters>
      <Docs>
        <param name="httpResponse">The <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> instance to encapsulate.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageContent" /> class encapsulating an
            <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpMessageContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpRequestMessage">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpRequestMessage HttpRequestMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpRequestMessage HttpRequestMessage" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpRequestMessage As HttpRequestMessage" />
      <MemberSignature Language="F#" Value="member this.HttpRequestMessage : System.Net.Http.HttpRequestMessage" Usage="System.Net.Http.HttpMessageContent.HttpRequestMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpRequestMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HTTP request message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpResponseMessage">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpResponseMessage HttpResponseMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpResponseMessage HttpResponseMessage" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpResponseMessage As HttpResponseMessage" />
      <MemberSignature Language="F#" Value="member this.HttpResponseMessage : System.Net.Http.HttpResponseMessage" Usage="System.Net.Http.HttpMessageContent.HttpResponseMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HTTP response message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="httpMessageContent.SerializeToStreamAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
        <param name="context">The associated <see cref="T:System.Net.TransportContext" />.</param>
        <summary>
            Asynchronously serializes the object's content to the given <paramref name="stream" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance that is asynchronously serializing the object's content.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength : int64 -&gt; bool" Usage="httpMessageContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">The computed length of the stream.</param>
        <summary>
            Computes the length of the stream if possible.
            </summary>
        <returns>
          <c>true</c> if the length has been computed; otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
