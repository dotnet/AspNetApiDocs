<Type Name="IInputFormatterExceptionPolicy" FullName="Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy">
  <TypeSignature Language="C++ CLI" Value="public interface class IInputFormatterExceptionPolicy" />
  <TypeSignature Language="C#" Value="public interface IInputFormatterExceptionPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputFormatterExceptionPolicy" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputFormatterExceptionPolicy" />
  <TypeSignature Language="F#" Value="type IInputFormatterExceptionPolicy = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInputFormatterExceptionPolicy" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A policy which <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter" />s can implement to indicate if they want the body model binder
            to handle all exceptions. By default, all default <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter" />s implement this interface and
            have a default value of <see cref="F:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy.MalformedInputExceptions" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptionPolicy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Formatters::InputFormatterExceptionPolicy ExceptionPolicy { Microsoft::AspNetCore::Mvc::Formatters::InputFormatterExceptionPolicy get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy ExceptionPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy ExceptionPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy.ExceptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionPolicy As InputFormatterExceptionPolicy" />
      <MemberSignature Language="F#" Value="member this.ExceptionPolicy : Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy" Usage="Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy.ExceptionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the flag to indicate if the body model binder should handle all exceptions. If an exception is handled,
            the body model binder converts the exception into model state errors, else the exception is allowed to propagate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
