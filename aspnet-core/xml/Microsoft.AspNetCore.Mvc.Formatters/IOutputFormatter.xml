<Type Name="IOutputFormatter" FullName="Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter">
  <TypeSignature Language="C++ CLI" Value="public interface class IOutputFormatter" />
  <TypeSignature Language="C#" Value="public interface IOutputFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOutputFormatter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputFormatter" />
  <TypeSignature Language="F#" Value="type IOutputFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Writes an object to the output stream.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanWriteResult">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteResult(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterCanWriteContext ^ context);" />
      <MemberSignature Language="C#" Value="public bool CanWriteResult (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteResult(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteResult (context As OutputFormatterCanWriteContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanWriteResult : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext -&gt; bool" Usage="iOutputFormatter.CanWriteResult context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext" />
      </Parameters>
      <Docs>
        <param name="context">The formatter context associated with the call.</param>
        <summary>
            Determines whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" /> can serialize
            an object of the specified type.
            </summary>
        <returns>Returns <c>true</c> if the formatter can write the response; <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterWriteContext ^ context);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (context As OutputFormatterWriteContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext -&gt; System.Threading.Tasks.Task" Usage="iOutputFormatter.WriteAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext" />
      </Parameters>
      <Docs>
        <param name="context">The formatter context associated with the call.</param>
        <summary>
            Writes the object represented by <paramref name="context" />'s Object property.
            </summary>
        <returns>A Task that serializes the value to the <paramref name="context" />'s response message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
