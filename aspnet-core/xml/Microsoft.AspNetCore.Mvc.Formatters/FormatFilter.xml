<Type Name="FormatFilter" FullName="Microsoft.AspNetCore.Mvc.Formatters.FormatFilter">
  <TypeSignature Language="C++ CLI" Value="public ref class FormatFilter : Microsoft::AspNetCore::Mvc::Filters::IResourceFilter, Microsoft::AspNetCore::Mvc::Filters::IResultFilter, Microsoft::AspNetCore::Mvc::Formatters::Internal::IFormatFilter" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatFilter : Microsoft::AspNetCore::Mvc::Filters::IResourceFilter, Microsoft::AspNetCore::Mvc::Filters::IResultFilter" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
  <TypeSignature Language="C#" Value="public class FormatFilter : Microsoft.AspNetCore.Mvc.Filters.IResourceFilter, Microsoft.AspNetCore.Mvc.Filters.IResultFilter, Microsoft.AspNetCore.Mvc.Formatters.Internal.IFormatFilter" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormatFilter extends System.Object implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.Mvc.Filters.IResourceFilter, class Microsoft.AspNetCore.Mvc.Filters.IResultFilter, class Microsoft.AspNetCore.Mvc.Formatters.Internal.IFormatFilter" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatFilter&#xA;Implements IFormatFilter, IResourceFilter, IResultFilter" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
  <TypeSignature Language="F#" Value="type FormatFilter = class&#xA;    interface IFormatFilter&#xA;    interface IFilterMetadata&#xA;    interface IResourceFilter&#xA;    interface IResultFilter" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
  <TypeSignature Language="C#" Value="public class FormatFilter : Microsoft.AspNetCore.Mvc.Filters.IResourceFilter, Microsoft.AspNetCore.Mvc.Filters.IResultFilter" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormatFilter extends System.Object implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.Mvc.Filters.IResourceFilter, class Microsoft.AspNetCore.Mvc.Filters.IResultFilter" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatFilter&#xA;Implements IResourceFilter, IResultFilter" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <TypeSignature Language="F#" Value="type FormatFilter = class&#xA;    interface IFilterMetadata&#xA;    interface IResourceFilter&#xA;    interface IResultFilter" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IResourceFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IResultFilter</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2">
      <InterfaceName>Microsoft.AspNetCore.Mvc.Formatters.Internal.IFormatFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A filter that will use the format value in the route data or query string to set the content type on an
            <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" /> returned from an action.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatFilter(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Mvc::MvcOptions ^&gt; ^ options);" />
      <MemberSignature Language="C#" Value="public FormatFilter (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Mvc.MvcOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of MvcOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.FormatFilter : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt; -&gt; Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" Usage="new Microsoft.AspNetCore.Mvc.Formatters.FormatFilter options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This constructor is obsolete and will be removed in a future version.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constructor is obsolete and will be removed in a future version.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt;" Index="0" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1" /></param>
        <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatFilter(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Mvc::MvcOptions ^&gt; ^ options, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberSignature Language="C#" Value="public FormatFilter (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt; options, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Mvc.MvcOptions&gt; options, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of MvcOptions), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.FormatFilter : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" Usage="new Microsoft.AspNetCore.Mvc.Formatters.FormatFilter (options, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt;" Index="0" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="1" FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1" /></param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFormat(Microsoft::AspNetCore::Mvc::ActionContext ^ context);" />
      <MemberSignature Language="C#" Value="public virtual string GetFormat (Microsoft.AspNetCore.Mvc.ActionContext context);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFormat(class Microsoft.AspNetCore.Mvc.ActionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.GetFormat(Microsoft.AspNetCore.Mvc.ActionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (context As ActionContext) As String" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Microsoft.AspNetCore.Mvc.ActionContext -&gt; string&#xA;override this.GetFormat : Microsoft.AspNetCore.Mvc.ActionContext -&gt; string" Usage="formatFilter.GetFormat context" />
      <MemberSignature Language="C#" Value="public virtual string? GetFormat (Microsoft.AspNetCore.Mvc.ActionContext context);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2">M:Microsoft.AspNetCore.Mvc.Formatters.Internal.IFormatFilter.GetFormat(Microsoft.AspNetCore.Mvc.ActionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecuted">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResourceExecuted(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutedContext ^ context);" />
      <MemberSignature Language="C#" Value="public void OnResourceExecuted (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResourceExecuted(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResourceExecuted (context As ResourceExecutedContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecuted : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext -&gt; unit&#xA;override this.OnResourceExecuted : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext -&gt; unit" Usage="formatFilter.OnResourceExecuted context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecuting">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResourceExecuting(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext ^ context);" />
      <MemberSignature Language="C#" Value="public void OnResourceExecuting (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResourceExecuting(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResourceExecuting (context As ResourceExecutingContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecuting : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext -&gt; unit&#xA;override this.OnResourceExecuting : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext -&gt; unit" Usage="formatFilter.OnResourceExecuting context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext" />.</param>
        <summary>
            As a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter" />, this filter looks at the request and rejects it before going ahead if
            1. The format in the request does not match any format in the map.
            2. If there is a conflicting producesFilter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResultExecuted">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResultExecuted(Microsoft::AspNetCore::Mvc::Filters::ResultExecutedContext ^ context);" />
      <MemberSignature Language="C#" Value="public void OnResultExecuted (Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResultExecuted(class Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResultExecuted (context As ResultExecutedContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResultExecuted : Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext -&gt; unit&#xA;override this.OnResultExecuted : Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext -&gt; unit" Usage="formatFilter.OnResultExecuted context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResultExecuting">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResultExecuting(Microsoft::AspNetCore::Mvc::Filters::ResultExecutingContext ^ context);" />
      <MemberSignature Language="C#" Value="public void OnResultExecuting (Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResultExecuting(class Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResultExecuting (context As ResultExecutingContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResultExecuting : Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext -&gt; unit&#xA;override this.OnResultExecuting : Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext -&gt; unit" Usage="formatFilter.OnResultExecuting context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" />.</param>
        <summary>
            Sets a Content Type on an  <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" />  using a format value from the request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
