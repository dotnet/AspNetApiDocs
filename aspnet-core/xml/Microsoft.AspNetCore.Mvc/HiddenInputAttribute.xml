<Type Name="HiddenInputAttribute" FullName="Microsoft.AspNetCore.Mvc.HiddenInputAttribute">
  <TypeSignature Language="C++ CLI" Value="public ref class HiddenInputAttribute sealed : Attribute" />
  <TypeSignature Language="C#" Value="public sealed class HiddenInputAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HiddenInputAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.HiddenInputAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HiddenInputAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type HiddenInputAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.DataAnnotations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Indicates associated property or all properties with the associated type should be edited using an
            &lt;input&gt; element of type "hidden".
            </summary>
    <remarks>
            When overriding a <see cref="T:Microsoft.AspNetCore.Mvc.HiddenInputAttribute" /> inherited from a base class, should apply both
            <c>[HiddenInput(DisplayValue = true)]</c> (if the inherited attribute had <c>DisplayValue = false</c>) and a
            <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> with some value other than "HiddenInput".
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HiddenInputAttribute();" />
      <MemberSignature Language="C#" Value="public HiddenInputAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.HiddenInputAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.DataAnnotations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.HiddenInputAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayValue">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayValue { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool DisplayValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.HiddenInputAttribute.DisplayValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisplayValue : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.HiddenInputAttribute.DisplayValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.DataAnnotations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to display the value as well as provide a hidden &lt;input&gt;
            element. The default value is <c>true</c>.
            </summary>
        <value>To be added.</value>
        <remarks>
            If <c>false</c>, also causes the default <see cref="T:System.Object" /> display and editor templates to return HTML
            lacking the usual per-property &lt;div&gt; wrapper around the associated property and the default display
            "HiddenInput" template to return <c>string.Empty</c> for the associated property. Thus the default
            <see cref="T:System.Object" /> display template effectively skips the property and the default <see cref="T:System.Object" />
            editor template returns only the hidden &lt;input&gt; element for the property.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
