<Type Name="OpenApiOptions" FullName="Microsoft.AspNetCore.OpenApi.OpenApiOptions">
  <TypeSignature Language="C#" Value="public sealed class OpenApiOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenApiOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenApiOptions" />
  <TypeSignature Language="F#" Value="type OpenApiOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options to support the construction of OpenAPI documents.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenApiOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OpenApi.OpenApiOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> class
            with the default <see cref="P:Microsoft.AspNetCore.OpenApi.OpenApiOptions.ShouldInclude" /> predicate.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentName">
      <MemberSignature Language="C#" Value="public string DocumentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.OpenApi.OpenApiOptions.DocumentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentName As String" />
      <MemberSignature Language="F#" Value="member this.DocumentName : string" Usage="Microsoft.AspNetCore.OpenApi.OpenApiOptions.DocumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the OpenAPI document this <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance is associated with.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenApiVersion">
      <MemberSignature Language="C#" Value="public Microsoft.OpenApi.OpenApiSpecVersion OpenApiVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.OpenApi.OpenApiSpecVersion OpenApiVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.OpenApi.OpenApiOptions.OpenApiVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property OpenApiVersion As OpenApiSpecVersion" />
      <MemberSignature Language="F#" Value="member this.OpenApiVersion : Microsoft.OpenApi.OpenApiSpecVersion with get, set" Usage="Microsoft.AspNetCore.OpenApi.OpenApiOptions.OpenApiVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.OpenApi.OpenApiSpecVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The version of the OpenAPI specification to use. Defaults to <see cref="F:Microsoft.OpenApi.OpenApiSpecVersion.OpenApi3_0" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldInclude">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription,bool&gt; ShouldInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription, bool&gt; ShouldInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.OpenApi.OpenApiOptions.ShouldInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldInclude As Func(Of ApiDescription, Boolean)" />
      <MemberSignature Language="F#" Value="member this.ShouldInclude : Func&lt;Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription, bool&gt; with get, set" Usage="Microsoft.AspNetCore.OpenApi.OpenApiOptions.ShouldInclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A delegate to determine whether a given <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription" /> should be included in the given OpenAPI document.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOperationTransformer">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.OpenApi.OpenApiOptions UseOperationTransformer (Func&lt;Microsoft.OpenApi.Models.OpenApiOperation,Microsoft.AspNetCore.OpenApi.OpenApiOperationTransformerContext,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.OpenApi.OpenApiOptions UseOperationTransformer(class System.Func`4&lt;class Microsoft.OpenApi.Models.OpenApiOperation, class Microsoft.AspNetCore.OpenApi.OpenApiOperationTransformerContext, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OpenApi.OpenApiOptions.UseOperationTransformer(System.Func{Microsoft.OpenApi.Models.OpenApiOperation,Microsoft.AspNetCore.OpenApi.OpenApiOperationTransformerContext,System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function UseOperationTransformer (transformer As Func(Of OpenApiOperation, OpenApiOperationTransformerContext, CancellationToken, Task)) As OpenApiOptions" />
      <MemberSignature Language="F#" Value="member this.UseOperationTransformer : Func&lt;Microsoft.OpenApi.Models.OpenApiOperation, Microsoft.AspNetCore.OpenApi.OpenApiOperationTransformerContext, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; Microsoft.AspNetCore.OpenApi.OpenApiOptions" Usage="openApiOptions.UseOperationTransformer transformer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.OpenApi.OpenApiOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformer" Type="System.Func&lt;Microsoft.OpenApi.Models.OpenApiOperation,Microsoft.AspNetCore.OpenApi.OpenApiOperationTransformerContext,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="transformer">The delegate representing the operation transformer.</param>
        <summary>
            Registers a given delegate as an operation transformer on the current <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance for further customization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransformer">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.OpenApi.OpenApiOptions UseTransformer (Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.OpenApi.OpenApiOptions UseTransformer(class Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OpenApi.OpenApiOptions.UseTransformer(Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer)" />
      <MemberSignature Language="VB.NET" Value="Public Function UseTransformer (transformer As IOpenApiDocumentTransformer) As OpenApiOptions" />
      <MemberSignature Language="F#" Value="member this.UseTransformer : Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer -&gt; Microsoft.AspNetCore.OpenApi.OpenApiOptions" Usage="openApiOptions.UseTransformer transformer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.OpenApi.OpenApiOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformer" Type="Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer" />
      </Parameters>
      <Docs>
        <param name="transformer">The <see cref="T:Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer" /> instance to use.</param>
        <summary>
            Registers a given instance of <see cref="T:Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer" /> on the current <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance for further customization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransformer">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.OpenApi.OpenApiOptions UseTransformer (Func&lt;Microsoft.OpenApi.Models.OpenApiDocument,Microsoft.AspNetCore.OpenApi.OpenApiDocumentTransformerContext,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.OpenApi.OpenApiOptions UseTransformer(class System.Func`4&lt;class Microsoft.OpenApi.Models.OpenApiDocument, class Microsoft.AspNetCore.OpenApi.OpenApiDocumentTransformerContext, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OpenApi.OpenApiOptions.UseTransformer(System.Func{Microsoft.OpenApi.Models.OpenApiDocument,Microsoft.AspNetCore.OpenApi.OpenApiDocumentTransformerContext,System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function UseTransformer (transformer As Func(Of OpenApiDocument, OpenApiDocumentTransformerContext, CancellationToken, Task)) As OpenApiOptions" />
      <MemberSignature Language="F#" Value="member this.UseTransformer : Func&lt;Microsoft.OpenApi.Models.OpenApiDocument, Microsoft.AspNetCore.OpenApi.OpenApiDocumentTransformerContext, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; Microsoft.AspNetCore.OpenApi.OpenApiOptions" Usage="openApiOptions.UseTransformer transformer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.OpenApi.OpenApiOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformer" Type="System.Func&lt;Microsoft.OpenApi.Models.OpenApiDocument,Microsoft.AspNetCore.OpenApi.OpenApiDocumentTransformerContext,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="transformer">The delegate representing the document transformer.</param>
        <summary>
            Registers a given delegate as a document transformer on the current <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance for further customization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransformer&lt;TTransformerType&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.OpenApi.OpenApiOptions UseTransformer&lt;TTransformerType&gt; () where TTransformerType : Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.OpenApi.OpenApiOptions UseTransformer&lt;(class Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer) TTransformerType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OpenApi.OpenApiOptions.UseTransformer``1" />
      <MemberSignature Language="VB.NET" Value="Public Function UseTransformer(Of TTransformerType As IOpenApiDocumentTransformer) () As OpenApiOptions" />
      <MemberSignature Language="F#" Value="member this.UseTransformer : unit -&gt; Microsoft.AspNetCore.OpenApi.OpenApiOptions (requires 'ransformerType :&gt; Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer)" Usage="openApiOptions.UseTransformer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.OpenApi.OpenApiOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTransformerType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TTransformerType">The type of the <see cref="T:Microsoft.AspNetCore.OpenApi.IOpenApiDocumentTransformer" /> to instantiate.</typeparam>
        <summary>
            Registers a new document transformer on the current <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" /> instance for further customization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
