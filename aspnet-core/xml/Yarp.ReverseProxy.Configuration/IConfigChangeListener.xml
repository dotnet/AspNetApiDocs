<Type Name="IConfigChangeListener" FullName="Yarp.ReverseProxy.Configuration.IConfigChangeListener">
  <TypeSignature Language="C#" Value="public interface IConfigChangeListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConfigChangeListener" FrameworkAlternate="yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Configuration.IConfigChangeListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConfigChangeListener" />
  <TypeSignature Language="F#" Value="type IConfigChangeListener = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IConfigChangeListener" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Allows subscribing to events notifying you when the configuration is loaded and applied, or when those actions fail.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConfigurationApplied">
      <MemberSignature Language="C#" Value="public void ConfigurationApplied (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt; proxyConfigs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigurationApplied(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.IProxyConfig&gt; proxyConfigs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.IConfigChangeListener.ConfigurationApplied(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.IProxyConfig})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConfigurationApplied (proxyConfigs As IReadOnlyList(Of IProxyConfig))" />
      <MemberSignature Language="F#" Value="abstract member ConfigurationApplied : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt; -&gt; unit" Usage="iConfigChangeListener.ConfigurationApplied proxyConfigs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxyConfigs" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt;" />
      </Parameters>
      <Docs>
        <param name="proxyConfigs">The list of instances that have been applied.</param>
        <summary>
            Invoked once the configuration has been successfully applied.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationApplyingFailed">
      <MemberSignature Language="C#" Value="public void ConfigurationApplyingFailed (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt; proxyConfigs, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigurationApplyingFailed(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.IProxyConfig&gt; proxyConfigs, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.IConfigChangeListener.ConfigurationApplyingFailed(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.IProxyConfig},System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConfigurationApplyingFailed (proxyConfigs As IReadOnlyList(Of IProxyConfig), exception As Exception)" />
      <MemberSignature Language="F#" Value="abstract member ConfigurationApplyingFailed : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt; * Exception -&gt; unit" Usage="iConfigChangeListener.ConfigurationApplyingFailed (proxyConfigs, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxyConfigs" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt;" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="proxyConfigs">The list of instances that were being processed.</param>
        <param name="exception">The thrown exception.</param>
        <summary>
            Invoked when an error occurs while applying the configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationLoaded">
      <MemberSignature Language="C#" Value="public void ConfigurationLoaded (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt; proxyConfigs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigurationLoaded(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.IProxyConfig&gt; proxyConfigs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.IConfigChangeListener.ConfigurationLoaded(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.IProxyConfig})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConfigurationLoaded (proxyConfigs As IReadOnlyList(Of IProxyConfig))" />
      <MemberSignature Language="F#" Value="abstract member ConfigurationLoaded : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt; -&gt; unit" Usage="iConfigChangeListener.ConfigurationLoaded proxyConfigs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxyConfigs" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.IProxyConfig&gt;" />
      </Parameters>
      <Docs>
        <param name="proxyConfigs">The list of instances that have been loaded.</param>
        <summary>
            Invoked once the configuration have been successfully loaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationLoadingFailed">
      <MemberSignature Language="C#" Value="public void ConfigurationLoadingFailed (Yarp.ReverseProxy.Configuration.IProxyConfigProvider configProvider, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigurationLoadingFailed(class Yarp.ReverseProxy.Configuration.IProxyConfigProvider configProvider, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.IConfigChangeListener.ConfigurationLoadingFailed(Yarp.ReverseProxy.Configuration.IProxyConfigProvider,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConfigurationLoadingFailed (configProvider As IProxyConfigProvider, exception As Exception)" />
      <MemberSignature Language="F#" Value="abstract member ConfigurationLoadingFailed : Yarp.ReverseProxy.Configuration.IProxyConfigProvider * Exception -&gt; unit" Usage="iConfigChangeListener.ConfigurationLoadingFailed (configProvider, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configProvider" Type="Yarp.ReverseProxy.Configuration.IProxyConfigProvider" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="configProvider">The instance of the configuration provider that failed to provide the configuration.</param>
        <param name="exception">The thrown exception.</param>
        <summary>
            Invoked when an error occurs while loading the configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
