<Type Name="RouteMatch" FullName="Yarp.ReverseProxy.Configuration.RouteMatch">
  <TypeSignature Language="C#" Value="public sealed class RouteMatch : IEquatable&lt;Yarp.ReverseProxy.Configuration.RouteMatch&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RouteMatch extends System.Object implements class System.IEquatable`1&lt;class Yarp.ReverseProxy.Configuration.RouteMatch&gt;" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Configuration.RouteMatch" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RouteMatch&#xA;Implements IEquatable(Of RouteMatch)" />
  <TypeSignature Language="F#" Value="type RouteMatch = class&#xA;    interface IEquatable&lt;RouteMatch&gt;" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Yarp.ReverseProxy.Configuration.RouteMatch&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Describes the matching criteria for a route.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteMatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Configuration.RouteMatch &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Yarp.ReverseProxy.Configuration.RouteMatch &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As RouteMatch" />
      <MemberSignature Language="F#" Value="member this.&lt;Clone&gt;$ : unit -&gt; Yarp.ReverseProxy.Configuration.RouteMatch" Usage="routeMatch.&lt;Clone&gt;$ " FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteMatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="routeMatch.Equals obj" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Yarp.ReverseProxy.Configuration.RouteMatch? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Yarp.ReverseProxy.Configuration.RouteMatch other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.Equals(Yarp.ReverseProxy.Configuration.RouteMatch)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As RouteMatch) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Yarp.ReverseProxy.Configuration.RouteMatch -&gt; bool" Usage="routeMatch.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Yarp.ReverseProxy.Configuration.RouteMatch" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="routeMatch.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteHeader&gt;? Headers { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.RouteHeader&gt; Headers" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteMatch.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As IReadOnlyList(Of RouteHeader)" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteHeader&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteMatch.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteHeader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Only match requests that contain all of these headers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hosts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt;? Hosts { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; Hosts" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteMatch.Hosts" />
      <MemberSignature Language="VB.NET" Value="Public Property Hosts As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Hosts : System.Collections.Generic.IReadOnlyList&lt;string&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteMatch.Hosts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Only match requests with the given Host header.
            Supports wildcards and ports. For unicode host names, do not use punycode.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Methods">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt;? Methods { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; Methods" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteMatch.Methods" />
      <MemberSignature Language="VB.NET" Value="Public Property Methods As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Methods : System.Collections.Generic.IReadOnlyList&lt;string&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteMatch.Methods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Only match requests that use these optional HTTP methods. E.g. GET, POST.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Yarp.ReverseProxy.Configuration.RouteMatch? left, Yarp.ReverseProxy.Configuration.RouteMatch? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Yarp.ReverseProxy.Configuration.RouteMatch left, class Yarp.ReverseProxy.Configuration.RouteMatch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.op_Equality(Yarp.ReverseProxy.Configuration.RouteMatch,Yarp.ReverseProxy.Configuration.RouteMatch)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As RouteMatch, right As RouteMatch) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Yarp.ReverseProxy.Configuration.RouteMatch * Yarp.ReverseProxy.Configuration.RouteMatch -&gt; bool" Usage="left = right" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Yarp.ReverseProxy.Configuration.RouteMatch" />
        <Parameter Name="right" Type="Yarp.ReverseProxy.Configuration.RouteMatch" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Yarp.ReverseProxy.Configuration.RouteMatch? left, Yarp.ReverseProxy.Configuration.RouteMatch? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Yarp.ReverseProxy.Configuration.RouteMatch left, class Yarp.ReverseProxy.Configuration.RouteMatch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.op_Inequality(Yarp.ReverseProxy.Configuration.RouteMatch,Yarp.ReverseProxy.Configuration.RouteMatch)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As RouteMatch, right As RouteMatch) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Yarp.ReverseProxy.Configuration.RouteMatch * Yarp.ReverseProxy.Configuration.RouteMatch -&gt; bool" Usage="Yarp.ReverseProxy.Configuration.RouteMatch.op_Inequality (left, right)" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Yarp.ReverseProxy.Configuration.RouteMatch" />
        <Parameter Name="right" Type="Yarp.ReverseProxy.Configuration.RouteMatch" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string? Path { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteMatch.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteMatch.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Only match requests with the given Path pattern.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteQueryParameter&gt;? QueryParameters { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.RouteQueryParameter&gt; QueryParameters" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteMatch.QueryParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryParameters As IReadOnlyList(Of RouteQueryParameter)" />
      <MemberSignature Language="F#" Value="member this.QueryParameters : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteQueryParameter&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteMatch.QueryParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteQueryParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Only match requests that contain all of these query parameters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteMatch.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="routeMatch.ToString " FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
