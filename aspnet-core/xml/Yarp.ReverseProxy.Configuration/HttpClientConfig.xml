<Type Name="HttpClientConfig" FullName="Yarp.ReverseProxy.Configuration.HttpClientConfig">
  <TypeSignature Language="C#" Value="public sealed class HttpClientConfig : IEquatable&lt;Yarp.ReverseProxy.Configuration.HttpClientConfig&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpClientConfig extends System.Object implements class System.IEquatable`1&lt;class Yarp.ReverseProxy.Configuration.HttpClientConfig&gt;" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Configuration.HttpClientConfig" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpClientConfig&#xA;Implements IEquatable(Of HttpClientConfig)" />
  <TypeSignature Language="F#" Value="type HttpClientConfig = class&#xA;    interface IEquatable&lt;HttpClientConfig&gt;" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Yarp.ReverseProxy.Configuration.HttpClientConfig&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options used for communicating with the destination servers.
            </summary>
    <remarks>
            If you need a more granular approach, please use a <see href="https://microsoft.github.io/reverse-proxy/articles/http-client-config.html#custom-iforwarderhttpclientfactory">custom implementation of <see cref="T:Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory" /></see>.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Configuration.HttpClientConfig &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Yarp.ReverseProxy.Configuration.HttpClientConfig &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As HttpClientConfig" />
      <MemberSignature Language="F#" Value="member this.&lt;Clone&gt;$ : unit -&gt; Yarp.ReverseProxy.Configuration.HttpClientConfig" Usage="httpClientConfig.&lt;Clone&gt;$ " FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.HttpClientConfig</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificate">
      <MemberSignature Language="C#" Value="public bool? DangerousAcceptAnyServerCertificate { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DangerousAcceptAnyServerCertificate" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.DangerousAcceptAnyServerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DangerousAcceptAnyServerCertificate As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DangerousAcceptAnyServerCertificate : Nullable&lt;bool&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.DangerousAcceptAnyServerCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if destination server https certificate errors should be ignored.
            This should only be done when using self-signed certificates.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Yarp.ReverseProxy.Configuration.HttpClientConfig Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Yarp.ReverseProxy.Configuration.HttpClientConfig Empty" />
      <MemberSignature Language="DocId" Value="F:Yarp.ReverseProxy.Configuration.HttpClientConfig.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As HttpClientConfig " />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : Yarp.ReverseProxy.Configuration.HttpClientConfig" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.HttpClientConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An empty options instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMultipleHttp2Connections">
      <MemberSignature Language="C#" Value="public bool? EnableMultipleHttp2Connections { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableMultipleHttp2Connections" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.EnableMultipleHttp2Connections" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMultipleHttp2Connections As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableMultipleHttp2Connections : Nullable&lt;bool&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.EnableMultipleHttp2Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether additional HTTP/2 connections can
            be established to the same server when the maximum number of concurrent streams
            is reached on all existing connections.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="httpClientConfig.Equals obj" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Yarp.ReverseProxy.Configuration.HttpClientConfig? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Yarp.ReverseProxy.Configuration.HttpClientConfig other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.Equals(Yarp.ReverseProxy.Configuration.HttpClientConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As HttpClientConfig) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Yarp.ReverseProxy.Configuration.HttpClientConfig -&gt; bool" Usage="httpClientConfig.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Yarp.ReverseProxy.Configuration.HttpClientConfig" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="httpClientConfig.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int? MaxConnectionsPerServer { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : Nullable&lt;int&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Limits the number of connections used when communicating with the destination server.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Yarp.ReverseProxy.Configuration.HttpClientConfig? left, Yarp.ReverseProxy.Configuration.HttpClientConfig? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Yarp.ReverseProxy.Configuration.HttpClientConfig left, class Yarp.ReverseProxy.Configuration.HttpClientConfig right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.op_Equality(Yarp.ReverseProxy.Configuration.HttpClientConfig,Yarp.ReverseProxy.Configuration.HttpClientConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HttpClientConfig, right As HttpClientConfig) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Yarp.ReverseProxy.Configuration.HttpClientConfig * Yarp.ReverseProxy.Configuration.HttpClientConfig -&gt; bool" Usage="left = right" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Yarp.ReverseProxy.Configuration.HttpClientConfig" />
        <Parameter Name="right" Type="Yarp.ReverseProxy.Configuration.HttpClientConfig" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Yarp.ReverseProxy.Configuration.HttpClientConfig? left, Yarp.ReverseProxy.Configuration.HttpClientConfig? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Yarp.ReverseProxy.Configuration.HttpClientConfig left, class Yarp.ReverseProxy.Configuration.HttpClientConfig right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.op_Inequality(Yarp.ReverseProxy.Configuration.HttpClientConfig,Yarp.ReverseProxy.Configuration.HttpClientConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HttpClientConfig, right As HttpClientConfig) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Yarp.ReverseProxy.Configuration.HttpClientConfig * Yarp.ReverseProxy.Configuration.HttpClientConfig -&gt; bool" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.op_Inequality (left, right)" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Yarp.ReverseProxy.Configuration.HttpClientConfig" />
        <Parameter Name="right" Type="Yarp.ReverseProxy.Configuration.HttpClientConfig" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderEncoding">
      <MemberSignature Language="C#" Value="public string? RequestHeaderEncoding { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestHeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.RequestHeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestHeaderEncoding As String" />
      <MemberSignature Language="F#" Value="member this.RequestHeaderEncoding : string with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.RequestHeaderEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the default (ASCII) encoding for outgoing request headers.
            <para>
            Setting this value will in turn set <see cref="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector" /> and use the selected encoding for all request headers.
            The value is then parsed by <see cref="M:System.Text.Encoding.GetEncoding(System.String)" />, so use values like: "utf-8", "iso-8859-1", etc.
            </para></summary>
        <value>To be added.</value>
        <remarks>
            Note: If you're using an encoding other than UTF-8 here, then you may also need to configure your server to accept request headers with such an encoding via the corresponding options for the server.
            <para>
            For example, when using Kestrel as the server, use <see cref="P:Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.RequestHeaderEncodingSelector" /> to
            <see href="https://learn.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel/options">configure Kestrel</see> to use the same encoding.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaderEncoding">
      <MemberSignature Language="C#" Value="public string? ResponseHeaderEncoding { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseHeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.ResponseHeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseHeaderEncoding As String" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaderEncoding : string with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.ResponseHeaderEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the default (Latin1) encoding for incoming request headers.
            <para>
            Setting this value will in turn set <see cref="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector" /> and use the selected encoding for all response headers.
            The value is then parsed by <see cref="M:System.Text.Encoding.GetEncoding(System.String)" />, so use values like: "utf-8", "iso-8859-1", etc.
            </para></summary>
        <value>To be added.</value>
        <remarks>
            Note: If you're using an encoding other than ASCII here, then you may also need to configure your server to send response headers with such an encoding via the corresponding options for the server.
            <para>
            For example, when using Kestrel as the server, use <see cref="P:Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ResponseHeaderEncodingSelector" /> to
            <see href="https://learn.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel/options">configure Kestrel</see> to use the same encoding.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols? SslProtocols { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Security.Authentication.SslProtocols&gt; SslProtocols" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As Nullable(Of SslProtocols)" />
      <MemberSignature Language="F#" Value="member this.SslProtocols : Nullable&lt;System.Security.Authentication.SslProtocols&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.SslProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Security.Authentication.SslProtocols&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            What TLS protocols to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.HttpClientConfig.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="httpClientConfig.ToString " FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebProxy">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Configuration.WebProxyConfig? WebProxy { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Yarp.ReverseProxy.Configuration.WebProxyConfig WebProxy" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.HttpClientConfig.WebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property WebProxy As WebProxyConfig" />
      <MemberSignature Language="F#" Value="member this.WebProxy : Yarp.ReverseProxy.Configuration.WebProxyConfig with get, set" Usage="Yarp.ReverseProxy.Configuration.HttpClientConfig.WebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.WebProxyConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional web proxy used when communicating with the destination server.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
