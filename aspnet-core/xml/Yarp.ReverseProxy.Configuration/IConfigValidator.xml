<Type Name="IConfigValidator" FullName="Yarp.ReverseProxy.Configuration.IConfigValidator">
  <TypeSignature Language="C#" Value="public interface IConfigValidator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConfigValidator" FrameworkAlternate="yarp-1.0;yarp-1.1;yarp-2.0" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Configuration.IConfigValidator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConfigValidator" />
  <TypeSignature Language="F#" Value="type IConfigValidator = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IConfigValidator" FrameworkAlternate="yarp-2.1;yarp-2.2" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides methods to validate routes and clusters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ValidateClusterAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;System.Collections.Generic.IList&lt;Exception&gt;&gt; ValidateClusterAsync (Yarp.ReverseProxy.Configuration.ClusterConfig cluster);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Collections.Generic.IList`1&lt;class System.Exception&gt;&gt; ValidateClusterAsync(class Yarp.ReverseProxy.Configuration.ClusterConfig cluster) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.IConfigValidator.ValidateClusterAsync(Yarp.ReverseProxy.Configuration.ClusterConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateClusterAsync (cluster As ClusterConfig) As ValueTask(Of IList(Of Exception))" />
      <MemberSignature Language="F#" Value="abstract member ValidateClusterAsync : Yarp.ReverseProxy.Configuration.ClusterConfig -&gt; System.Threading.Tasks.ValueTask&lt;System.Collections.Generic.IList&lt;Exception&gt;&gt;" Usage="iConfigValidator.ValidateClusterAsync cluster" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Collections.Generic.IList&lt;System.Exception&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cluster" Type="Yarp.ReverseProxy.Configuration.ClusterConfig" />
      </Parameters>
      <Docs>
        <param name="cluster">To be added.</param>
        <summary>
            Validates a cluster and returns all errors.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRouteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;System.Collections.Generic.IList&lt;Exception&gt;&gt; ValidateRouteAsync (Yarp.ReverseProxy.Configuration.RouteConfig route);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Collections.Generic.IList`1&lt;class System.Exception&gt;&gt; ValidateRouteAsync(class Yarp.ReverseProxy.Configuration.RouteConfig route) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.IConfigValidator.ValidateRouteAsync(Yarp.ReverseProxy.Configuration.RouteConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateRouteAsync (route As RouteConfig) As ValueTask(Of IList(Of Exception))" />
      <MemberSignature Language="F#" Value="abstract member ValidateRouteAsync : Yarp.ReverseProxy.Configuration.RouteConfig -&gt; System.Threading.Tasks.ValueTask&lt;System.Collections.Generic.IList&lt;Exception&gt;&gt;" Usage="iConfigValidator.ValidateRouteAsync route" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Collections.Generic.IList&lt;System.Exception&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
      </Parameters>
      <Docs>
        <param name="route">To be added.</param>
        <summary>
            Validates a route and returns all errors
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
