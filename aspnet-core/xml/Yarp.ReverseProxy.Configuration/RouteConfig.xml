<Type Name="RouteConfig" FullName="Yarp.ReverseProxy.Configuration.RouteConfig">
  <TypeSignature Language="C#" Value="public sealed class RouteConfig : IEquatable&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RouteConfig extends System.Object implements class System.IEquatable`1&lt;class Yarp.ReverseProxy.Configuration.RouteConfig&gt;" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Configuration.RouteConfig" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RouteConfig&#xA;Implements IEquatable(Of RouteConfig)" />
  <TypeSignature Language="F#" Value="type RouteConfig = class&#xA;    interface IEquatable&lt;RouteConfig&gt;" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Describes a route that matches incoming requests based on the <see cref="P:Yarp.ReverseProxy.Configuration.RouteConfig.Match" /> criteria
            and proxies matching requests to the cluster identified by its <see cref="P:Yarp.ReverseProxy.Configuration.RouteConfig.ClusterId" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Configuration.RouteConfig &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Yarp.ReverseProxy.Configuration.RouteConfig &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As RouteConfig" />
      <MemberSignature Language="F#" Value="member this.&lt;Clone&gt;$ : unit -&gt; Yarp.ReverseProxy.Configuration.RouteConfig" Usage="routeConfig.&lt;Clone&gt;$ " FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteConfig</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationPolicy">
      <MemberSignature Language="C#" Value="public string? AuthorizationPolicy { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationPolicy" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.AuthorizationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationPolicy As String" />
      <MemberSignature Language="F#" Value="member this.AuthorizationPolicy : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.AuthorizationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the AuthorizationPolicy to apply to this route.
            If not set then only the FallbackPolicy will apply.
            Set to "Default" to enable authorization with the applications default policy.
            Set to "Anonymous" to disable all authorization checks for this route.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterId">
      <MemberSignature Language="C#" Value="public string? ClusterId { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterId" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.ClusterId" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterId As String" />
      <MemberSignature Language="F#" Value="member this.ClusterId : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.ClusterId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the cluster that requests matching this route
            should be proxied to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorsPolicy">
      <MemberSignature Language="C#" Value="public string? CorsPolicy { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorsPolicy" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.CorsPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CorsPolicy As String" />
      <MemberSignature Language="F#" Value="member this.CorsPolicy : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.CorsPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the CorsPolicy to apply to this route.
            If not set then the route won't be automatically matched for cors preflight requests.
            Set to "Default" to enable cors with the default policy.
            Set to "Disable" to refuses cors requests for this route.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="routeConfig.Equals obj" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Yarp.ReverseProxy.Configuration.RouteConfig? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Yarp.ReverseProxy.Configuration.RouteConfig other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.Equals(Yarp.ReverseProxy.Configuration.RouteConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As RouteConfig) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Yarp.ReverseProxy.Configuration.RouteConfig -&gt; bool" Usage="routeConfig.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="routeConfig.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Configuration.RouteMatch Match { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Yarp.ReverseProxy.Configuration.RouteMatch Match" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.Match" />
      <MemberSignature Language="VB.NET" Value="Public Property Match As RouteMatch" />
      <MemberSignature Language="F#" Value="member this.Match : Yarp.ReverseProxy.Configuration.RouteMatch with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.Match" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.RouteMatch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Parameters used to match requests.
            This field is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestBodySize">
      <MemberSignature Language="C#" Value="public long? MaxRequestBodySize { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxRequestBodySize" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.MaxRequestBodySize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestBodySize As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxRequestBodySize : Nullable&lt;int64&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.MaxRequestBodySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional override for how large request bodies can be in bytes. If set, this overrides the server's default (30MB) per request.
            Set to '-1' to disable the limit for this route.
            Note that this limit applies only to the YARP forwarder middleware, it does not apply when reading the request body from a custom middleware registered via
            <see cref="M:Microsoft.AspNetCore.Builder.ReverseProxyIEndpointRouteBuilderExtensions.MapReverseProxy(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{Microsoft.AspNetCore.Builder.IReverseProxyApplicationBuilder})" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;? Metadata { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As IReadOnlyDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Arbitrary key-value pairs that further describe this route.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Yarp.ReverseProxy.Configuration.RouteConfig? left, Yarp.ReverseProxy.Configuration.RouteConfig? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Yarp.ReverseProxy.Configuration.RouteConfig left, class Yarp.ReverseProxy.Configuration.RouteConfig right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.op_Equality(Yarp.ReverseProxy.Configuration.RouteConfig,Yarp.ReverseProxy.Configuration.RouteConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As RouteConfig, right As RouteConfig) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Yarp.ReverseProxy.Configuration.RouteConfig * Yarp.ReverseProxy.Configuration.RouteConfig -&gt; bool" Usage="left = right" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
        <Parameter Name="right" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Yarp.ReverseProxy.Configuration.RouteConfig? left, Yarp.ReverseProxy.Configuration.RouteConfig? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Yarp.ReverseProxy.Configuration.RouteConfig left, class Yarp.ReverseProxy.Configuration.RouteConfig right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.op_Inequality(Yarp.ReverseProxy.Configuration.RouteConfig,Yarp.ReverseProxy.Configuration.RouteConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As RouteConfig, right As RouteConfig) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Yarp.ReverseProxy.Configuration.RouteConfig * Yarp.ReverseProxy.Configuration.RouteConfig -&gt; bool" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.op_Inequality (left, right)" FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
        <Parameter Name="right" Type="Yarp.ReverseProxy.Configuration.RouteConfig" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int? Order { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Order" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Order : Nullable&lt;int&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optionally, an order value for this route. Routes with lower numbers take precedence over higher numbers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputCachePolicy">
      <MemberSignature Language="C#" Value="public string? OutputCachePolicy { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputCachePolicy" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.OutputCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputCachePolicy As String" />
      <MemberSignature Language="F#" Value="member this.OutputCachePolicy : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.OutputCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the OutputCachePolicy to apply to this route.
            If not set then only the BasePolicy will apply.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RateLimiterPolicy">
      <MemberSignature Language="C#" Value="public string? RateLimiterPolicy { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RateLimiterPolicy" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.RateLimiterPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RateLimiterPolicy As String" />
      <MemberSignature Language="F#" Value="member this.RateLimiterPolicy : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.RateLimiterPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the RateLimiterPolicy to apply to this route.
            If not set then only the GlobalLimiter will apply.
            Set to "Disable" to disable rate limiting for this route.
            Set to "Default" or leave empty to use the global rate limits, if any.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteId">
      <MemberSignature Language="C#" Value="public string RouteId { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteId" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.RouteId" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteId As String" />
      <MemberSignature Language="F#" Value="member this.RouteId : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.RouteId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Globally unique identifier of the route.
            This field is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan? Timeout { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Timeout to apply to this route. This overrides any system defaults.
            Setting both Timeout and TimeoutPolicy is an error.
            Timeout granularity is limited to milliseconds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutPolicy">
      <MemberSignature Language="C#" Value="public string? TimeoutPolicy { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeoutPolicy" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.TimeoutPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeoutPolicy As String" />
      <MemberSignature Language="F#" Value="member this.TimeoutPolicy : string with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.TimeoutPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the TimeoutPolicy to apply to this route.
            Setting both Timeout and TimeoutPolicy is an error.
            If not set then only the system default will apply.
            Set to "Disable" to disable timeouts for this route.
            Set to "Default" or leave empty to use the system defaults, if any.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.RouteConfig.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="routeConfig.ToString " FrameworkAlternate="yarp-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;&gt;? Transforms { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt;&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:Yarp.ReverseProxy.Configuration.RouteConfig.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public Property Transforms As IReadOnlyList(Of IReadOnlyDictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;&gt; with get, set" Usage="Yarp.ReverseProxy.Configuration.RouteConfig.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Parameters used to transform the request and response. See <see cref="T:Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
