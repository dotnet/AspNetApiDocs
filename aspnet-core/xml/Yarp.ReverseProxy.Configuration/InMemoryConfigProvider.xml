<Type Name="InMemoryConfigProvider" FullName="Yarp.ReverseProxy.Configuration.InMemoryConfigProvider">
  <TypeSignature Language="C#" Value="public sealed class InMemoryConfigProvider : Yarp.ReverseProxy.Configuration.IProxyConfigProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InMemoryConfigProvider extends System.Object implements class Yarp.ReverseProxy.Configuration.IProxyConfigProvider" />
  <TypeSignature Language="DocId" Value="T:Yarp.ReverseProxy.Configuration.InMemoryConfigProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InMemoryConfigProvider&#xA;Implements IProxyConfigProvider" />
  <TypeSignature Language="F#" Value="type InMemoryConfigProvider = class&#xA;    interface IProxyConfigProvider" />
  <AssemblyInfo>
    <AssemblyName>Yarp.ReverseProxy</AssemblyName>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Yarp.ReverseProxy.Configuration.IProxyConfigProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="yarp-2.1;yarp-2.2">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides an implementation of IProxyConfigProvider to support config being generated by code.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryConfigProvider (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.InMemoryConfigProvider.#ctor(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.RouteConfig},System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.ClusterConfig})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (routes As IReadOnlyList(Of RouteConfig), clusters As IReadOnlyList(Of ClusterConfig))" />
      <MemberSignature Language="F#" Value="new Yarp.ReverseProxy.Configuration.InMemoryConfigProvider : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; * System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; -&gt; Yarp.ReverseProxy.Configuration.InMemoryConfigProvider" Usage="new Yarp.ReverseProxy.Configuration.InMemoryConfigProvider (routes, clusters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routes" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt;" />
        <Parameter Name="clusters" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt;" />
      </Parameters>
      <Docs>
        <param name="routes">To be added.</param>
        <param name="clusters">To be added.</param>
        <summary>
            Creates a new instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryConfigProvider (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters, string revisionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters, string revisionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.InMemoryConfigProvider.#ctor(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.RouteConfig},System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.ClusterConfig},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (routes As IReadOnlyList(Of RouteConfig), clusters As IReadOnlyList(Of ClusterConfig), revisionId As String)" />
      <MemberSignature Language="F#" Value="new Yarp.ReverseProxy.Configuration.InMemoryConfigProvider : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; * System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; * string -&gt; Yarp.ReverseProxy.Configuration.InMemoryConfigProvider" Usage="new Yarp.ReverseProxy.Configuration.InMemoryConfigProvider (routes, clusters, revisionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routes" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt;" />
        <Parameter Name="clusters" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt;" />
        <Parameter Name="revisionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routes">To be added.</param>
        <param name="clusters">To be added.</param>
        <param name="revisionId">To be added.</param>
        <summary>
            Creates a new instance, specifying a revision id of the configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="C#" Value="public Yarp.ReverseProxy.Configuration.IProxyConfig GetConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Yarp.ReverseProxy.Configuration.IProxyConfig GetConfig() cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.InMemoryConfigProvider.GetConfig" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfig () As IProxyConfig" />
      <MemberSignature Language="F#" Value="abstract member GetConfig : unit -&gt; Yarp.ReverseProxy.Configuration.IProxyConfig&#xA;override this.GetConfig : unit -&gt; Yarp.ReverseProxy.Configuration.IProxyConfig" Usage="inMemoryConfigProvider.GetConfig " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Yarp.ReverseProxy.Configuration.IProxyConfigProvider.GetConfig</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Yarp.ReverseProxy.Configuration.IProxyConfig</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Implementation of the IProxyConfigProvider.GetConfig method to supply the current snapshot of configuration
            </summary>
        <returns>An immutable snapshot of the current configuration state</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.InMemoryConfigProvider.Update(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.RouteConfig},System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.ClusterConfig})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update (routes As IReadOnlyList(Of RouteConfig), clusters As IReadOnlyList(Of ClusterConfig))" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; * System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; -&gt; unit" Usage="inMemoryConfigProvider.Update (routes, clusters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routes" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt;" />
        <Parameter Name="clusters" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt;" />
      </Parameters>
      <Docs>
        <param name="routes">To be added.</param>
        <param name="clusters">To be added.</param>
        <summary>
            Swaps the config state with a new snapshot of the configuration, then signals that the old one is outdated.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters, string revisionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.RouteConfig&gt; routes, class System.Collections.Generic.IReadOnlyList`1&lt;class Yarp.ReverseProxy.Configuration.ClusterConfig&gt; clusters, string revisionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Yarp.ReverseProxy.Configuration.InMemoryConfigProvider.Update(System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.RouteConfig},System.Collections.Generic.IReadOnlyList{Yarp.ReverseProxy.Configuration.ClusterConfig},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update (routes As IReadOnlyList(Of RouteConfig), clusters As IReadOnlyList(Of ClusterConfig), revisionId As String)" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt; * System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt; * string -&gt; unit" Usage="inMemoryConfigProvider.Update (routes, clusters, revisionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Yarp.ReverseProxy</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routes" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.RouteConfig&gt;" />
        <Parameter Name="clusters" Type="System.Collections.Generic.IReadOnlyList&lt;Yarp.ReverseProxy.Configuration.ClusterConfig&gt;" />
        <Parameter Name="revisionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routes">To be added.</param>
        <param name="clusters">To be added.</param>
        <param name="revisionId">To be added.</param>
        <summary>
            Swaps the config state with a new snapshot of the configuration, then signals that the old one is outdated.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
