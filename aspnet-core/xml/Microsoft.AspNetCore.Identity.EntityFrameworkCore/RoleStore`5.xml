<Type Name="RoleStore&lt;TRole,TContext,TKey,TUserRole,TRoleClaim&gt;" FullName="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;TRole,TContext,TKey,TUserRole,TRoleClaim&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRole, typename TContext, typename TKey, typename TUserRole, typename TRoleClaim&gt;&#xA; where TRole : IdentityRole&lt;TKey, TUserRole, TRoleClaim&gt; where TContext : DbContext where TKey : IEquatable&lt;TKey&gt; where TUserRole : IdentityUserRole&lt;TKey&gt; where TRoleClaim : IdentityRoleClaim&lt;TKey&gt;public ref class RoleStore abstract : IDisposable, Microsoft::AspNetCore::Identity::IQueryableRoleStore&lt;TRole&gt;, Microsoft::AspNetCore::Identity::IRoleClaimStore&lt;TRole&gt;, Microsoft::AspNetCore::Identity::IRoleStore&lt;TRole&gt;" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRole, typename TContext, typename TKey, typename TUserRole, typename TRoleClaim&gt;&#xA; where TRole : IdentityRole&lt;TKey&gt; where TContext : DbContext where TKey : IEquatable&lt;TKey&gt; where TUserRole : IdentityUserRole&lt;TKey&gt;gcnew() where TRoleClaim : IdentityRoleClaim&lt;TKey&gt;gcnew()public ref class RoleStore : IDisposable, Microsoft::AspNetCore::Identity::IQueryableRoleStore&lt;TRole&gt;, Microsoft::AspNetCore::Identity::IRoleClaimStore&lt;TRole&gt;, Microsoft::AspNetCore::Identity::IRoleStore&lt;TRole&gt;" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-5.0" />
  <TypeSignature Language="C#" Value="public abstract class RoleStore&lt;TRole,TContext,TKey,TUserRole,TRoleClaim&gt; : IDisposable, Microsoft.AspNetCore.Identity.IQueryableRoleStore&lt;TRole&gt;, Microsoft.AspNetCore.Identity.IRoleClaimStore&lt;TRole&gt;, Microsoft.AspNetCore.Identity.IRoleStore&lt;TRole&gt; where TRole : IdentityRole&lt;TKey,TUserRole,TRoleClaim&gt; where TContext : DbContext where TKey : IEquatable&lt;TKey&gt; where TUserRole : IdentityUserRole&lt;TKey&gt; where TRoleClaim : IdentityRoleClaim&lt;TKey&gt;" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleStore`5&lt;(class Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3&lt;!TKey, !TUserRole, !TRoleClaim&gt;) TRole, (class Microsoft.EntityFrameworkCore.DbContext) TContext, (class System.IEquatable`1&lt;!TKey&gt;) TKey, (class Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1&lt;!TKey&gt;) TUserRole, (class Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1&lt;!TKey&gt;) TRoleClaim&gt; extends System.Object implements class Microsoft.AspNetCore.Identity.IQueryableRoleStore`1&lt;!TRole&gt;, class Microsoft.AspNetCore.Identity.IRoleClaimStore`1&lt;!TRole&gt;, class Microsoft.AspNetCore.Identity.IRoleStore`1&lt;!TRole&gt;, class System.IDisposable" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)&#xA;Implements IDisposable, IQueryableRoleStore(Of TRole), IRoleClaimStore(Of TRole), IRoleStore(Of TRole)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="F#" Value="type RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserRole :&gt; IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; IdentityRoleClaim&lt;'Key&gt;)&gt; = class&#xA;    interface IQueryableRoleStore&lt;'Role (requires 'Role :&gt; IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;&#xA;    interface IRoleStore&lt;'Role (requires 'Role :&gt; IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;&#xA;    interface IDisposable&#xA;    interface IRoleClaimStore&lt;'Role (requires 'Role :&gt; IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
  <TypeSignature Language="C#" Value="public class RoleStore&lt;TRole,TContext,TKey,TUserRole,TRoleClaim&gt; : IDisposable, Microsoft.AspNetCore.Identity.IQueryableRoleStore&lt;TRole&gt;, Microsoft.AspNetCore.Identity.IRoleClaimStore&lt;TRole&gt;, Microsoft.AspNetCore.Identity.IRoleStore&lt;TRole&gt; where TRole : IdentityRole&lt;TKey&gt; where TContext : DbContext where TKey : IEquatable&lt;TKey&gt; where TUserRole : IdentityUserRole&lt;TKey&gt;, new() where TRoleClaim : IdentityRoleClaim&lt;TKey&gt;, new()" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleStore`5&lt;(class Microsoft.AspNetCore.Identity.IdentityRole`1&lt;!TKey&gt;) TRole, (class Microsoft.EntityFrameworkCore.DbContext) TContext, (class System.IEquatable`1&lt;!TKey&gt;) TKey, .ctor (class Microsoft.AspNetCore.Identity.IdentityUserRole`1&lt;!TKey&gt;) TUserRole, .ctor (class Microsoft.AspNetCore.Identity.IdentityRoleClaim`1&lt;!TKey&gt;) TRoleClaim&gt; extends System.Object implements class Microsoft.AspNetCore.Identity.IQueryableRoleStore`1&lt;!TRole&gt;, class Microsoft.AspNetCore.Identity.IRoleClaimStore`1&lt;!TRole&gt;, class Microsoft.AspNetCore.Identity.IRoleStore`1&lt;!TRole&gt;, class System.IDisposable" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)&#xA;Implements IDisposable, IQueryableRoleStore(Of TRole), IRoleClaimStore(Of TRole), IRoleStore(Of TRole)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="F#" Value="type RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; IdentityRole&lt;'Key&gt; and 'Context :&gt; DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserRole :&gt; IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt; = class&#xA;    interface IQueryableRoleStore&lt;'Role (requires 'Role :&gt; IdentityRole&lt;'Key&gt;)&gt;&#xA;    interface IRoleStore&lt;'Role (requires 'Role :&gt; IdentityRole&lt;'Key&gt;)&gt;&#xA;    interface IDisposable&#xA;    interface IRoleClaimStore&lt;'Role (requires 'Role :&gt; IdentityRole&lt;'Key&gt;)&gt;" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.9.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TRole">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;TKey,TUserRole,TRoleClaim&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TContext">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TKey">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TUserRole">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TRoleClaim">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;TKey&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IQueryableRoleStore&lt;TRole&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IRoleClaimStore&lt;TRole&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IRoleStore&lt;TRole&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TRole">The type of the class representing a role.</typeparam>
    <typeparam name="TContext">The type of the data context class used to access the store.</typeparam>
    <typeparam name="TKey">The type of the primary key for a role.</typeparam>
    <typeparam name="TUserRole">The type of the class representing a user role.</typeparam>
    <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
    <summary>
            Creates a new instance of a persistence store for roles.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleStore (TContext context, Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TContext context, class Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As TContext, Optional describer As IdentityErrorDescriber = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt; : 'Context * Microsoft.AspNetCore.Identity.IdentityErrorDescriber -&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt;" Usage="new Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt; (context, describer)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt; : 'Context * Microsoft.AspNetCore.Identity.IdentityErrorDescriber -&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt;" Usage="new Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt; (context, describer)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="C#" Value="public RoleStore (TContext context, Microsoft.AspNetCore.Identity.IdentityErrorDescriber? describer = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="describer" Type="Microsoft.AspNetCore.Identity.IdentityErrorDescriber" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
        <param name="describer">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber" />.</param>
        <summary>
            Constructs a new instance of <see cref="T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClaimAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddClaimAsync (TRole role, System.Security.Claims.Claim claim, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddClaimAsync(!TRole role, class System.Security.Claims.Claim claim, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddClaimAsync (role As TRole, claim As Claim, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member AddClaimAsync : 'Role * System.Security.Claims.Claim * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AddClaimAsync : 'Role * System.Security.Claims.Claim * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="roleStore.AddClaimAsync (role, claim, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddClaimAsync (TRole role, System.Security.Claims.Claim claim, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClaimAsync (role As TRole, claim As Claim, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleClaimStore`1.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role to add the claim to.</param>
        <param name="claim">The claim to add to the role.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Adds the <paramref name="claim" /> given to the specified <paramref name="role" />.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSaveChanges">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSaveChanges { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool AutoSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSaveChanges As Boolean" />
      <MemberSignature Language="F#" Value="member this.AutoSaveChanges : bool with get, set" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt;.AutoSaveChanges" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.AutoSaveChanges : bool with get, set" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt;.AutoSaveChanges" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a flag indicating if changes should be persisted after CreateAsync, UpdateAsync and DeleteAsync are called.
            </summary>
        <value>
            True if changes should be automatically persisted, otherwise false.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TContext Context { TContext get(); };" />
      <MemberSignature Language="C#" Value="public TContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As TContext" />
      <MemberSignature Language="F#" Value="member this.Context : 'Context" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt;.Context" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Context : 'Context" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt;.Context" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the database context for this store.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertIdFromString">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TKey ConvertIdFromString(System::String ^ id);" />
      <MemberSignature Language="C#" Value="public virtual TKey ConvertIdFromString (string id);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey ConvertIdFromString(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertIdFromString (id As String) As TKey" />
      <MemberSignature Language="F#" Value="abstract member ConvertIdFromString : string -&gt; 'Key&#xA;override this.ConvertIdFromString : string -&gt; 'Key" Usage="roleStore.ConvertIdFromString id" />
      <MemberSignature Language="C#" Value="public virtual TKey? ConvertIdFromString (string id);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The id to convert.</param>
        <summary>
            Converts the provided <paramref name="id" /> to a strongly typed key object.
            </summary>
        <returns>An instance of <typeparamref name="TKey" /> representing the provided <paramref name="id" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertIdToString">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertIdToString(TKey id);" />
      <MemberSignature Language="C#" Value="public virtual string ConvertIdToString (TKey id);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertIdToString(!TKey id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertIdToString (id As TKey) As String" />
      <MemberSignature Language="F#" Value="abstract member ConvertIdToString : 'Key -&gt; string&#xA;override this.ConvertIdToString : 'Key -&gt; string" Usage="roleStore.ConvertIdToString id" />
      <MemberSignature Language="C#" Value="public virtual string? ConvertIdToString (TKey id);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="id">The id to convert.</param>
        <summary>
            Converts the provided <paramref name="id" /> to its string representation.
            </summary>
        <returns>An <see cref="T:System.String" /> representation of the provided <paramref name="id" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; CreateAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; CreateAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;&#xA;override this.CreateAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="roleStore.CreateAsync (role, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.CreateAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role to create in the store.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new role in a store as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the <see cref="T:Microsoft.AspNetCore.Identity.IdentityResult" /> of the asynchronous query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleClaim">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TRoleClaim CreateRoleClaim(TRole role, System::Security::Claims::Claim ^ claim);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TRoleClaim CreateRoleClaim(TRole role, System::Security::Claims::Claim ^ claim);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-5.0" />
      <MemberSignature Language="C#" Value="protected abstract TRoleClaim CreateRoleClaim (TRole role, System.Security.Claims.Claim claim);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TRoleClaim CreateRoleClaim(!TRole role, class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateRoleClaim (role As TRole, claim As Claim) As TRoleClaim" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleClaim : 'Role * System.Security.Claims.Claim -&gt; 'RoleClaim" Usage="roleStore.CreateRoleClaim (role, claim)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="C#" Value="protected virtual TRoleClaim CreateRoleClaim (TRole role, System.Security.Claims.Claim claim);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRoleClaim (role As TRole, claim As Claim) As TRoleClaim" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleClaim : 'Role * System.Security.Claims.Claim -&gt; 'RoleClaim&#xA;override this.CreateRoleClaim : 'Role * System.Security.Claims.Claim -&gt; 'RoleClaim" Usage="roleStore.CreateRoleClaim (role, claim)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRoleClaim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="role">The associated role.</param>
        <param name="claim">The associated claim.</param>
        <summary>
            Creates an entity representing a role claim.
            </summary>
        <returns>The role claim entity.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; DeleteAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; DeleteAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;&#xA;override this.DeleteAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="roleStore.DeleteAsync (role, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.DeleteAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role to delete from the store.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a role from the store as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the <see cref="T:Microsoft.AspNetCore.Identity.IdentityResult" /> of the asynchronous query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="roleStore.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose the stores
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDescriber">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Identity::IdentityErrorDescriber ^ ErrorDescriber { Microsoft::AspNetCore::Identity::IdentityErrorDescriber ^ get(); void set(Microsoft::AspNetCore::Identity::IdentityErrorDescriber ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Identity.IdentityErrorDescriber ErrorDescriber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Identity.IdentityErrorDescriber ErrorDescriber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDescriber As IdentityErrorDescriber" />
      <MemberSignature Language="F#" Value="member this.ErrorDescriber : Microsoft.AspNetCore.Identity.IdentityErrorDescriber with get, set" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt;.ErrorDescriber" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.ErrorDescriber : Microsoft.AspNetCore.Identity.IdentityErrorDescriber with get, set" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt;.ErrorDescriber" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityErrorDescriber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber" /> for any error that occurred with the current operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TRole&gt; FindByIdAsync (string id, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TRole&gt; FindByIdAsync(string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindByIdAsync (id As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TRole)" />
      <MemberSignature Language="F#" Value="abstract member FindByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;&#xA;override this.FindByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;" Usage="roleStore.FindByIdAsync (id, cancellationToken)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member FindByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt;)&gt;&#xA;override this.FindByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt;)&gt;" Usage="roleStore.FindByIdAsync (id, cancellationToken)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TRole?&gt; FindByIdAsync (string id, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">The role ID to look for.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Finds the role who has the specified ID as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that result of the look up.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TRole&gt; FindByNameAsync (string normalizedName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TRole&gt; FindByNameAsync(string normalizedName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindByNameAsync (normalizedName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TRole)" />
      <MemberSignature Language="F#" Value="abstract member FindByNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;&#xA;override this.FindByNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;" Usage="roleStore.FindByNameAsync (normalizedName, cancellationToken)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member FindByNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt;)&gt;&#xA;override this.FindByNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt;)&gt;" Usage="roleStore.FindByNameAsync (normalizedName, cancellationToken)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TRole?&gt; FindByNameAsync (string normalizedName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="normalizedName">The normalized role name to look for.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Finds the role who has the specified normalized name as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that result of the look up.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClaimsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt; GetClaimsAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class System.Security.Claims.Claim&gt;&gt; GetClaimsAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClaimsAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of Claim))" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetClaimsAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt;&#xA;override this.GetClaimsAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt;" Usage="roleStore.GetClaimsAsync (role, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt; GetClaimsAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClaimsAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of Claim))" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleClaimStore`1.GetClaimsAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Security.Claims.Claim&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role whose claims should be retrieved.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Get the claims associated with the specified <paramref name="role" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that contains the claims granted to a role.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedRoleNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetNormalizedRoleNameAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetNormalizedRoleNameAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNormalizedRoleNameAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetNormalizedRoleNameAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetNormalizedRoleNameAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="roleStore.GetNormalizedRoleNameAsync (role, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string?&gt; GetNormalizedRoleNameAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role whose normalized name should be retrieved.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Get a role's normalized name as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that contains the name of the role.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetRoleIdAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetRoleIdAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoleIdAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetRoleIdAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetRoleIdAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="roleStore.GetRoleIdAsync (role, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetRoleIdAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleIdAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.GetRoleIdAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role whose ID should be returned.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the ID for a role from the store as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that contains the ID of the role.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetRoleNameAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetRoleNameAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoleNameAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetRoleNameAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetRoleNameAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="roleStore.GetRoleNameAsync (role, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetRoleNameAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleNameAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string?&gt; GetRoleNameAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.GetRoleNameAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role whose name should be returned.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the name of a role from the store as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that contains the name of the role.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveClaimAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveClaimAsync (TRole role, System.Security.Claims.Claim claim, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveClaimAsync(!TRole role, class System.Security.Claims.Claim claim, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveClaimAsync (role As TRole, claim As Claim, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member RemoveClaimAsync : 'Role * System.Security.Claims.Claim * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RemoveClaimAsync : 'Role * System.Security.Claims.Claim * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="roleStore.RemoveClaimAsync (role, claim, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveClaimAsync (TRole role, System.Security.Claims.Claim claim, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveClaimAsync (role As TRole, claim As Claim, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleClaimStore`1.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role to remove the claim from.</param>
        <param name="claim">The claim to remove from the role.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Removes the <paramref name="claim" /> given from the specified <paramref name="role" />.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;TRole&gt; ^ Roles { System::Linq::IQueryable&lt;TRole&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable&lt;TRole&gt; Roles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;!TRole&gt; Roles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Roles As IQueryable(Of TRole)" />
      <MemberSignature Language="F#" Value="member this.Roles : System.Linq.IQueryable&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt;)&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole&lt;'Key, 'UserRole, 'RoleClaim&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole&lt;'Key&gt; and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim&lt;'Key&gt;)&gt;.Roles" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Roles : System.Linq.IQueryable&lt;'Role (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt;)&gt;" Usage="Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore&lt;'Role, 'Context, 'Key, 'UserRole, 'RoleClaim (requires 'Role :&gt; Microsoft.AspNetCore.Identity.IdentityRole&lt;'Key&gt; and 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Key :&gt; System.IEquatable&lt;'Key&gt; and 'UserRole :&gt; Microsoft.AspNetCore.Identity.IdentityUserRole&lt;'Key&gt; and 'UserRole : (new : unit -&gt; 'UserRole) and 'RoleClaim :&gt; Microsoft.AspNetCore.Identity.IdentityRoleClaim&lt;'Key&gt; and 'RoleClaim : (new : unit -&gt; 'RoleClaim))&gt;.Roles" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Identity.IQueryableRoleStore`1.Roles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TRole&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A navigation property for the roles the store contains.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task SaveChanges (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SaveChanges(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveChanges (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="roleStore.SaveChanges cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="aspnetcore-7.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>Saves the current store.</summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNormalizedRoleNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetNormalizedRoleNameAsync (TRole role, string normalizedName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetNormalizedRoleNameAsync(!TRole role, string normalizedName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetNormalizedRoleNameAsync (role As TRole, normalizedName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetNormalizedRoleNameAsync : 'Role * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetNormalizedRoleNameAsync : 'Role * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="roleStore.SetNormalizedRoleNameAsync (role, normalizedName, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetNormalizedRoleNameAsync (TRole role, string? normalizedName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="normalizedName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role whose normalized name should be set.</param>
        <param name="normalizedName">The normalized name to set</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Set a role's normalized name as an asynchronous operation.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRoleNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetRoleNameAsync (TRole role, string roleName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetRoleNameAsync(!TRole role, string roleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetRoleNameAsync (role As TRole, roleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member SetRoleNameAsync : 'Role * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetRoleNameAsync : 'Role * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="roleStore.SetRoleNameAsync (role, roleName, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetRoleNameAsync (TRole role, string roleName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetRoleNameAsync (role As TRole, roleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetRoleNameAsync (TRole role, string? roleName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="aspnetcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role whose name should be set.</param>
        <param name="roleName">The name of the role.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Sets the name of a role in the store as an asynchronous operation.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfDisposed">
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfDisposed();" />
      <MemberSignature Language="C#" Value="protected void ThrowIfDisposed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfDisposed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfDisposed ()" />
      <MemberSignature Language="F#" Value="member this.ThrowIfDisposed : unit -&gt; unit" Usage="roleStore.ThrowIfDisposed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws if this class has been disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt; UpdateAsync (TRole role, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Identity.IdentityResult&gt; UpdateAsync(!TRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (role As TRole, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IdentityResult)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;&#xA;override this.UpdateAsync : 'Role * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;" Usage="roleStore.UpdateAsync (role, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Identity.IRoleStore`1.UpdateAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Identity.IdentityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="TRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="role">The role to update in the store.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Updates a role in a store as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the <see cref="T:Microsoft.AspNetCore.Identity.IdentityResult" /> of the asynchronous query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
