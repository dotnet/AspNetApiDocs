<Type Name="IOutputCacheBufferStore" FullName="Microsoft.AspNetCore.OutputCaching.IOutputCacheBufferStore">
  <TypeSignature Language="C#" Value="public interface IOutputCacheBufferStore : Microsoft.AspNetCore.OutputCaching.IOutputCacheStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IOutputCacheBufferStore implements class Microsoft.AspNetCore.OutputCaching.IOutputCacheStore" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.OutputCaching.IOutputCacheBufferStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputCacheBufferStore&#xA;Implements IOutputCacheStore" />
  <TypeSignature Language="F#" Value="type IOutputCacheBufferStore = interface&#xA;    interface IOutputCacheStore" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.OutputCaching</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.OutputCaching.IOutputCacheStore</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask SetAsync (string key, System.Buffers.ReadOnlySequence&lt;byte&gt; value, ReadOnlyMemory&lt;string&gt; tags, TimeSpan validFor, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask SetAsync(string key, valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt; value, valuetype System.ReadOnlyMemory`1&lt;string&gt; tags, valuetype System.TimeSpan validFor, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OutputCaching.IOutputCacheBufferStore.SetAsync(System.String,System.Buffers.ReadOnlySequence{System.Byte},System.ReadOnlyMemory{System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAsync (key As String, value As ReadOnlySequence(Of Byte), tags As ReadOnlyMemory(Of String), validFor As TimeSpan, cancellationToken As CancellationToken) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member SetAsync : string * System.Buffers.ReadOnlySequence&lt;byte&gt; * ReadOnlyMemory&lt;string&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="iOutputCacheBufferStore.SetAsync (key, value, tags, validFor, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OutputCaching</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" />
        <Parameter Name="tags" Type="System.ReadOnlyMemory&lt;System.String&gt;" />
        <Parameter Name="validFor" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <param name="tags">To be added.</param>
        <param name="validFor">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;bool&gt; TryGetAsync (string key, System.IO.Pipelines.PipeWriter destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt; TryGetAsync(string key, class System.IO.Pipelines.PipeWriter destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.OutputCaching.IOutputCacheBufferStore.TryGetAsync(System.String,System.IO.Pipelines.PipeWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetAsync (key As String, destination As PipeWriter, cancellationToken As CancellationToken) As ValueTask(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryGetAsync : string * System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;" Usage="iOutputCacheBufferStore.TryGetAsync (key, destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OutputCaching</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="destination" Type="System.IO.Pipelines.PipeWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
