<Type Name="MapWhenExtensions" FullName="Owin.MapWhenExtensions">
  <TypeSignature Language="C#" Value="public static class MapWhenExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MapWhenExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Owin.MapWhenExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MapWhenExtensions" />
  <TypeSignature Language="F#" Value="type MapWhenExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Owin</AssemblyName>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for the MapWhenMiddleware
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MapWhen">
      <MemberSignature Language="C#" Value="public static Owin.IAppBuilder MapWhen (this Owin.IAppBuilder app, Func&lt;Microsoft.Owin.IOwinContext,bool&gt; predicate, Action&lt;Owin.IAppBuilder&gt; configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Owin.IAppBuilder MapWhen(class Owin.IAppBuilder app, class System.Func`2&lt;class Microsoft.Owin.IOwinContext, bool&gt; predicate, class System.Action`1&lt;class Owin.IAppBuilder&gt; configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Owin.MapWhenExtensions.MapWhen(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Boolean},System.Action{Owin.IAppBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapWhen (app As IAppBuilder, predicate As Func(Of IOwinContext, Boolean), configuration As Action(Of IAppBuilder)) As IAppBuilder" />
      <MemberSignature Language="F#" Value="static member MapWhen : Owin.IAppBuilder * Func&lt;Microsoft.Owin.IOwinContext, bool&gt; * Action&lt;Owin.IAppBuilder&gt; -&gt; Owin.IAppBuilder" Usage="Owin.MapWhenExtensions.MapWhen (app, predicate, configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Owin.IAppBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Owin.IAppBuilder" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;Microsoft.Owin.IOwinContext,System.Boolean&gt;" />
        <Parameter Name="configuration" Type="System.Action&lt;Owin.IAppBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="app" />
        <param name="predicate">Invoked with the request environment to determine if the branch should be taken</param>
        <param name="configuration">Configures a branch to take</param>
        <summary>
            Branches the request pipeline based on the result of the given predicate.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapWhenAsync">
      <MemberSignature Language="C#" Value="public static Owin.IAppBuilder MapWhenAsync (this Owin.IAppBuilder app, Func&lt;Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task&lt;bool&gt;&gt; predicate, Action&lt;Owin.IAppBuilder&gt; configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Owin.IAppBuilder MapWhenAsync(class Owin.IAppBuilder app, class System.Func`2&lt;class Microsoft.Owin.IOwinContext, class System.Threading.Tasks.Task`1&lt;bool&gt;&gt; predicate, class System.Action`1&lt;class Owin.IAppBuilder&gt; configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Owin.MapWhenExtensions.MapWhenAsync(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}},System.Action{Owin.IAppBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapWhenAsync (app As IAppBuilder, predicate As Func(Of IOwinContext, Task(Of Boolean)), configuration As Action(Of IAppBuilder)) As IAppBuilder" />
      <MemberSignature Language="F#" Value="static member MapWhenAsync : Owin.IAppBuilder * Func&lt;Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task&lt;bool&gt;&gt; * Action&lt;Owin.IAppBuilder&gt; -&gt; Owin.IAppBuilder" Usage="Owin.MapWhenExtensions.MapWhenAsync (app, predicate, configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Owin</AssemblyName>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Owin.IAppBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Owin.IAppBuilder" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="configuration" Type="System.Action&lt;Owin.IAppBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="app" />
        <param name="predicate">Invoked asynchronously with the request environment to determine if the branch should be taken</param>
        <param name="configuration">Configures a branch to take</param>
        <summary>
            Branches the request pipeline based on the async result of the given predicate.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
