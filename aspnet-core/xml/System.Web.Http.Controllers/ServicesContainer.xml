<Type Name="ServicesContainer" FullName="System.Web.Http.Controllers.ServicesContainer">
  <TypeSignature Language="C#" Value="public abstract class ServicesContainer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServicesContainer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.Controllers.ServicesContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServicesContainer&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ServicesContainer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An abstract class that provides a container for services used by ASP.NET Web API.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServicesContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (serviceType As Type, service As Object)" />
      <MemberSignature Language="F#" Value="member this.Add : Type * obj -&gt; unit" Usage="servicesContainer.Add (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="service">The service instance.</param>
        <summary> Adds a service to the end of services list for the given service type.  </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (Type serviceType, System.Collections.Generic.IEnumerable&lt;object&gt; services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Type serviceType, class System.Collections.Generic.IEnumerable`1&lt;object&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (serviceType As Type, services As IEnumerable(Of Object))" />
      <MemberSignature Language="F#" Value="member this.AddRange : Type * seq&lt;obj&gt; -&gt; unit" Usage="servicesContainer.AddRange (serviceType, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="services" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="services">The services to add.</param>
        <summary> Adds the services of the specified collection to the end of the services list for the given service type. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear (serviceType As Type)" />
      <MemberSignature Language="F#" Value="abstract member Clear : Type -&gt; unit&#xA;override this.Clear : Type -&gt; unit" Usage="servicesContainer.Clear serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type to clear from the services list.</param>
        <summary> Removes all the service instances of the given service type.  </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMultiple">
      <MemberSignature Language="C#" Value="protected virtual void ClearMultiple (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearMultiple(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearMultiple (serviceType As Type)" />
      <MemberSignature Language="F#" Value="abstract member ClearMultiple : Type -&gt; unit&#xA;override this.ClearMultiple : Type -&gt; unit" Usage="servicesContainer.ClearMultiple serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type to remove.</param>
        <summary>Removes all instances of a multi-instance service type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSingle">
      <MemberSignature Language="C#" Value="protected abstract void ClearSingle (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearSingle(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ClearSingle (serviceType As Type)" />
      <MemberSignature Language="F#" Value="abstract member ClearSingle : Type -&gt; unit" Usage="servicesContainer.ClearSingle serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type to remove.</param>
        <summary>Removes a single-instance service type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="servicesContainer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Type serviceType, Predicate&lt;object&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Type serviceType, class System.Predicate`1&lt;object&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (serviceType As Type, match As Predicate(Of Object)) As Integer" />
      <MemberSignature Language="F#" Value="member this.FindIndex : Type * Predicate&lt;obj&gt; -&gt; int" Usage="servicesContainer.FindIndex (serviceType, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="match">The delegate that defines the conditions of the element to search for. </param>
        <summary> Searches for a service that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence. </summary>
        <returns>The zero-based index of the first occurrence, if found; otherwise, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public abstract object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj" Usage="servicesContainer.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <summary>Gets a service instance of a specified type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceInstances">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.List&lt;object&gt; GetServiceInstances (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;object&gt; GetServiceInstances(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetServiceInstances (serviceType As Type) As List(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceInstances : Type -&gt; System.Collections.Generic.List&lt;obj&gt;" Usage="servicesContainer.GetServiceInstances serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <summary>Gets a mutable list of service instances of a specified type.</summary>
        <returns>A mutable list of service instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;object&gt; GetServices (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetServices(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetServices (serviceType As Type) As IEnumerable(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member GetServices : Type -&gt; seq&lt;obj&gt;" Usage="servicesContainer.GetServices serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <summary>Gets a collection of service instanes of a specified type.</summary>
        <returns>A collection of service instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (Type serviceType, int index, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(class System.Type serviceType, int32 index, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (serviceType As Type, index As Integer, service As Object)" />
      <MemberSignature Language="F#" Value="member this.Insert : Type * int * obj -&gt; unit" Usage="servicesContainer.Insert (serviceType, index, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="index">The zero-based index at which the service should be inserted. If <see cref="F:System.Int32.MaxValue" /> is passed, ensures the element is added to the end.</param>
        <param name="service">The service to insert.</param>
        <summary> Inserts a service into the collection at the specified index. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (Type serviceType, int index, System.Collections.Generic.IEnumerable&lt;object&gt; services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(class System.Type serviceType, int32 index, class System.Collections.Generic.IEnumerable`1&lt;object&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (serviceType As Type, index As Integer, services As IEnumerable(Of Object))" />
      <MemberSignature Language="F#" Value="member this.InsertRange : Type * int * seq&lt;obj&gt; -&gt; unit" Usage="servicesContainer.InsertRange (serviceType, index, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="services" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="index">The zero-based index at which the new elements should be inserted. If <see cref="F:System.Int32.MaxValue" /> is passed, ensures the elements are added to the end.</param>
        <param name="services">The collection of services to insert.</param>
        <summary> Inserts the elements of the collection into the service list at the specified index. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleService">
      <MemberSignature Language="C#" Value="public abstract bool IsSingleService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSingleService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSingleService (serviceType As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsSingleService : Type -&gt; bool" Usage="servicesContainer.IsSingleService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">type of service to query</param>
        <summary> Determine whether the service type should be fetched with GetService or GetServices.  </summary>
        <returns>true iff the service is singular. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (serviceType As Type, service As Object) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Remove : Type * obj -&gt; bool" Usage="servicesContainer.Remove (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="service">The service instance to remove.</param>
        <summary> Removes the first occurrence of the given service from the service list for the given service type. </summary>
        <returns>true if the item is successfully removed; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Type serviceType, Predicate&lt;object&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Type serviceType, class System.Predicate`1&lt;object&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (serviceType As Type, match As Predicate(Of Object)) As Integer" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Type * Predicate&lt;obj&gt; -&gt; int" Usage="servicesContainer.RemoveAll (serviceType, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="match">The delegate that defines the conditions of the elements to remove.</param>
        <summary> Removes all the elements that match the conditions defined by the specified predicate. </summary>
        <returns>The number of elements removed from the list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (Type serviceType, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(class System.Type serviceType, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (serviceType As Type, index As Integer)" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : Type * int -&gt; unit" Usage="servicesContainer.RemoveAt (serviceType, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="index">The zero-based index of the service to remove.</param>
        <summary> Removes the service at the specified index. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (serviceType As Type, service As Object)" />
      <MemberSignature Language="F#" Value="member this.Replace : Type * obj -&gt; unit" Usage="servicesContainer.Replace (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="service">The service instance.</param>
        <summary> Replaces all existing services for the given service type with the given service instance. This works for both singular and plural services.  </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceMultiple">
      <MemberSignature Language="C#" Value="protected virtual void ReplaceMultiple (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReplaceMultiple(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReplaceMultiple (serviceType As Type, service As Object)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceMultiple : Type * obj -&gt; unit&#xA;override this.ReplaceMultiple : Type * obj -&gt; unit" Usage="servicesContainer.ReplaceMultiple (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of service.</param>
        <param name="service">The service instance that will replace the current services of this type.</param>
        <summary>Replaces all instances of a multi-instance service with a new instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceRange">
      <MemberSignature Language="C#" Value="public void ReplaceRange (Type serviceType, System.Collections.Generic.IEnumerable&lt;object&gt; services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceRange(class System.Type serviceType, class System.Collections.Generic.IEnumerable`1&lt;object&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceRange (serviceType As Type, services As IEnumerable(Of Object))" />
      <MemberSignature Language="F#" Value="member this.ReplaceRange : Type * seq&lt;obj&gt; -&gt; unit" Usage="servicesContainer.ReplaceRange (serviceType, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="services" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <param name="services">The service instances.</param>
        <summary> Replaces all existing services for the given service type with the given service instances. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSingle">
      <MemberSignature Language="C#" Value="protected abstract void ReplaceSingle (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReplaceSingle(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ReplaceSingle (serviceType As Type, service As Object)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSingle : Type * obj -&gt; unit" Usage="servicesContainer.ReplaceSingle (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type. </param>
        <param name="service">The service instance.</param>
        <summary>Replaces a single-instance service of a specified type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="protected virtual void ResetCache (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetCache(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ResetCache (serviceType As Type)" />
      <MemberSignature Language="F#" Value="abstract member ResetCache : Type -&gt; unit&#xA;override this.ResetCache : Type -&gt; unit" Usage="servicesContainer.ResetCache serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type.</param>
        <summary>Removes the cached values for a single service type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
