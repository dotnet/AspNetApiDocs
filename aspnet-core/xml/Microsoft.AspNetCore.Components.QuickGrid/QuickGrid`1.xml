<Type Name="QuickGrid&lt;TGridItem&gt;" FullName="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;TGridItem&gt;">
  <TypeSignature Language="C#" Value="public class QuickGrid&lt;TGridItem&gt; : Microsoft.AspNetCore.Components.ComponentBase, IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuickGrid`1&lt;TGridItem&gt; extends Microsoft.AspNetCore.Components.ComponentBase implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1" />
  <TypeSignature Language="VB.NET" Value="Public Class QuickGrid(Of TGridItem)&#xA;Inherits ComponentBase&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type QuickGrid&lt;'GridItem&gt; = class&#xA;    inherit ComponentBase&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TGridItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Components.ComponentBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.AspNetCore.Components.CascadingTypeParameter("TGridItem")]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.CascadingTypeParameter("TGridItem")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
    <summary>
            A component that displays a grid.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuickGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt;? AdditionalAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; AdditionalAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.AdditionalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalAttributes As IReadOnlyDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.AdditionalAttributes : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.AdditionalAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter(CaptureUnmatchedValues=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter(CaptureUnmatchedValues=true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildRenderTree">
      <MemberSignature Language="C#" Value="protected override void BuildRenderTree (Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BuildRenderTree(class Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BuildRenderTree (__builder As RenderTreeBuilder)" />
      <MemberSignature Language="F#" Value="override this.BuildRenderTree : Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder -&gt; unit" Usage="quickGrid.BuildRenderTree __builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="__builder" Type="Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder" />
      </Parameters>
      <Docs>
        <param name="__builder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment? ChildContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment ChildContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ChildContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildContent As RenderFragment" />
      <MemberSignature Language="F#" Value="member this.ChildContent : Microsoft.AspNetCore.Components.RenderFragment with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.ChildContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines the child components of this instance. For example, you may define columns by adding
            components derived from the <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1" /> base class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public string? Class { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Class" />
      <MemberSignature Language="VB.NET" Value="Public Property Class As String" />
      <MemberSignature Language="F#" Value="member this.Class : string with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional CSS class name. If given, this will be included in the class attribute of the rendered table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="quickGrid.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ItemKey">
      <MemberSignature Language="C#" Value="public Func&lt;TGridItem,object&gt; ItemKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;!TGridItem, object&gt; ItemKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemKey As Func(Of TGridItem, Object)" />
      <MemberSignature Language="F#" Value="member this.ItemKey : Func&lt;'GridItem, obj&gt; with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.ItemKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TGridItem,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Optionally defines a value for @key on each rendered row. Typically this should be used to specify a
             unique identifier, such as a primary key value, for each data item.
            
             This allows the grid to preserve the association between row elements and data items based on their
             unique identifiers, even when the TGridItem instances are replaced by new copies (for
             example, after a new query against the underlying data store).
            
             If not set, the @key will be the TGridItem instance itself.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;TGridItem&gt;? Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;!TGridItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As IQueryable(Of TGridItem)" />
      <MemberSignature Language="F#" Value="member this.Items : System.Linq.IQueryable&lt;'GridItem&gt; with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TGridItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A queryable source of data for the grid.
            
             This could be in-memory data converted to queryable using the
             <see cref="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" /> extension method,
             or an EntityFramework DataSet or an <see cref="T:System.Linq.IQueryable" /> derived from it.
            
             You should supply either <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items" /> or <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider" />, but not both.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemSize">
      <MemberSignature Language="C#" Value="public float ItemSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ItemSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemSize As Single" />
      <MemberSignature Language="F#" Value="member this.ItemSize : single with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.ItemSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This is applicable only when using <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize" />. It defines an expected height in pixels for
            each row, allowing the virtualization mechanism to fetch the correct number of items to match the display
            size and to ensure accurate scrolling.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsProvider">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.QuickGrid.GridItemsProvider&lt;TGridItem&gt;? ItemsProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.QuickGrid.GridItemsProvider`1&lt;!TGridItem&gt; ItemsProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsProvider As GridItemsProvider(Of TGridItem)" />
      <MemberSignature Language="F#" Value="member this.ItemsProvider : Microsoft.AspNetCore.Components.QuickGrid.GridItemsProvider&lt;'GridItem&gt; with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.ItemsProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.QuickGrid.GridItemsProvider&lt;TGridItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A callback that supplies data for the rid.
            
             You should supply either <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items" /> or <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider" />, but not both.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterRenderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task OnAfterRenderAsync (bool firstRender);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task OnAfterRenderAsync(bool firstRender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.OnAfterRenderAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAfterRenderAsync (firstRender As Boolean) As Task" />
      <MemberSignature Language="F#" Value="override this.OnAfterRenderAsync : bool -&gt; System.Threading.Tasks.Task" Usage="quickGrid.OnAfterRenderAsync firstRender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstRender" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="firstRender">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnParametersSetAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task OnParametersSetAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task OnParametersSetAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.OnParametersSetAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnParametersSetAsync () As Task" />
      <MemberSignature Language="F#" Value="override this.OnParametersSetAsync : unit -&gt; System.Threading.Tasks.Task" Usage="quickGrid.OnParametersSetAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Pagination">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.QuickGrid.PaginationState? Pagination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.QuickGrid.PaginationState Pagination" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Pagination" />
      <MemberSignature Language="VB.NET" Value="Public Property Pagination As PaginationState" />
      <MemberSignature Language="F#" Value="member this.Pagination : Microsoft.AspNetCore.Components.QuickGrid.PaginationState with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.Pagination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.QuickGrid.PaginationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Optionally links this <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1" /> instance with a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState" /> model,
             causing the grid to fetch and render only the current page of data.
            
             This is normally used in conjunction with a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Paginator" /> component or some other UI logic
             that displays and updates the supplied <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState" /> instance.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RefreshDataAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RefreshDataAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.RefreshDataAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshDataAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.RefreshDataAsync : unit -&gt; System.Threading.Tasks.Task" Usage="quickGrid.RefreshDataAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Instructs the grid to re-fetch and render the current data from the supplied data source
            (either <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items" /> or <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider" />).
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the completion of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowColumnOptionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ShowColumnOptionsAsync (Microsoft.AspNetCore.Components.QuickGrid.ColumnBase&lt;TGridItem&gt; column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ShowColumnOptionsAsync(class Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1&lt;!TGridItem&gt; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ShowColumnOptionsAsync(Microsoft.AspNetCore.Components.QuickGrid.ColumnBase{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowColumnOptionsAsync (column As ColumnBase(Of TGridItem)) As Task" />
      <MemberSignature Language="F#" Value="member this.ShowColumnOptionsAsync : Microsoft.AspNetCore.Components.QuickGrid.ColumnBase&lt;'GridItem&gt; -&gt; System.Threading.Tasks.Task" Usage="quickGrid.ShowColumnOptionsAsync column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.AspNetCore.Components.QuickGrid.ColumnBase&lt;TGridItem&gt;" />
      </Parameters>
      <Docs>
        <param name="column">The column whose options are to be displayed, if any are available.</param>
        <summary>
            Displays the <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.ColumnOptions" /> UI for the specified column, closing any other column
            options UI that was previously displayed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortByColumnAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SortByColumnAsync (Microsoft.AspNetCore.Components.QuickGrid.ColumnBase&lt;TGridItem&gt; column, Microsoft.AspNetCore.Components.QuickGrid.SortDirection direction = Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Auto);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SortByColumnAsync(class Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1&lt;!TGridItem&gt; column, valuetype Microsoft.AspNetCore.Components.QuickGrid.SortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.SortByColumnAsync(Microsoft.AspNetCore.Components.QuickGrid.ColumnBase{`0},Microsoft.AspNetCore.Components.QuickGrid.SortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortByColumnAsync (column As ColumnBase(Of TGridItem), Optional direction As SortDirection = Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Auto) As Task" />
      <MemberSignature Language="F#" Value="member this.SortByColumnAsync : Microsoft.AspNetCore.Components.QuickGrid.ColumnBase&lt;'GridItem&gt; * Microsoft.AspNetCore.Components.QuickGrid.SortDirection -&gt; System.Threading.Tasks.Task" Usage="quickGrid.SortByColumnAsync (column, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.AspNetCore.Components.QuickGrid.ColumnBase&lt;TGridItem&gt;" />
        <Parameter Name="direction" Type="Microsoft.AspNetCore.Components.QuickGrid.SortDirection" />
      </Parameters>
      <Docs>
        <param name="column">The column that defines the new sort order.</param>
        <param name="direction">The direction of sorting. If the value is <see cref="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Auto" />, then it will toggle the direction on each call.</param>
        <summary>
            Sets the grid's current sort column to the specified <paramref name="column" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the completion of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public string? Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Property Theme As String" />
      <MemberSignature Language="F#" Value="member this.Theme : string with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A theme name, with default value "default". This affects which styling rules match the table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Virtualize">
      <MemberSignature Language="C#" Value="public bool Virtualize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Virtualize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize" />
      <MemberSignature Language="VB.NET" Value="Public Property Virtualize As Boolean" />
      <MemberSignature Language="F#" Value="member this.Virtualize : bool with get, set" Usage="Microsoft.AspNetCore.Components.QuickGrid.QuickGrid&lt;'GridItem&gt;.Virtualize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.QuickGrid</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.AspNetCore.Components.Parameter]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.AspNetCore.Components.Parameter&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             If true, the grid will be rendered with virtualization. This is normally used in conjunction with
             scrolling and causes the grid to fetch and render only the data around the current scroll viewport.
             This can greatly improve the performance when scrolling through large data sets.
            
             If you use <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize" />, you should supply a value for <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemSize" /> and must
             ensure that every row renders with the same constant height.
            
             Generally it's preferable not to use <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize" /> if the amount of data being rendered
             is small or if you are using pagination.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
