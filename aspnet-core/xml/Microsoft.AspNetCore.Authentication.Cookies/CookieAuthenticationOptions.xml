<Type Name="CookieAuthenticationOptions" FullName="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class CookieAuthenticationOptions : Microsoft::AspNetCore::Authentication::AuthenticationSchemeOptions" />
  <TypeSignature Language="C#" Value="public class CookieAuthenticationOptions : Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CookieAuthenticationOptions extends Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class CookieAuthenticationOptions&#xA;Inherits AuthenticationSchemeOptions" />
  <TypeSignature Language="F#" Value="type CookieAuthenticationOptions = class&#xA;    inherit AuthenticationSchemeOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Configuration options for <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieAuthenticationOptions();" />
      <MemberSignature Language="C#" Value="public CookieAuthenticationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create an instance of the options initialized with the default values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessDeniedPath">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::PathString AccessDeniedPath { Microsoft::AspNetCore::Http::PathString get(); void set(Microsoft::AspNetCore::Http::PathString value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.PathString AccessDeniedPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Http.PathString AccessDeniedPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.AccessDeniedPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessDeniedPath As PathString" />
      <MemberSignature Language="F#" Value="member this.AccessDeniedPath : Microsoft.AspNetCore.Http.PathString with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.AccessDeniedPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.PathString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The AccessDeniedPath property is used by the handler for the redirection target when handling ForbidAsync.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookie">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::CookieBuilder ^ Cookie { Microsoft::AspNetCore::Http::CookieBuilder ^ get(); void set(Microsoft::AspNetCore::Http::CookieBuilder ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.CookieBuilder Cookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.CookieBuilder Cookie" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookie As CookieBuilder" />
      <MemberSignature Language="F#" Value="member this.Cookie : Microsoft.AspNetCore.Http.CookieBuilder with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.CookieBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines the settings used to create the cookie.
            </summary>
        <value>To be added.</value>
        <remarks>
          <list type="bullet">
            <item>
              <description>The default value for cookie <see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Name" /> is <c>.AspNetCore.Cookies</c>.
            This value should be changed if you change the name of the <c>AuthenticationScheme</c>, especially if your
            system uses the cookie authentication handler multiple times.</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SameSite" /> determines if the browser should allow the cookie to be attached to same-site or cross-site requests.
            The default is <c>Lax</c>, which means the cookie is only allowed to be attached to cross-site requests using safe HTTP methods and same-site requests.</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.HttpOnly" /> determines if the browser should allow the cookie to be accessed by client-side JavaScript.
            The default is <c>true</c>, which means the cookie will only be passed to HTTP requests and is not made available to JavaScript on the page.</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Expiration" /> is currently ignored. Use <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ExpireTimeSpan" /> to control lifetime of cookie authentication.</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SecurePolicy" /> defaults to <see cref="F:Microsoft.AspNetCore.Http.CookieSecurePolicy.SameAsRequest" />.</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieDomain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string CookieDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieDomain As String" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Domain.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Domain.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            This property is obsolete and will be removed in a future version. The recommended alternative is <seealso cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Domain" /> on <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />.
            </para>
          <para>
            Determines the domain used to create the cookie. Is not provided by default.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieHttpOnly">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieHttpOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool CookieHttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieHttpOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieHttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieHttpOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.CookieHttpOnly : bool with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieHttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.SameSite.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.SameSite.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.HttpOnly.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.HttpOnly.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            This property is obsolete and will be removed in a future version. The recommended alternative is <seealso cref="P:Microsoft.AspNetCore.Http.CookieBuilder.HttpOnly" /> on <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />.
            </para>
          <para>
            Determines if the browser should allow the cookie to be accessed by client-side javascript. The
            default is true, which means the cookie will only be passed to http requests and is not made available
            to script on the page.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieManager">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Authentication::Cookies::ICookieManager ^ CookieManager { Microsoft::AspNetCore::Authentication::Cookies::ICookieManager ^ get(); void set(Microsoft::AspNetCore::Authentication::Cookies::ICookieManager ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authentication.Cookies.ICookieManager CookieManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authentication.Cookies.ICookieManager CookieManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieManager" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieManager As ICookieManager" />
      <MemberSignature Language="F#" Value="member this.CookieManager : Microsoft.AspNetCore.Authentication.Cookies.ICookieManager with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authentication.Cookies.ICookieManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The component used to get cookies from the request or set them on the response.
            
             ChunkingCookieManager will be used by default.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Domain.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Domain.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Name.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Name.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            This property is obsolete and will be removed in a future version. The recommended alternative is <seealso cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Name" /> on <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />.
            </para>
          <para>
            Determines the cookie name used to persist the identity. The default value is ".AspNetCore.Cookies".
            This value should be changed if you change the name of the AuthenticationScheme, especially if your
            system uses the cookie authentication handler multiple times.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string CookiePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CookiePath As String" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Path.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.Path.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            This property is obsolete and will be removed in a future version. The recommended alternative is <seealso cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Path" /> on <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />.
            </para>
          <para>
            Determines the path used to create the cookie. The default value is "/" for highest browser compatibility.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieSecure">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::CookieSecurePolicy CookieSecure { Microsoft::AspNetCore::Http::CookieSecurePolicy get(); void set(Microsoft::AspNetCore::Http::CookieSecurePolicy value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.CookieSecurePolicy CookieSecure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Http.CookieSecurePolicy CookieSecure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieSecure" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSecure As CookieSecurePolicy" />
      <MemberSignature Language="F#" Value="member this.CookieSecure : Microsoft.AspNetCore.Http.CookieSecurePolicy with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieSecure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.SecurePolicy.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is obsolete and will be removed in a future version. The recommended alternative is Cookie.SecurePolicy.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.CookieSecurePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            This property is obsolete and will be removed in a future version. The recommended alternative is <seealso cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SecurePolicy" /> on <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie" />.
            </para>
          <para>
            Determines if the cookie should only be transmitted on HTTPS request. The default is to limit the cookie
            to HTTPS requests if the page which is doing the SignIn is also HTTPS. If you have an HTTPS sign in page
            and portions of your site are HTTP you may need to change this value.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataProtectionProvider">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::DataProtection::IDataProtectionProvider ^ DataProtectionProvider { Microsoft::AspNetCore::DataProtection::IDataProtectionProvider ^ get(); void set(Microsoft::AspNetCore::DataProtection::IDataProtectionProvider ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.DataProtection.IDataProtectionProvider DataProtectionProvider { get; set; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.DataProtection.IDataProtectionProvider DataProtectionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.DataProtectionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DataProtectionProvider As IDataProtectionProvider" />
      <MemberSignature Language="F#" Value="member this.DataProtectionProvider : Microsoft.AspNetCore.DataProtection.IDataProtectionProvider with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.DataProtectionProvider" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.DataProtection.IDataProtectionProvider? DataProtectionProvider { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.DataProtection.IDataProtectionProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set this will be used by the CookieAuthenticationHandler for data protection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Authentication::Cookies::CookieAuthenticationEvents ^ Events { Microsoft::AspNetCore::Authentication::Cookies::CookieAuthenticationEvents ^ get(); void set(Microsoft::AspNetCore::Authentication::Cookies::CookieAuthenticationEvents ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents Events { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents Events" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Events" />
      <MemberSignature Language="VB.NET" Value="Public Property Events As CookieAuthenticationEvents" />
      <MemberSignature Language="F#" Value="member this.Events : Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Provider may be assigned to an instance of an object created by the application at startup time. The handler
            calls methods on the provider which give the application control at certain points where processing is occurring.
            If it is not provided a default instance is supplied which does nothing when the methods are called.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpireTimeSpan">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ExpireTimeSpan { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="C#" Value="public TimeSpan ExpireTimeSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ExpireTimeSpan" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ExpireTimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpireTimeSpan As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.ExpireTimeSpan : TimeSpan with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ExpireTimeSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            Controls how much time the authentication ticket stored in the cookie will remain valid from the point it is created.
            The expiration information is stored in the protected cookie ticket. Because of that an expired cookie will be ignored
            even if it is passed to the server after the browser should have purged it.
            </para>
          <para>
            This is separate from the value of <see cref="P:Microsoft.AspNetCore.Http.CookieOptions.Expires" />, which specifies
            how long the browser will keep the cookie.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginPath">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::PathString LoginPath { Microsoft::AspNetCore::Http::PathString get(); void set(Microsoft::AspNetCore::Http::PathString value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.PathString LoginPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Http.PathString LoginPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.LoginPath" />
      <MemberSignature Language="VB.NET" Value="Public Property LoginPath As PathString" />
      <MemberSignature Language="F#" Value="member this.LoginPath : Microsoft.AspNetCore.Http.PathString with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.LoginPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.PathString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The LoginPath property is used by the handler for the redirection target when handling ChallengeAsync.
            The current url which is added to the LoginPath as a query string parameter named by the ReturnUrlParameter.
            Once a request to the LoginPath grants a new SignIn identity, the ReturnUrlParameter value is used to redirect
            the browser back to the original url.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogoutPath">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::PathString LogoutPath { Microsoft::AspNetCore::Http::PathString get(); void set(Microsoft::AspNetCore::Http::PathString value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.PathString LogoutPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Http.PathString LogoutPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.LogoutPath" />
      <MemberSignature Language="VB.NET" Value="Public Property LogoutPath As PathString" />
      <MemberSignature Language="F#" Value="member this.LogoutPath : Microsoft.AspNetCore.Http.PathString with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.LogoutPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.PathString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If the LogoutPath is provided the handler then a request to that path will redirect based on the ReturnUrlParameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnUrlParameter">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReturnUrlParameter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string ReturnUrlParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReturnUrlParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ReturnUrlParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnUrlParameter As String" />
      <MemberSignature Language="F#" Value="member this.ReturnUrlParameter : string with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ReturnUrlParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The ReturnUrlParameter determines the name of the query string parameter which is appended by the handler
            during a Challenge. This is also the query string parameter looked for when a request arrives on the login
            path or logout path, in order to return to the original url after the action is performed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStore">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Authentication::Cookies::ITicketStore ^ SessionStore { Microsoft::AspNetCore::Authentication::Cookies::ITicketStore ^ get(); void set(Microsoft::AspNetCore::Authentication::Cookies::ITicketStore ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authentication.Cookies.ITicketStore SessionStore { get; set; }" FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authentication.Cookies.ITicketStore SessionStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.SessionStore" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionStore As ITicketStore" />
      <MemberSignature Language="F#" Value="member this.SessionStore : Microsoft.AspNetCore.Authentication.Cookies.ITicketStore with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.SessionStore" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authentication.Cookies.ITicketStore? SessionStore { get; set; }" FrameworkAlternate="aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authentication.Cookies.ITicketStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional container in which to store the identity across requests. When used, only a session identifier is sent
            to the client. This can be used to mitigate potential problems with very large identities.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As Boolean" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The SlidingExpiration is set to true to instruct the handler to re-issue a new cookie with a new
            expiration time any time it processes a request which is more than halfway through the expiration window.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TicketDataFormat">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Authentication::ISecureDataFormat&lt;Microsoft::AspNetCore::Authentication::AuthenticationTicket ^&gt; ^ TicketDataFormat { Microsoft::AspNetCore::Authentication::ISecureDataFormat&lt;Microsoft::AspNetCore::Authentication::AuthenticationTicket ^&gt; ^ get(); void set(Microsoft::AspNetCore::Authentication::ISecureDataFormat&lt;Microsoft::AspNetCore::Authentication::AuthenticationTicket ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authentication.ISecureDataFormat&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; TicketDataFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authentication.ISecureDataFormat`1&lt;class Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; TicketDataFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.TicketDataFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TicketDataFormat As ISecureDataFormat(Of AuthenticationTicket)" />
      <MemberSignature Language="F#" Value="member this.TicketDataFormat : Microsoft.AspNetCore.Authentication.ISecureDataFormat&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; with get, set" Usage="Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.TicketDataFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authentication.ISecureDataFormat&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The TicketDataFormat is used to protect and unprotect the identity and other properties which are stored in the
            cookie value. If not provided one will be created using <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.DataProtectionProvider" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
