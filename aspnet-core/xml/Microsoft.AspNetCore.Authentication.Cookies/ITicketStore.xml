<Type Name="ITicketStore" FullName="Microsoft.AspNetCore.Authentication.Cookies.ITicketStore">
  <TypeSignature Language="C++ CLI" Value="public interface class ITicketStore" />
  <TypeSignature Language="C#" Value="public interface ITicketStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITicketStore" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITicketStore" />
  <TypeSignature Language="F#" Value="type ITicketStore = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITicketStore" FrameworkAlternate="aspnetcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This provides an abstract storage mechanic to preserve identity information on the server
            while only sending a simple identifier key to the client. This is most commonly used to mitigate
            issues with serializing large identities into cookies.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ RemoveAsync(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveAsync (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAsync (key As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string -&gt; System.Threading.Tasks.Task" Usage="iTicketStore.RemoveAsync key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key associated with the identity.</param>
        <summary>
            Remove the identity associated with the given key.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveAsync (string key, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAsync (key As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RemoveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iTicketStore.RemoveAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key">The key associated with the identity.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Remove the identity associated with the given key.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveAsync (string key, Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync(string key, class Microsoft.AspNetCore.Http.HttpContext httpContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAsync (key As String, httpContext As HttpContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RemoveAsync : string * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iTicketStore.RemoveAsync (key, httpContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key">The key associated with the identity.</param>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Remove the identity associated with the given key.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ RenewAsync(System::String ^ key, Microsoft::AspNetCore::Authentication::AuthenticationTicket ^ ticket);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RenewAsync (string key, Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenewAsync(string key, class Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.AuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewAsync (key As String, ticket As AuthenticationTicket) As Task" />
      <MemberSignature Language="F#" Value="abstract member RenewAsync : string * Microsoft.AspNetCore.Authentication.AuthenticationTicket -&gt; System.Threading.Tasks.Task" Usage="iTicketStore.RenewAsync (key, ticket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="ticket" Type="Microsoft.AspNetCore.Authentication.AuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="key" />
        <param name="ticket" />
        <summary>
            Tells the store that the given identity should be updated.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RenewAsync (string key, Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenewAsync(string key, class Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.AuthenticationTicket,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenewAsync (key As String, ticket As AuthenticationTicket, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member RenewAsync : string * Microsoft.AspNetCore.Authentication.AuthenticationTicket * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RenewAsync : string * Microsoft.AspNetCore.Authentication.AuthenticationTicket * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iTicketStore.RenewAsync (key, ticket, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="ticket" Type="Microsoft.AspNetCore.Authentication.AuthenticationTicket" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key" />
        <param name="ticket" />
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Tells the store that the given identity should be updated.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RenewAsync (string key, Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenewAsync(string key, class Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, class Microsoft.AspNetCore.Http.HttpContext httpContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.AuthenticationTicket,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenewAsync (key As String, ticket As AuthenticationTicket, httpContext As HttpContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member RenewAsync : string * Microsoft.AspNetCore.Authentication.AuthenticationTicket * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RenewAsync : string * Microsoft.AspNetCore.Authentication.AuthenticationTicket * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iTicketStore.RenewAsync (key, ticket, httpContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="ticket" Type="Microsoft.AspNetCore.Authentication.AuthenticationTicket" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key" />
        <param name="ticket" />
        <param name="httpContext" />
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Tells the store that the given identity should be updated.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Authentication::AuthenticationTicket ^&gt; ^ RetrieveAsync(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; RetrieveAsync (string key);" FrameworkAlternate="aspnetcore-1.0;aspnetcore-1.1;aspnetcore-2.0;aspnetcore-2.1;aspnetcore-2.2;aspnetcore-3.0;aspnetcore-3.1;aspnetcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; RetrieveAsync(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveAsync (key As String) As Task(Of AuthenticationTicket)" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;" Usage="iTicketStore.RetrieveAsync key" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket?&gt; RetrieveAsync (string key);" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key associated with the identity.</param>
        <summary>
            Retrieves an identity from the store for the given key.
            </summary>
        <returns>The identity associated with the given key, or <c>null</c> if not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket?&gt; RetrieveAsync (string key, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; RetrieveAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrieveAsync (key As String, cancellationToken As CancellationToken) As Task(Of AuthenticationTicket)" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;&#xA;override this.RetrieveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;" Usage="iTicketStore.RetrieveAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key">The key associated with the identity.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Retrieves an identity from the store for the given key.
            </summary>
        <returns>The identity associated with the given key, or <c>null</c> if not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket?&gt; RetrieveAsync (string key, Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt; RetrieveAsync(string key, class Microsoft.AspNetCore.Http.HttpContext httpContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrieveAsync (key As String, httpContext As HttpContext, cancellationToken As CancellationToken) As Task(Of AuthenticationTicket)" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAsync : string * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;&#xA;override this.RetrieveAsync : string * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;" Usage="iTicketStore.RetrieveAsync (key, httpContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Authentication.AuthenticationTicket&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key">The key associated with the identity.</param>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Retrieves an identity from the store for the given key.
            </summary>
        <returns>The identity associated with the given key, or <c>null</c> if not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAsync">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ StoreAsync(Microsoft::AspNetCore::Authentication::AuthenticationTicket ^ ticket);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; StoreAsync (Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StoreAsync(class Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(Microsoft.AspNetCore.Authentication.AuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function StoreAsync (ticket As AuthenticationTicket) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StoreAsync : Microsoft.AspNetCore.Authentication.AuthenticationTicket -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTicketStore.StoreAsync ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="Microsoft.AspNetCore.Authentication.AuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">The identity information to store.</param>
        <summary>
            Store the identity ticket and return the associated key.
            </summary>
        <returns>The key that can be used to retrieve the identity later.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StoreAsync (Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StoreAsync(class Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(Microsoft.AspNetCore.Authentication.AuthenticationTicket,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StoreAsync (ticket As AuthenticationTicket, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StoreAsync : Microsoft.AspNetCore.Authentication.AuthenticationTicket * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.StoreAsync : Microsoft.AspNetCore.Authentication.AuthenticationTicket * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTicketStore.StoreAsync (ticket, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="Microsoft.AspNetCore.Authentication.AuthenticationTicket" Index="0" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="ticket">The identity information to store.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Store the identity ticket and return the associated key.
            </summary>
        <returns>The key that can be used to retrieve the identity later.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StoreAsync (Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StoreAsync(class Microsoft.AspNetCore.Authentication.AuthenticationTicket ticket, class Microsoft.AspNetCore.Http.HttpContext httpContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(Microsoft.AspNetCore.Authentication.AuthenticationTicket,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StoreAsync (ticket As AuthenticationTicket, httpContext As HttpContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StoreAsync : Microsoft.AspNetCore.Authentication.AuthenticationTicket * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.StoreAsync : Microsoft.AspNetCore.Authentication.AuthenticationTicket * Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTicketStore.StoreAsync (ticket, httpContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authentication.Cookies</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="Microsoft.AspNetCore.Authentication.AuthenticationTicket" Index="0" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" Index="1" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0" />
      </Parameters>
      <Docs>
        <param name="ticket">The identity information to store.</param>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Store the identity ticket and return the associated key.
            </summary>
        <returns>The key that can be used to retrieve the identity later.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
