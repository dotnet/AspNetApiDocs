<Type Name="WebpackDevMiddlewareOptions" FullName="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions">
  <TypeSignature Language="C++ CLI" Value="public ref class WebpackDevMiddlewareOptions" />
  <TypeSignature Language="C#" Value="public class WebpackDevMiddlewareOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebpackDevMiddlewareOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class WebpackDevMiddlewareOptions" />
  <TypeSignature Language="F#" Value="type WebpackDevMiddlewareOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1">
      <AttributeName Language="C#">[System.Obsolete("Use Microsoft.AspNetCore.SpaServices.Extensions")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.AspNetCore.SpaServices.Extensions")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Options for configuring a Webpack dev middleware compiler.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebpackDevMiddlewareOptions();" />
      <MemberSignature Language="C#" Value="public WebpackDevMiddlewareOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigFile">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string ConfigFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.ConfigFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigFile As String" />
      <MemberSignature Language="F#" Value="member this.ConfigFile : string with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.ConfigFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the Webpack configuration file to be used. If not set, defaults to 'webpack.config.js'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ EnvironmentVariables { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies additional environment variables to be passed to the Node instance hosting
            the webpack compiler.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvParam">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EnvParam { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="C#" Value="public object EnvParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnvParam" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.EnvParam" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvParam As Object" />
      <MemberSignature Language="F#" Value="member this.EnvParam : obj with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.EnvParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies a value for the "env" parameter to be passed into the Webpack configuration
            function. The value must be JSON-serializable, and will only be used if the Webpack
            configuration is exported as a function.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HotModuleReplacement">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotModuleReplacement { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool HotModuleReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotModuleReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property HotModuleReplacement As Boolean" />
      <MemberSignature Language="F#" Value="member this.HotModuleReplacement : bool with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, hot module replacement (HMR) will be enabled. This automatically updates Webpack-built
            resources (such as JavaScript, CSS, or images) in your web browser whenever source files are changed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HotModuleReplacementClientOptions">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ HotModuleReplacementClientOptions { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; HotModuleReplacementClientOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; HotModuleReplacementClientOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacementClientOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property HotModuleReplacementClientOptions As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.HotModuleReplacementClientOptions : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacementClientOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> 
            Specifies additional options to be passed to the Webpack Hot Middleware client, if used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HotModuleReplacementEndpoint">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HotModuleReplacementEndpoint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string HotModuleReplacementEndpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HotModuleReplacementEndpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacementEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property HotModuleReplacementEndpoint As String" />
      <MemberSignature Language="F#" Value="member this.HotModuleReplacementEndpoint : string with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacementEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set, overrides the URL that Webpack's client-side code will connect to when listening for updates.
            This must be a root-relative URL similar to "/__webpack_hmr" (which is the default endpoint).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HotModuleReplacementServerPort">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HotModuleReplacementServerPort { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int HotModuleReplacementServerPort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HotModuleReplacementServerPort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacementServerPort" />
      <MemberSignature Language="VB.NET" Value="Public Property HotModuleReplacementServerPort As Integer" />
      <MemberSignature Language="F#" Value="member this.HotModuleReplacementServerPort : int with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.HotModuleReplacementServerPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Overrides the internal port number that client-side HMR code will connect to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectPath">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProjectPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string ProjectPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProjectPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.ProjectPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectPath As String" />
      <MemberSignature Language="F#" Value="member this.ProjectPath : string with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.ProjectPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The root path of your project. Webpack runs in this context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReactHotModuleReplacement">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReactHotModuleReplacement { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool ReactHotModuleReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReactHotModuleReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.ReactHotModuleReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property ReactHotModuleReplacement As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReactHotModuleReplacement : bool with get, set" Usage="Microsoft.AspNetCore.SpaServices.Webpack.WebpackDevMiddlewareOptions.ReactHotModuleReplacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, enables React-specific extensions to Webpack's hot module replacement (HMR) feature.
            This enables React components to be updated without losing their in-memory state.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
