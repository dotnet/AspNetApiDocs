<Type Name="HostAuthenticationFilter" FullName="System.Web.Http.HostAuthenticationFilter">
  <TypeSignature Language="C#" Value="public class HostAuthenticationFilter : System.Web.Http.Filters.IAuthenticationFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostAuthenticationFilter extends System.Object implements class System.Web.Http.Filters.IAuthenticationFilter, class System.Web.Http.Filters.IFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.HostAuthenticationFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class HostAuthenticationFilter&#xA;Implements IAuthenticationFilter" />
  <TypeSignature Language="F#" Value="type HostAuthenticationFilter = class&#xA;    interface IAuthenticationFilter&#xA;    interface IFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Http.Owin</AssemblyName>
    <AssemblyVersion>5.2.9.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Http.Filters.IAuthenticationFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Http.Filters.IFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents an authentication filter that authenticates via OWIN middleware.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostAuthenticationFilter (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.HostAuthenticationFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String)" />
      <MemberSignature Language="F#" Value="new System.Web.Http.HostAuthenticationFilter : string -&gt; System.Web.Http.HostAuthenticationFilter" Usage="new System.Web.Http.HostAuthenticationFilter authenticationType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Owin</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">The authentication type of the OWIN middleware to use.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HostAuthenticationFilter" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.HostAuthenticationFilter.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowMultiple As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool" Usage="System.Web.Http.HostAuthenticationFilter.AllowMultiple" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.Http.Filters.IFilter.AllowMultiple</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Owin</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the filter allows multiple authentication.</summary>
        <value>true if the filter allows multiple authentication; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsync (System.Web.Http.Filters.HttpAuthenticationContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsync(class System.Web.Http.Filters.HttpAuthenticationContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.HostAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateAsync (context As HttpAuthenticationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsync : System.Web.Http.Filters.HttpAuthenticationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsync : System.Web.Http.Filters.HttpAuthenticationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hostAuthenticationFilter.AuthenticateAsync (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Owin</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.Filters.HttpAuthenticationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The authentication context.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>Asynchronously authenticates the request.</summary>
        <returns>The task that completes the authentication.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.HostAuthenticationFilter.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.Http.HostAuthenticationFilter.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Owin</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the authentication type of the OWIN middleware to use.</summary>
        <value>The authentication type of the OWIN middleware to use.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChallengeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChallengeAsync (System.Web.Http.Filters.HttpAuthenticationChallengeContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ChallengeAsync(class System.Web.Http.Filters.HttpAuthenticationChallengeContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.HostAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChallengeAsync (context As HttpAuthenticationChallengeContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ChallengeAsync : System.Web.Http.Filters.HttpAuthenticationChallengeContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ChallengeAsync : System.Web.Http.Filters.HttpAuthenticationChallengeContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hostAuthenticationFilter.ChallengeAsync (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Http.Owin</AssemblyName>
        <AssemblyVersion>5.2.9.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.Http.Filters.HttpAuthenticationChallengeContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The context.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>Asynchronously challenges an authentication.</summary>
        <returns>The task that completes the challenge.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
