<Type Name="CascadingValueServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class CascadingValueServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CascadingValueServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CascadingValueServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type CascadingValueServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for configuring cascading values on an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCascadingValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddCascadingValue&lt;TValue&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, Func&lt;IServiceProvider,Microsoft.AspNetCore.Components.CascadingValueSource&lt;TValue&gt;&gt; sourceFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddCascadingValue&lt;TValue&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, class System.Func`2&lt;class System.IServiceProvider, class Microsoft.AspNetCore.Components.CascadingValueSource`1&lt;!!TValue&gt;&gt; sourceFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.AddCascadingValue``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Microsoft.AspNetCore.Components.CascadingValueSource{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCascadingValue(Of TValue) (serviceCollection As IServiceCollection, sourceFactory As Func(Of IServiceProvider, CascadingValueSource(Of TValue))) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddCascadingValue : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.AddCascadingValue (serviceCollection, sourceFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="sourceFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.AspNetCore.Components.CascadingValueSource&lt;TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="sourceFactory">A callback that supplies a <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" /> within each service provider scope.</param>
        <summary>
             Adds a cascading value to the <paramref name="serviceCollection" />. This is equivalent to having
             a <see cref="T:Microsoft.AspNetCore.Components.CascadingValue`1" /> at the root of the component hierarchy.
            
             With this overload, you can supply a <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" /> which allows you
             to notify about updates to the value later, causing recipients to re-render. This overload should
             only be used if you plan to update the value dynamically.
             </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCascadingValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddCascadingValue&lt;TValue&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, Func&lt;IServiceProvider,TValue&gt; initialValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddCascadingValue&lt;TValue&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, class System.Func`2&lt;class System.IServiceProvider, !!TValue&gt; initialValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.AddCascadingValue``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCascadingValue(Of TValue) (serviceCollection As IServiceCollection, initialValueFactory As Func(Of IServiceProvider, TValue)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddCascadingValue : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Value&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.AddCascadingValue (serviceCollection, initialValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="initialValueFactory" Type="System.Func&lt;System.IServiceProvider,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="initialValueFactory">A callback that supplies a fixed value within each service provider scope.</param>
        <summary>
            Adds a cascading value to the <paramref name="serviceCollection" />. This is equivalent to having
            a fixed <see cref="T:Microsoft.AspNetCore.Components.CascadingValue`1" /> at the root of the component hierarchy.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCascadingValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddCascadingValue&lt;TValue&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, Func&lt;IServiceProvider,TValue&gt; initialValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddCascadingValue&lt;TValue&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, class System.Func`2&lt;class System.IServiceProvider, !!TValue&gt; initialValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.AddCascadingValue``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCascadingValue(Of TValue) (serviceCollection As IServiceCollection, name As String, initialValueFactory As Func(Of IServiceProvider, TValue)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddCascadingValue : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Func&lt;IServiceProvider, 'Value&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.AddCascadingValue (serviceCollection, name, initialValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="initialValueFactory" Type="System.Func&lt;System.IServiceProvider,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">A name for the cascading value. If set, <see cref="T:Microsoft.AspNetCore.Components.CascadingParameterAttribute" /> can be configured to match based on this name.</param>
        <param name="initialValueFactory">A callback that supplies a fixed value within each service provider scope.</param>
        <summary>
            Adds a cascading value to the <paramref name="serviceCollection" />. This is equivalent to having
            a fixed <see cref="T:Microsoft.AspNetCore.Components.CascadingValue`1" /> at the root of the component hierarchy.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddCascadingValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddCascadingValue&lt;TValue&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, Func&lt;IServiceProvider,Microsoft.AspNetCore.Components.CascadingValueSource&lt;TValue&gt;&gt; sourceFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddCascadingValue&lt;TValue&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, class System.Func`2&lt;class System.IServiceProvider, class Microsoft.AspNetCore.Components.CascadingValueSource`1&lt;!!TValue&gt;&gt; sourceFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.TryAddCascadingValue``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Microsoft.AspNetCore.Components.CascadingValueSource{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddCascadingValue(Of TValue) (serviceCollection As IServiceCollection, sourceFactory As Func(Of IServiceProvider, CascadingValueSource(Of TValue)))" />
      <MemberSignature Language="F#" Value="static member TryAddCascadingValue : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, Microsoft.AspNetCore.Components.CascadingValueSource&lt;'Value&gt;&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.TryAddCascadingValue (serviceCollection, sourceFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="sourceFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.AspNetCore.Components.CascadingValueSource&lt;TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="sourceFactory">A callback that supplies a <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" /> within each service provider scope.</param>
        <summary>
            Adds a cascading value to the <paramref name="serviceCollection" />, if none is already registered
            with the value type. This is equivalent to having a fixed <see cref="T:Microsoft.AspNetCore.Components.CascadingValue`1" /> at
            the root of the component hierarchy.
            
            With this overload, you can supply a <see cref="T:Microsoft.AspNetCore.Components.CascadingValueSource`1" /> which allows you
            to notify about updates to the value later, causing recipients to re-render. This overload should
            only be used if you plan to update the value dynamically.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddCascadingValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddCascadingValue&lt;TValue&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, Func&lt;IServiceProvider,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddCascadingValue&lt;TValue&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, class System.Func`2&lt;class System.IServiceProvider, !!TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.TryAddCascadingValue``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddCascadingValue(Of TValue) (serviceCollection As IServiceCollection, valueFactory As Func(Of IServiceProvider, TValue))" />
      <MemberSignature Language="F#" Value="static member TryAddCascadingValue : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Value&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.TryAddCascadingValue (serviceCollection, valueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="valueFactory" Type="System.Func&lt;System.IServiceProvider,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="valueFactory">A callback that supplies a fixed value within each service provider scope.</param>
        <summary>
            Adds a cascading value to the <paramref name="serviceCollection" />, if none is already registered
            with the value type. This is equivalent to having a fixed <see cref="T:Microsoft.AspNetCore.Components.CascadingValue`1" /> at
            the root of the component hierarchy.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddCascadingValue&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddCascadingValue&lt;TValue&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, Func&lt;IServiceProvider,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddCascadingValue&lt;TValue&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string name, class System.Func`2&lt;class System.IServiceProvider, !!TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.TryAddCascadingValue``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddCascadingValue(Of TValue) (serviceCollection As IServiceCollection, name As String, valueFactory As Func(Of IServiceProvider, TValue))" />
      <MemberSignature Language="F#" Value="static member TryAddCascadingValue : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Func&lt;IServiceProvider, 'Value&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.CascadingValueServiceCollectionExtensions.TryAddCascadingValue (serviceCollection, name, valueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="valueFactory" Type="System.Func&lt;System.IServiceProvider,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The value type.</typeparam>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="name">A name for the cascading value. If set, <see cref="T:Microsoft.AspNetCore.Components.CascadingParameterAttribute" /> can be configured to match based on this name.</param>
        <param name="valueFactory">A callback that supplies a fixed value within each service provider scope.</param>
        <summary>
            Adds a cascading value to the <paramref name="serviceCollection" />, if none is already registered
            with the value type, regardless of the <paramref name="name" />. This is equivalent to having a fixed
            <see cref="T:Microsoft.AspNetCore.Components.CascadingValue`1" /> at the root of the component hierarchy.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
