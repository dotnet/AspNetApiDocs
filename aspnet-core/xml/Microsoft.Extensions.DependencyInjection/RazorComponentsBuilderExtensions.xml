<Type Name="RazorComponentsBuilderExtensions" FullName="Microsoft.Extensions.DependencyInjection.RazorComponentsBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RazorComponentsBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RazorComponentsBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.RazorComponentsBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RazorComponentsBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RazorComponentsBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.Server</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods to configure an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for components.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddServerComponents">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder AddServerComponents (this Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder builder, Action&lt;Microsoft.AspNetCore.Components.Server.CircuitOptions&gt;? configure = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder AddServerComponents(class Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder builder, class System.Action`1&lt;class Microsoft.AspNetCore.Components.Server.CircuitOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.RazorComponentsBuilderExtensions.AddServerComponents(Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder,System.Action{Microsoft.AspNetCore.Components.Server.CircuitOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddServerComponents (builder As IRazorComponentsBuilder, Optional configure As Action(Of CircuitOptions) = Nothing) As IRazorComponentsBuilder" />
      <MemberSignature Language="F#" Value="static member AddServerComponents : Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder * Action&lt;Microsoft.AspNetCore.Components.Server.CircuitOptions&gt; -&gt; Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder" Usage="Microsoft.Extensions.DependencyInjection.RazorComponentsBuilderExtensions.AddServerComponents (builder, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.Server</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Server-side Blazor does not currently support native AOT.", Url="https://aka.ms/aspnet/nativeaot")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Server-side Blazor does not currently support native AOT.", Url="https://aka.ms/aspnet/nativeaot")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.Server.CircuitOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder" />.</param>
        <param name="configure">A callback to configure <see cref="T:Microsoft.AspNetCore.Components.Server.CircuitOptions" />.</param>
        <summary>
            Adds services to support rendering interactive server components in a razor components
            application.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Components.Endpoints.IRazorComponentsBuilder" /> that can be used to further customize the configuration.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
