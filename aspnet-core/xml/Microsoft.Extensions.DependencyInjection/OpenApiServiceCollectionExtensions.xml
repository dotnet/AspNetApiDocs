<Type Name="OpenApiServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class OpenApiServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit OpenApiServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module OpenApiServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type OpenApiServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            OpenAPI-related methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOpenApi">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOpenApi (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOpenApi : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register services onto.</param>
        <summary>
            Adds OpenAPI services related to the default document to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOpenApi">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt; configureOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.OpenApi.OpenApiOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOpenApi (services As IServiceCollection, configureOptions As Action(Of OpenApiOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOpenApi : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi (services, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register services onto.</param>
        <param name="configureOptions">A delegate used to configure the target <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" />.</param>
        <summary>
            Adds OpenAPI services related to the default document to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> with the specified options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOpenApi">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string documentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string documentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOpenApi (services As IServiceCollection, documentName As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOpenApi : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi (services, documentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="documentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register services onto.</param>
        <param name="documentName">The name of the OpenAPI document associated with registered services.</param>
        <summary>
            Adds OpenAPI services related to the given document name to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOpenApi">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string documentName, Action&lt;Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt; configureOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOpenApi(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string documentName, class System.Action`1&lt;class Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Microsoft.AspNetCore.OpenApi.OpenApiOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOpenApi (services As IServiceCollection, documentName As String, configureOptions As Action(Of OpenApiOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOpenApi : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OpenApiServiceCollectionExtensions.AddOpenApi (services, documentName, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.OpenApi</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="documentName" Type="System.String" />
        <Parameter Name="configureOptions" Type="System.Action&lt;Microsoft.AspNetCore.OpenApi.OpenApiOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register services onto.</param>
        <param name="documentName">The name of the OpenAPI document associated with registered services.</param>
        <param name="configureOptions">A delegate used to configure the target <see cref="T:Microsoft.AspNetCore.OpenApi.OpenApiOptions" />.</param>
        <summary>
            Adds OpenAPI services related to the given document name to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> with the specified options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
