<Type Name="NewtonsoftJsonProtocolDependencyInjectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions">
  <TypeSignature Language="C#" Value="public static class NewtonsoftJsonProtocolDependencyInjectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NewtonsoftJsonProtocolDependencyInjectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NewtonsoftJsonProtocolDependencyInjectionExtensions" />
  <TypeSignature Language="F#" Value="type NewtonsoftJsonProtocolDependencyInjectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson</AssemblyName>
    <AssemblyVersion>3.0.3.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>3.1.18.0</AssemblyVersion>
    <AssemblyVersion>5.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.9.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNewtonsoftJsonProtocol&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder AddNewtonsoftJsonProtocol&lt;TBuilder&gt; (this TBuilder builder) where TBuilder : Microsoft.AspNetCore.SignalR.ISignalRBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder AddNewtonsoftJsonProtocol&lt;(class Microsoft.AspNetCore.SignalR.ISignalRBuilder) TBuilder&gt;(!!TBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions.AddNewtonsoftJsonProtocol``1(``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNewtonsoftJsonProtocol(Of TBuilder As ISignalRBuilder) (builder As TBuilder) As TBuilder" />
      <MemberSignature Language="F#" Value="static member AddNewtonsoftJsonProtocol : 'Builder -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.SignalR.ISignalRBuilder)" Usage="Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions.AddNewtonsoftJsonProtocol builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.SignalR.ISignalRBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder" /> representing the SignalR server to add JSON protocol support to.</param>
        <summary>
            Enables the JSON protocol for SignalR.
            </summary>
        <returns>The value of <paramref name="builder" /></returns>
        <remarks>
            This has no effect if the JSON protocol has already been enabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewtonsoftJsonProtocol&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static TBuilder AddNewtonsoftJsonProtocol&lt;TBuilder&gt; (this TBuilder builder, Action&lt;Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions&gt; configure) where TBuilder : Microsoft.AspNetCore.SignalR.ISignalRBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBuilder AddNewtonsoftJsonProtocol&lt;(class Microsoft.AspNetCore.SignalR.ISignalRBuilder) TBuilder&gt;(!!TBuilder builder, class System.Action`1&lt;class Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions.AddNewtonsoftJsonProtocol``1(``0,System.Action{Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNewtonsoftJsonProtocol(Of TBuilder As ISignalRBuilder) (builder As TBuilder, configure As Action(Of NewtonsoftJsonHubProtocolOptions)) As TBuilder" />
      <MemberSignature Language="F#" Value="static member AddNewtonsoftJsonProtocol : 'Builder * Action&lt;Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions&gt; -&gt; 'Builder (requires 'Builder :&gt; Microsoft.AspNetCore.SignalR.ISignalRBuilder)" Usage="Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions.AddNewtonsoftJsonProtocol (builder, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson</AssemblyName>
        <AssemblyVersion>3.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>3.1.18.0</AssemblyVersion>
        <AssemblyVersion>5.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.5.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.SignalR.ISignalRBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder" /> representing the SignalR server to add JSON protocol support to.</param>
        <param name="configure">A delegate that can be used to configure the <see cref="T:Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions" /></param>
        <summary>
            Enables the JSON protocol for SignalR and allows options for the JSON protocol to be configured.
            </summary>
        <returns>The value of <paramref name="builder" /></returns>
        <remarks>
            Any options configured here will be applied, even if the JSON protocol has already been registered with the server.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
