<Type Name="MsalWebAssemblyServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class MsalWebAssemblyServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MsalWebAssemblyServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MsalWebAssemblyServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type MsalWebAssemblyServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Authentication.WebAssembly.Msal</AssemblyName>
    <AssemblyVersion>3.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.9.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.5.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Contains extension methods to add authentication to Blazor WebAssembly applications using
            Azure Active Directory or Azure Active Directory B2C.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMsalAuthentication">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddMsalAuthentication (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddMsalAuthentication(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions.AddMsalAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMsalAuthentication (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of MsalProviderOptions))) As IRemoteAuthenticationBuilder(Of RemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddMsalAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;" Usage="Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions.AddMsalAuthentication (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Authentication.WebAssembly.Msal</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configure">A callback to configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds authentication using msal.js to Blazor applications.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMsalAuthentication&lt;TRemoteAuthenticationState&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddMsalAuthentication&lt;TRemoteAuthenticationState&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddMsalAuthentication&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions.AddMsalAuthentication``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMsalAuthentication(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of MsalProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddMsalAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))" Usage="Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions.AddMsalAuthentication (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Authentication.WebAssembly.Msal</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configure">A callback to configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds authentication using msal.js to Blazor applications.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMsalAuthentication&lt;TRemoteAuthenticationState,TAccount&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddMsalAuthentication&lt;TRemoteAuthenticationState,TAccount&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new() where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, !!TAccount&gt; AddMsalAuthentication&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState, (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount) TAccount&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions.AddMsalAuthentication``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMsalAuthentication(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}, TAccount As {RemoteAuthenticationStateNew}) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of MsalProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, TAccount)" />
      <MemberSignature Language="F#" Value="static member AddMsalAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, 'Account (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)" Usage="Microsoft.Extensions.DependencyInjection.MsalWebAssemblyServiceCollectionExtensions.AddMsalAuthentication (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Authentication.WebAssembly.Msal</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TAccount">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.Authentication.WebAssembly.Msal.Models.MsalProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <typeparam name="TAccount">The type of the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount" />.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configure">A callback to configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds authentication using msal.js to Blazor applications.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
