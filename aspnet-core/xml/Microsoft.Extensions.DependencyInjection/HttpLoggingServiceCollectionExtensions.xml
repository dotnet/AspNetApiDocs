<Type Name="HttpLoggingServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class HttpLoggingServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpLoggingServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpLoggingServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type HttpLoggingServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics.Middleware</AssemblyName>
    <AssemblyVersion>9.2.0.0</AssemblyVersion>
    <AssemblyVersion>9.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0013", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0013", UrlFormat="https://aka.ms/dotnet-extensions-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods to register the HTTP logging feature within the service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpLogEnricher&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpLogEnricher&lt;T&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where T : class, Microsoft.AspNetCore.Diagnostics.Logging.IHttpLogEnricher;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpLogEnricher&lt;class (class Microsoft.AspNetCore.Diagnostics.Logging.IHttpLogEnricher) T&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLogEnricher``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpLogEnricher(Of T As {Class, IHttpLogEnricher}) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpLogEnricher : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'T : null and 'T :&gt; Microsoft.AspNetCore.Diagnostics.Logging.IHttpLogEnricher)" Usage="Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLogEnricher services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Middleware</AssemblyName>
        <AssemblyVersion>9.2.0.0</AssemblyVersion>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.AspNetCore.Diagnostics.Logging.IHttpLogEnricher</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of enricher.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the instance of <typeparamref name="T" /> to.</param>
        <summary>
            Adds an enricher instance of <typeparamref name="T" /> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to enrich incoming HTTP requests logs.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="services" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHttpLoggingRedaction">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpLoggingRedaction (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpLoggingRedaction(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.Configuration.IConfigurationSection section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLoggingRedaction(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpLoggingRedaction (services As IServiceCollection, section As IConfigurationSection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpLoggingRedaction : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.Configuration.IConfigurationSection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLoggingRedaction (services, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Middleware</AssemblyName>
        <AssemblyVersion>9.2.0.0</AssemblyVersion>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="section" Type="Microsoft.Extensions.Configuration.IConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="services">The service collection.</param>
        <param name="section">The configuration section with the redaction settings.</param>
        <summary>
            Enables enrichment and redaction of HTTP request logging output.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpLoggingRedaction">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpLoggingRedaction (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions&gt;? configure = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddHttpLoggingRedaction(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLoggingRedaction(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpLoggingRedaction (services As IServiceCollection, Optional configure As Action(Of LoggingRedactionOptions) = Nothing) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddHttpLoggingRedaction : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLoggingRedaction (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Middleware</AssemblyName>
        <AssemblyVersion>9.2.0.0</AssemblyVersion>
        <AssemblyVersion>9.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="services">The service collection.</param>
        <param name="configure">Configures the redaction options.</param>
        <summary>
            Enables enrichment and redaction of HTTP request logging output.
            </summary>
        <returns>The value of <paramref name="services" />.</returns>
        <remarks>
            This will enable <see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingOptions.CombineLogs" /> and <see cref="F:Microsoft.AspNetCore.HttpLogging.HttpLoggingFields.Duration" /> by default.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="services" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
