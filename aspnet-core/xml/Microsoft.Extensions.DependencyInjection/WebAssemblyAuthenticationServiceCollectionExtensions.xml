<Type Name="WebAssemblyAuthenticationServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class WebAssemblyAuthenticationServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebAssemblyAuthenticationServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WebAssemblyAuthenticationServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type WebAssemblyAuthenticationServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
    <AssemblyVersion>3.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.9.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.5.0</AssemblyVersion>
    <AssemblyVersion>6.0.6.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.5.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Contains extension methods to add authentication to Blazor WebAssembly applications.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddApiAuthorization">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApiAuthorization (services As IServiceCollection) As IRemoteAuthenticationBuilder(Of RemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddApiAuthorization : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddApiAuthorization">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApiAuthorization (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of ApiAuthorizationProviderOptions))) As IRemoteAuthenticationBuilder(Of RemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddApiAuthorization : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddApiAuthorization&lt;TRemoteAuthenticationState&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization&lt;TRemoteAuthenticationState&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApiAuthorization(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}) (services As IServiceCollection) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddApiAuthorization : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddApiAuthorization&lt;TRemoteAuthenticationState&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization&lt;TRemoteAuthenticationState&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddApiAuthorization&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApiAuthorization(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of ApiAuthorizationProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddApiAuthorization : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddApiAuthorization&lt;TRemoteAuthenticationState,TAccount&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddApiAuthorization&lt;TRemoteAuthenticationState,TAccount&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new() where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, !!TAccount&gt; AddApiAuthorization&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState, (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount) TAccount&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApiAuthorization(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}, TAccount As {RemoteAuthenticationStateNew}) (services As IServiceCollection) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, TAccount)" />
      <MemberSignature Language="F#" Value="static member AddApiAuthorization : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, 'Account (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TAccount">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <typeparam name="TAccount">The account type.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddApiAuthorization&lt;TRemoteAuthenticationState,TAccount&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddApiAuthorization&lt;TRemoteAuthenticationState,TAccount&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new() where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, !!TAccount&gt; AddApiAuthorization&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState, (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount) TAccount&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddApiAuthorization(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}, TAccount As {RemoteAuthenticationStateNew}) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of ApiAuthorizationProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, TAccount)" />
      <MemberSignature Language="F#" Value="static member AddApiAuthorization : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, 'Account (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddApiAuthorization (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TAccount">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <typeparam name="TAccount">The account type.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOidcAuthentication">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddOidcAuthentication (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddOidcAuthentication(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddOidcAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOidcAuthentication (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of OidcProviderOptions))) As IRemoteAuthenticationBuilder(Of RemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddOidcAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddOidcAuthentication (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOidcAuthentication&lt;TRemoteAuthenticationState&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddOidcAuthentication&lt;TRemoteAuthenticationState&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt; AddOidcAuthentication&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddOidcAuthentication``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOidcAuthentication(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of OidcProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, RemoteUserAccount)" />
      <MemberSignature Language="F#" Value="static member AddOidcAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState))" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddOidcAuthentication (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOidcAuthentication&lt;TRemoteAuthenticationState,TAccount&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddOidcAuthentication&lt;TRemoteAuthenticationState,TAccount&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, new() where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, !!TAccount&gt; AddOidcAuthentication&lt;.ctor (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState, (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount) TAccount&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddOidcAuthentication``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOidcAuthentication(Of TRemoteAuthenticationState As {RemoteAuthenticationStateNew}, TAccount As {RemoteAuthenticationStateNew}) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of OidcProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, TAccount)" />
      <MemberSignature Language="F#" Value="static member AddOidcAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, 'Account (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'RemoteAuthenticationState : (new : unit -&gt; 'RemoteAuthenticationState) and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddOidcAuthentication (services, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TAccount">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The type of the remote authentication state.</typeparam>
        <typeparam name="TAccount">The account type.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions" /> and the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRemoteAuthentication&lt;TRemoteAuthenticationState,TAccount,TProviderOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddRemoteAuthentication&lt;TRemoteAuthenticationState,TAccount,TProviderOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount where TProviderOptions : class, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, !!TAccount&gt; AddRemoteAuthentication&lt;(class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState, (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount) TAccount, class .ctor TProviderOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddRemoteAuthentication``3(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRemoteAuthentication(Of TRemoteAuthenticationState As RemoteAuthenticationState, TAccount As RemoteAuthenticationState, TProviderOptions As RemoteAuthenticationState) (services As IServiceCollection) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, TAccount)" />
      <MemberSignature Language="F#" Value="static member AddRemoteAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, 'Account (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount and 'ProviderOptions : null and 'ProviderOptions : (new : unit -&gt; 'ProviderOptions))" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddRemoteAuthentication services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TAccount">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TProviderOptions">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The state to be persisted across authentication operations.</typeparam>
        <typeparam name="TAccount">The account type.</typeparam>
        <typeparam name="TProviderOptions">The configuration options of the underlying provider being used for handling the authentication operations.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <summary>
            Adds support for authentication for SPA applications using the given <typeparamref name="TProviderOptions" /> and
            <typeparamref name="TRemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRemoteAuthentication&lt;TRemoteAuthenticationState,TAccount,TProviderOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddRemoteAuthentication&lt;TRemoteAuthenticationState,TAccount,TProviderOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;TProviderOptions&gt;&gt; configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount where TProviderOptions : class, new();" FrameworkAlternate="aspnetcore-3.1;aspnetcore-5.0;aspnetcore-6.0;aspnetcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder`2&lt;!!TRemoteAuthenticationState, !!TAccount&gt; AddRemoteAuthentication&lt;(class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState) TRemoteAuthenticationState, (class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount) TAccount, class .ctor TProviderOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1&lt;!!TProviderOptions&gt;&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddRemoteAuthentication``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRemoteAuthentication(Of TRemoteAuthenticationState As RemoteAuthenticationState, TAccount As RemoteAuthenticationState, TProviderOptions As RemoteAuthenticationState) (services As IServiceCollection, configure As Action(Of RemoteAuthenticationOptions(Of TProviderOptions))) As IRemoteAuthenticationBuilder(Of TRemoteAuthenticationState, TAccount)" />
      <MemberSignature Language="F#" Value="static member AddRemoteAuthentication : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;'ProviderOptions&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;'RemoteAuthenticationState, 'Account (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount)&gt; (requires 'RemoteAuthenticationState :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState and 'Account :&gt; Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount and 'ProviderOptions : null and 'ProviderOptions : (new : unit -&gt; 'ProviderOptions))" Usage="Microsoft.Extensions.DependencyInjection.WebAssemblyAuthenticationServiceCollectionExtensions.AddRemoteAuthentication (services, configure)" />
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt; AddRemoteAuthentication&lt;TRemoteAuthenticationState,TAccount,TProviderOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;TProviderOptions&gt;&gt;? configure) where TRemoteAuthenticationState : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState where TAccount : Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount where TProviderOptions : class, new();" FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebAssembly.Authentication</AssemblyName>
        <AssemblyVersion>3.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.9.0</AssemblyVersion>
        <AssemblyVersion>6.0.6.0</AssemblyVersion>
        <AssemblyVersion>7.0.5.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IRemoteAuthenticationBuilder&lt;TRemoteAuthenticationState,TAccount&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRemoteAuthenticationState">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TAccount">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-6.0;aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TProviderOptions">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-7.0;aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions&lt;TProviderOptions&gt;&gt;">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-8.0;aspnetcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TRemoteAuthenticationState">The state to be persisted across authentication operations.</typeparam>
        <typeparam name="TAccount">The account type.</typeparam>
        <typeparam name="TProviderOptions">The configuration options of the underlying provider being used for handling the authentication operations.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1" />.</param>
        <summary>
            Adds support for authentication for SPA applications using the given <typeparamref name="TProviderOptions" /> and
            <typeparamref name="TRemoteAuthenticationState" />.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> where the services were registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
